// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: admin/v1/admin.proto

package admin

import (
	api "github.com/alphauslabs/blue-sdk-go/api"
	protos "github.com/alphauslabs/blue-sdk-go/protos"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for the Admin.ListAccountGroups rpc.
type ListAccountGroupsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountGroupsRequest) Reset() {
	*x = ListAccountGroupsRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountGroupsRequest) ProtoMessage() {}

func (x *ListAccountGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListAccountGroupsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{0}
}

// Response message for the Admin.ListAccountGroups rpc.
type ListAccountGroupsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountGroups []*api.AccountGroup    `protobuf:"bytes,1,rep,name=accountGroups,proto3" json:"accountGroups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountGroupsResponse) Reset() {
	*x = ListAccountGroupsResponse{}
	mi := &file_admin_v1_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountGroupsResponse) ProtoMessage() {}

func (x *ListAccountGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListAccountGroupsResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{1}
}

func (x *ListAccountGroupsResponse) GetAccountGroups() []*api.AccountGroup {
	if x != nil {
		return x.AccountGroups
	}
	return nil
}

// Request message for the Admin.GetAccountGroup rpc.
type GetAccountGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountGroupRequest) Reset() {
	*x = GetAccountGroupRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountGroupRequest) ProtoMessage() {}

func (x *GetAccountGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountGroupRequest.ProtoReflect.Descriptor instead.
func (*GetAccountGroupRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{2}
}

func (x *GetAccountGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response message for the Admin.GetAccountGroup rpc.
type GetAccountGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AcctGroup     *api.AccountGroup      `protobuf:"bytes,1,opt,name=acctGroup,proto3" json:"acctGroup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountGroupResponse) Reset() {
	*x = GetAccountGroupResponse{}
	mi := &file_admin_v1_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountGroupResponse) ProtoMessage() {}

func (x *GetAccountGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountGroupResponse.ProtoReflect.Descriptor instead.
func (*GetAccountGroupResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountGroupResponse) GetAcctGroup() *api.AccountGroup {
	if x != nil {
		return x.AcctGroup
	}
	return nil
}

// Request message for the Admin.GetDefaultCostAccessTemplateUrl rpc.
type GetDefaultCostAccessTemplateUrlRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Valid values are `default`, `s3only`, and `apionly`. Defaults to `default` if empty.
	//
	// `default` - Template for setting up both CUR export and read-only access to cost information. If selected, you need to deploy this template to `us-east-1` region as CloudFormation only supports the `AWS::CUR::ReportDefinition` in that region at the moment. The target S3 bucket will also be created in that region. If you prefer your S3 bucket to be located in a different region, you can use the template from this API by setting the type to `s3only`. After your S3 bucket is ready, call this API again (type is `default`) and set the `CurS3BucketOption` parameter to `USE_EXISTING`, then set your bucket name and region accordingly. This is the default for Ripple, unless specified otherwise.
	//
	// `apionly` - Template for setting up ready-only access to cost information. Handy if you already have exported your CUR to Alphaus through other means (i.e. manual setup). This template is the same as the `default` type but without the CUR export definitions. Although not required, we recommend you to deploy this template to allow us to query your cost-related information such as Reserved Instances, Saving Plans, etc. through the AWS API. At the moment, we only rely on CUR data which is a best-effort basis and sometimes not accurate. This is the default for Wave(Pro), unless specified otherwise.
	//
	// `s3only` - A helper template for creating an S3 bucket to be used for CUR export.
	//
	// `default-2.0`- For default cur 2.0 templates.
	//
	// `s3only-2.0` - For s3only cur 2.0 templates.
	//
	// All templates are publicly available from the reponse link (`templateUrl`) if you want to audit the included permissions.
	Type          string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDefaultCostAccessTemplateUrlRequest) Reset() {
	*x = GetDefaultCostAccessTemplateUrlRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDefaultCostAccessTemplateUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultCostAccessTemplateUrlRequest) ProtoMessage() {}

func (x *GetDefaultCostAccessTemplateUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultCostAccessTemplateUrlRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultCostAccessTemplateUrlRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{4}
}

func (x *GetDefaultCostAccessTemplateUrlRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Response message for the Admin.GetDefaultCostAccessTemplateUrl rpc.
type GetDefaultCostAccessTemplateUrlResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The CloudFormation launch url. Open it in your browser.
	LaunchUrl string `protobuf:"bytes,1,opt,name=launchUrl,proto3" json:"launchUrl,omitempty"`
	// The latest CloudFormation template. The version is included in the filename.
	TemplateUrl string `protobuf:"bytes,2,opt,name=templateUrl,proto3" json:"templateUrl,omitempty"`
	// The default stack name used. Can be modified.
	StackName string `protobuf:"bytes,3,opt,name=stackName,proto3" json:"stackName,omitempty"`
	// The AWS account that will receive the access. Do not change.
	Principal string `protobuf:"bytes,4,opt,name=principal,proto3" json:"principal,omitempty"`
	// The external id for this role. Do not change.
	ExternalId    string `protobuf:"bytes,5,opt,name=externalId,proto3" json:"externalId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDefaultCostAccessTemplateUrlResponse) Reset() {
	*x = GetDefaultCostAccessTemplateUrlResponse{}
	mi := &file_admin_v1_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDefaultCostAccessTemplateUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultCostAccessTemplateUrlResponse) ProtoMessage() {}

func (x *GetDefaultCostAccessTemplateUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultCostAccessTemplateUrlResponse.ProtoReflect.Descriptor instead.
func (*GetDefaultCostAccessTemplateUrlResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{5}
}

func (x *GetDefaultCostAccessTemplateUrlResponse) GetLaunchUrl() string {
	if x != nil {
		return x.LaunchUrl
	}
	return ""
}

func (x *GetDefaultCostAccessTemplateUrlResponse) GetTemplateUrl() string {
	if x != nil {
		return x.TemplateUrl
	}
	return ""
}

func (x *GetDefaultCostAccessTemplateUrlResponse) GetStackName() string {
	if x != nil {
		return x.StackName
	}
	return ""
}

func (x *GetDefaultCostAccessTemplateUrlResponse) GetPrincipal() string {
	if x != nil {
		return x.Principal
	}
	return ""
}

func (x *GetDefaultCostAccessTemplateUrlResponse) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

// Request message for the Admin.ListDefaultCostAccess rpc.
type ListDefaultCostAccessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDefaultCostAccessRequest) Reset() {
	*x = ListDefaultCostAccessRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDefaultCostAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDefaultCostAccessRequest) ProtoMessage() {}

func (x *ListDefaultCostAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDefaultCostAccessRequest.ProtoReflect.Descriptor instead.
func (*ListDefaultCostAccessRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{6}
}

// Request message for the Admin.GetDefaultCostAccess rpc.
type GetDefaultCostAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The target AWS account to query.
	Target        string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDefaultCostAccessRequest) Reset() {
	*x = GetDefaultCostAccessRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDefaultCostAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultCostAccessRequest) ProtoMessage() {}

func (x *GetDefaultCostAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultCostAccessRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultCostAccessRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{7}
}

func (x *GetDefaultCostAccessRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// Response message for the Admin.GetDefaultCostAccess, Admin.CreateDefaultCostAccess rpc.
type DefaultCostAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The queried target account.
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// The role ARN that provides the cross-account access permissions.
	RoleArn string `protobuf:"bytes,2,opt,name=roleArn,proto3" json:"roleArn,omitempty"`
	// The external id for this role.
	ExternalId string `protobuf:"bytes,3,opt,name=externalId,proto3" json:"externalId,omitempty"`
	// The id of the CloudFormation stack deployed in the target account.
	StackId string `protobuf:"bytes,4,opt,name=stackId,proto3" json:"stackId,omitempty"`
	// The region where the stack is deployed.
	StackRegion string `protobuf:"bytes,5,opt,name=stackRegion,proto3" json:"stackRegion,omitempty"`
	// The latest template used to deploy the stack.
	TemplateUrl string `protobuf:"bytes,6,opt,name=templateUrl,proto3" json:"templateUrl,omitempty"`
	// This can be `latest`, `outdated`, or some error information.
	Status string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	// The last updated timestamp, RFC3339 UTC.
	LastUpdated   string `protobuf:"bytes,8,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DefaultCostAccess) Reset() {
	*x = DefaultCostAccess{}
	mi := &file_admin_v1_admin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DefaultCostAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCostAccess) ProtoMessage() {}

func (x *DefaultCostAccess) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCostAccess.ProtoReflect.Descriptor instead.
func (*DefaultCostAccess) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{8}
}

func (x *DefaultCostAccess) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *DefaultCostAccess) GetRoleArn() string {
	if x != nil {
		return x.RoleArn
	}
	return ""
}

func (x *DefaultCostAccess) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *DefaultCostAccess) GetStackId() string {
	if x != nil {
		return x.StackId
	}
	return ""
}

func (x *DefaultCostAccess) GetStackRegion() string {
	if x != nil {
		return x.StackRegion
	}
	return ""
}

func (x *DefaultCostAccess) GetTemplateUrl() string {
	if x != nil {
		return x.TemplateUrl
	}
	return ""
}

func (x *DefaultCostAccess) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DefaultCostAccess) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// Request message for the Admin.CreateDefaultCostAccess rpc.
type CreateDefaultCostAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The target AWS account to validate.
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// Optional. The CUR type. Values should be either 'legacy' or '2.0'. Defaults to 'legacy' if empty.
	CurType       string `protobuf:"bytes,2,opt,name=curType,proto3" json:"curType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDefaultCostAccessRequest) Reset() {
	*x = CreateDefaultCostAccessRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDefaultCostAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDefaultCostAccessRequest) ProtoMessage() {}

func (x *CreateDefaultCostAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDefaultCostAccessRequest.ProtoReflect.Descriptor instead.
func (*CreateDefaultCostAccessRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{9}
}

func (x *CreateDefaultCostAccessRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *CreateDefaultCostAccessRequest) GetCurType() string {
	if x != nil {
		return x.CurType
	}
	return ""
}

// Request message for the Admin.UpdateDefaultCostAccess rpc.
type UpdateDefaultCostAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The target AWS account to update.
	Target        string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDefaultCostAccessRequest) Reset() {
	*x = UpdateDefaultCostAccessRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDefaultCostAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDefaultCostAccessRequest) ProtoMessage() {}

func (x *UpdateDefaultCostAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDefaultCostAccessRequest.ProtoReflect.Descriptor instead.
func (*UpdateDefaultCostAccessRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateDefaultCostAccessRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// Request message for the Admin.DeleteDefaultCostAccess rpc.
type DeleteDefaultCostAccessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The target AWS account to delete.
	Target        string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDefaultCostAccessRequest) Reset() {
	*x = DeleteDefaultCostAccessRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDefaultCostAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDefaultCostAccessRequest) ProtoMessage() {}

func (x *DeleteDefaultCostAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDefaultCostAccessRequest.ProtoReflect.Descriptor instead.
func (*DeleteDefaultCostAccessRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteDefaultCostAccessRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// Request message for the Admin.GetCloudWatchMetricsStreamTemplateUrl rpc.
type GetCloudWatchMetricsStreamTemplateUrlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCloudWatchMetricsStreamTemplateUrlRequest) Reset() {
	*x = GetCloudWatchMetricsStreamTemplateUrlRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCloudWatchMetricsStreamTemplateUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudWatchMetricsStreamTemplateUrlRequest) ProtoMessage() {}

func (x *GetCloudWatchMetricsStreamTemplateUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudWatchMetricsStreamTemplateUrlRequest.ProtoReflect.Descriptor instead.
func (*GetCloudWatchMetricsStreamTemplateUrlRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{12}
}

// Response message for the Admin.GetCloudWatchMetricsStreamTemplateUrl rpc.
type GetCloudWatchMetricsStreamTemplateUrlResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The CloudFormation launch url. Open it in your browser.
	LaunchUrl string `protobuf:"bytes,1,opt,name=launchUrl,proto3" json:"launchUrl,omitempty"`
	// The latest CloudFormation template. The version is included in the filename.
	TemplateUrl string `protobuf:"bytes,2,opt,name=templateUrl,proto3" json:"templateUrl,omitempty"`
	// The default stack name used. Can be modified.
	StackName string `protobuf:"bytes,3,opt,name=stackName,proto3" json:"stackName,omitempty"`
	// The external id for this role. Do not change.
	ExternalId    string `protobuf:"bytes,4,opt,name=externalId,proto3" json:"externalId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCloudWatchMetricsStreamTemplateUrlResponse) Reset() {
	*x = GetCloudWatchMetricsStreamTemplateUrlResponse{}
	mi := &file_admin_v1_admin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCloudWatchMetricsStreamTemplateUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudWatchMetricsStreamTemplateUrlResponse) ProtoMessage() {}

func (x *GetCloudWatchMetricsStreamTemplateUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudWatchMetricsStreamTemplateUrlResponse.ProtoReflect.Descriptor instead.
func (*GetCloudWatchMetricsStreamTemplateUrlResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{13}
}

func (x *GetCloudWatchMetricsStreamTemplateUrlResponse) GetLaunchUrl() string {
	if x != nil {
		return x.LaunchUrl
	}
	return ""
}

func (x *GetCloudWatchMetricsStreamTemplateUrlResponse) GetTemplateUrl() string {
	if x != nil {
		return x.TemplateUrl
	}
	return ""
}

func (x *GetCloudWatchMetricsStreamTemplateUrlResponse) GetStackName() string {
	if x != nil {
		return x.StackName
	}
	return ""
}

func (x *GetCloudWatchMetricsStreamTemplateUrlResponse) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

// Request message for the Admin.CreateCloudWatchMetricsStream rpc.
type CreateCloudWatchMetricsStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The target AWS account to validate.
	Target        string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCloudWatchMetricsStreamRequest) Reset() {
	*x = CreateCloudWatchMetricsStreamRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCloudWatchMetricsStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudWatchMetricsStreamRequest) ProtoMessage() {}

func (x *CreateCloudWatchMetricsStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudWatchMetricsStreamRequest.ProtoReflect.Descriptor instead.
func (*CreateCloudWatchMetricsStreamRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{14}
}

func (x *CreateCloudWatchMetricsStreamRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// Response message for the Admin.CreateCloudWatchMetricsStream rpc.
type CloudWatchMetricsStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The queried target account.
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// The external id for this role.
	ExternalId string `protobuf:"bytes,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	// The id of the CloudFormation stack deployed in the target account.
	StackId string `protobuf:"bytes,3,opt,name=stackId,proto3" json:"stackId,omitempty"`
	// The region where the stack is deployed.
	StackRegion string `protobuf:"bytes,4,opt,name=stackRegion,proto3" json:"stackRegion,omitempty"`
	// The latest template used to deploy the stack.
	TemplateUrl string `protobuf:"bytes,5,opt,name=templateUrl,proto3" json:"templateUrl,omitempty"`
	// This can be `latest`, `outdated`, or some error information.
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	// The last updated timestamp, RFC3339 UTC.
	LastUpdated   string `protobuf:"bytes,7,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudWatchMetricsStream) Reset() {
	*x = CloudWatchMetricsStream{}
	mi := &file_admin_v1_admin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudWatchMetricsStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudWatchMetricsStream) ProtoMessage() {}

func (x *CloudWatchMetricsStream) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudWatchMetricsStream.ProtoReflect.Descriptor instead.
func (*CloudWatchMetricsStream) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{15}
}

func (x *CloudWatchMetricsStream) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *CloudWatchMetricsStream) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *CloudWatchMetricsStream) GetStackId() string {
	if x != nil {
		return x.StackId
	}
	return ""
}

func (x *CloudWatchMetricsStream) GetStackRegion() string {
	if x != nil {
		return x.StackRegion
	}
	return ""
}

func (x *CloudWatchMetricsStream) GetTemplateUrl() string {
	if x != nil {
		return x.TemplateUrl
	}
	return ""
}

func (x *CloudWatchMetricsStream) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CloudWatchMetricsStream) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

// Request message for the Admin.GetNotificationSettings rpc.
type GetNotificationSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationSettingsRequest) Reset() {
	*x = GetNotificationSettingsRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationSettingsRequest) ProtoMessage() {}

func (x *GetNotificationSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationSettingsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{16}
}

// Request message for the Admin.SaveNotificationSettings rpc.
type SaveNotificationSettingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Enable or disable notifications globally.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Optional. If non-empty, set this notification channel id as the default channel.
	DefaultChannel string `protobuf:"bytes,2,opt,name=defaultChannel,proto3" json:"defaultChannel,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SaveNotificationSettingsRequest) Reset() {
	*x = SaveNotificationSettingsRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveNotificationSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveNotificationSettingsRequest) ProtoMessage() {}

func (x *SaveNotificationSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveNotificationSettingsRequest.ProtoReflect.Descriptor instead.
func (*SaveNotificationSettingsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{17}
}

func (x *SaveNotificationSettingsRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SaveNotificationSettingsRequest) GetDefaultChannel() string {
	if x != nil {
		return x.DefaultChannel
	}
	return ""
}

// Request message for the Admin.ListNotificationChannels rpc.
type ListNotificationChannelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationChannelsRequest) Reset() {
	*x = ListNotificationChannelsRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationChannelsRequest) ProtoMessage() {}

func (x *ListNotificationChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationChannelsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationChannelsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{18}
}

// Response message for the Admin.ListNotificationChannels rpc.
type ListNotificationChannelsResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Channels      []*api.NotificationChannel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationChannelsResponse) Reset() {
	*x = ListNotificationChannelsResponse{}
	mi := &file_admin_v1_admin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationChannelsResponse) ProtoMessage() {}

func (x *ListNotificationChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationChannelsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationChannelsResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{19}
}

func (x *ListNotificationChannelsResponse) GetChannels() []*api.NotificationChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

// Request message for the Admin.GetNotificationChannel rpc.
type GetNotificationChannelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional.
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationChannelRequest) Reset() {
	*x = GetNotificationChannelRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationChannelRequest) ProtoMessage() {}

func (x *GetNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{20}
}

func (x *GetNotificationChannelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetNotificationChannelRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// Request message for the Admin.CreateNotificationChannel rpc.
type CreateNotificationChannelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Name of the notification channel.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Valid values: `email`, `slack`, `msteams`.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Required if type = `email`.
	Email *api.EmailChannel `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Required if type = `slack`.
	Slack *api.SlackChannel `protobuf:"bytes,4,opt,name=slack,proto3" json:"slack,omitempty"`
	// Required if type = `msteams`.
	Msteams *api.MSTeamsChannel `protobuf:"bytes,5,opt,name=msteams,proto3" json:"msteams,omitempty"`
	// Optional. For Octo use only: `octo`.
	Product       string `protobuf:"bytes,6,opt,name=product,proto3" json:"product,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationChannelRequest) Reset() {
	*x = CreateNotificationChannelRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationChannelRequest) ProtoMessage() {}

func (x *CreateNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{21}
}

func (x *CreateNotificationChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNotificationChannelRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateNotificationChannelRequest) GetEmail() *api.EmailChannel {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *CreateNotificationChannelRequest) GetSlack() *api.SlackChannel {
	if x != nil {
		return x.Slack
	}
	return nil
}

func (x *CreateNotificationChannelRequest) GetMsteams() *api.MSTeamsChannel {
	if x != nil {
		return x.Msteams
	}
	return nil
}

func (x *CreateNotificationChannelRequest) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

// Request message for the Admin.CreateDefaultNotificationChannel rpc.
type CreateDefaultNotificationChannelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDefaultNotificationChannelRequest) Reset() {
	*x = CreateDefaultNotificationChannelRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDefaultNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDefaultNotificationChannelRequest) ProtoMessage() {}

func (x *CreateDefaultNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDefaultNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateDefaultNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{22}
}

// Request message for the Admin.UpdateNotificationChannel rpc.
type UpdateNotificationChannelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the notification channel to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. Name of the notification channel.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Valid values: `email`, `slack`, `msteams`.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Required if type = `email`.
	Email *api.EmailChannel `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// Required if type = `slack`.
	Slack *api.SlackChannel `protobuf:"bytes,5,opt,name=slack,proto3" json:"slack,omitempty"`
	// Required if type = `msteams`.
	Msteams *api.MSTeamsChannel `protobuf:"bytes,6,opt,name=msteams,proto3" json:"msteams,omitempty"`
	// Optional. For Octo use only: `octo`.
	Product       string `protobuf:"bytes,7,opt,name=product,proto3" json:"product,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationChannelRequest) Reset() {
	*x = UpdateNotificationChannelRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationChannelRequest) ProtoMessage() {}

func (x *UpdateNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateNotificationChannelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNotificationChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNotificationChannelRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateNotificationChannelRequest) GetEmail() *api.EmailChannel {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *UpdateNotificationChannelRequest) GetSlack() *api.SlackChannel {
	if x != nil {
		return x.Slack
	}
	return nil
}

func (x *UpdateNotificationChannelRequest) GetMsteams() *api.MSTeamsChannel {
	if x != nil {
		return x.Msteams
	}
	return nil
}

func (x *UpdateNotificationChannelRequest) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

// Request message for the Admin.DeleteNotificationChannel rpc.
type DeleteNotificationChannelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the notification channel to delete.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationChannelRequest) Reset() {
	*x = DeleteNotificationChannelRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationChannelRequest) ProtoMessage() {}

func (x *DeleteNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteNotificationChannelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message for the Admin.ListNotifications rpc.
type ListNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{25}
}

// Response message for the Admin.ListNotifications rpc.
type ListNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*api.Notification    `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsResponse) Reset() {
	*x = ListNotificationsResponse{}
	mi := &file_admin_v1_admin_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsResponse) ProtoMessage() {}

func (x *ListNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{26}
}

func (x *ListNotificationsResponse) GetNotifications() []*api.Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type NotificationAccount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required.
	Vendor string `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Required.
	AccountId     string `protobuf:"bytes,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationAccount) Reset() {
	*x = NotificationAccount{}
	mi := &file_admin_v1_admin_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationAccount) ProtoMessage() {}

func (x *NotificationAccount) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationAccount.ProtoReflect.Descriptor instead.
func (*NotificationAccount) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{27}
}

func (x *NotificationAccount) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *NotificationAccount) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// Request message for the Admin.GetNotificationTypeChannels rpc.
type GetNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required
	// Valid values:
	// `InvoiceCalculationStarted`,
	// `InvoiceCalculationFinished`,
	// `CurUpdatedAfterInvoice`.
	// `AccountBudgetAlert`.
	NotificationType string `protobuf:"bytes,2,opt,name=notificationType,proto3" json:"notificationType,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{28}
}

func (x *GetNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

// Request message for the Admin.CreateNotificationTypeChannels rpc.
type CreateNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required
	// Valid values:
	// `InvoiceCalculationStarted`,
	// `InvoiceCalculationFinished`,
	// `CurUpdatedAfterInvoice`.
	// `AccountBudgetAlert`.
	NotificationType string `protobuf:"bytes,1,opt,name=notificationType,proto3" json:"notificationType,omitempty"`
	// Required
	Channels []string `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	// Required
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Optional. only available Wave(Pro).
	Account       *NotificationAccount `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationRequest) Reset() {
	*x = CreateNotificationRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRequest) ProtoMessage() {}

func (x *CreateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{29}
}

func (x *CreateNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *CreateNotificationRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *CreateNotificationRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateNotificationRequest) GetAccount() *NotificationAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

// Request message for the Admin.UpdateNotificationTypeChannels rpc.
type UpdateNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required
	Channels []string `protobuf:"bytes,2,rep,name=channels,proto3" json:"channels,omitempty"`
	// Required
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Required
	// Valid values:
	// `InvoiceCalculationStarted`,
	// `InvoiceCalculationFinished`,
	// `CurUpdatedAfterInvoice`.
	// `AccountBudgetAlert`.
	NotificationType string `protobuf:"bytes,4,opt,name=notificationType,proto3" json:"notificationType,omitempty"`
	// Optional. only available Wave(Pro).
	Account       *NotificationAccount `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNotificationRequest) Reset() {
	*x = UpdateNotificationRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNotificationRequest) ProtoMessage() {}

func (x *UpdateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNotificationRequest.ProtoReflect.Descriptor instead.
func (*UpdateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNotificationRequest) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *UpdateNotificationRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *UpdateNotificationRequest) GetAccount() *NotificationAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

// Request message for the Admin.DeleteNotification rpc.
type DeleteNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required
	// Valid values:
	// `InvoiceCalculationStarted`,
	// `InvoiceCalculationFinished`,
	// `CurUpdatedAfterInvoice`.
	// `AccountBudgetAlert`.
	NotificationType string `protobuf:"bytes,2,opt,name=notificationType,proto3" json:"notificationType,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

// Request message for Admin.CreateProformaCur rpc
type CreateProformaCurRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required.
	PayerId string `protobuf:"bytes,1,opt,name=payerId,proto3" json:"payerId,omitempty"`
	// Required.
	BillingInternalId string `protobuf:"bytes,2,opt,name=billingInternalId,proto3" json:"billingInternalId,omitempty"`
	// Required.
	ReportName string `protobuf:"bytes,3,opt,name=reportName,proto3" json:"reportName,omitempty"`
	// Optional. Default value: `alphaus-proforma-cur-export`
	S3BucketName string `protobuf:"bytes,4,opt,name=s3BucketName,proto3" json:"s3BucketName,omitempty"`
	// Optional. Default value: `pre`
	S3Prefix string `protobuf:"bytes,5,opt,name=s3Prefix,proto3" json:"s3Prefix,omitempty"`
	// Optional. Default value: `us-east-1`
	S3Region      string `protobuf:"bytes,6,opt,name=s3Region,proto3" json:"s3Region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProformaCurRequest) Reset() {
	*x = CreateProformaCurRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProformaCurRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProformaCurRequest) ProtoMessage() {}

func (x *CreateProformaCurRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProformaCurRequest.ProtoReflect.Descriptor instead.
func (*CreateProformaCurRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{32}
}

func (x *CreateProformaCurRequest) GetPayerId() string {
	if x != nil {
		return x.PayerId
	}
	return ""
}

func (x *CreateProformaCurRequest) GetBillingInternalId() string {
	if x != nil {
		return x.BillingInternalId
	}
	return ""
}

func (x *CreateProformaCurRequest) GetReportName() string {
	if x != nil {
		return x.ReportName
	}
	return ""
}

func (x *CreateProformaCurRequest) GetS3BucketName() string {
	if x != nil {
		return x.S3BucketName
	}
	return ""
}

func (x *CreateProformaCurRequest) GetS3Prefix() string {
	if x != nil {
		return x.S3Prefix
	}
	return ""
}

func (x *CreateProformaCurRequest) GetS3Region() string {
	if x != nil {
		return x.S3Region
	}
	return ""
}

type ProformaCur struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OrgId             string                 `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	PayerId           string                 `protobuf:"bytes,2,opt,name=payerId,proto3" json:"payerId,omitempty"`
	BillingInternalId string                 `protobuf:"bytes,3,opt,name=billingInternalId,proto3" json:"billingInternalId,omitempty"`
	ReportName        string                 `protobuf:"bytes,4,opt,name=reportName,proto3" json:"reportName,omitempty"`
	BucketName        string                 `protobuf:"bytes,5,opt,name=bucketName,proto3" json:"bucketName,omitempty"`
	Prefix            string                 `protobuf:"bytes,6,opt,name=prefix,proto3" json:"prefix,omitempty"`
	TimeCreated       string                 `protobuf:"bytes,7,opt,name=timeCreated,proto3" json:"timeCreated,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProformaCur) Reset() {
	*x = ProformaCur{}
	mi := &file_admin_v1_admin_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProformaCur) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProformaCur) ProtoMessage() {}

func (x *ProformaCur) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProformaCur.ProtoReflect.Descriptor instead.
func (*ProformaCur) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{33}
}

func (x *ProformaCur) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *ProformaCur) GetPayerId() string {
	if x != nil {
		return x.PayerId
	}
	return ""
}

func (x *ProformaCur) GetBillingInternalId() string {
	if x != nil {
		return x.BillingInternalId
	}
	return ""
}

func (x *ProformaCur) GetReportName() string {
	if x != nil {
		return x.ReportName
	}
	return ""
}

func (x *ProformaCur) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *ProformaCur) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ProformaCur) GetTimeCreated() string {
	if x != nil {
		return x.TimeCreated
	}
	return ""
}

// Request message for the ExportAuditLogs rpc.
type ExportAuditLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. At the moment, `CSV`,`JSON` is supported.
	Format string `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	// Required. The UTC date to start data from. If not set, the first day of the current year will be used. Format: `yyyymmdd`.
	StartTime string `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// Required. The UTC date to end data from. If not set, the first day of the current year will be used. Format: `yyyymmdd`.
	EndTime       string `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportAuditLogsRequest) Reset() {
	*x = ExportAuditLogsRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportAuditLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportAuditLogsRequest) ProtoMessage() {}

func (x *ExportAuditLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportAuditLogsRequest.ProtoReflect.Descriptor instead.
func (*ExportAuditLogsRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{34}
}

func (x *ExportAuditLogsRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *ExportAuditLogsRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ExportAuditLogsRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

// for wave features settings data maping
type WaveFeature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	FeatureId     string                 `protobuf:"bytes,2,opt,name=featureId,proto3" json:"featureId,omitempty"`
	IsEnabled     bool                   `protobuf:"varint,5,opt,name=isEnabled,proto3" json:"isEnabled,omitempty"`
	TickStrategy  string                 `protobuf:"bytes,3,opt,name=tickStrategy,proto3" json:"tickStrategy,omitempty"`
	Condition     string                 `protobuf:"bytes,4,opt,name=condition,proto3" json:"condition,omitempty"`
	Flag          string                 `protobuf:"bytes,6,opt,name=flag,proto3" json:"flag,omitempty"`
	Children      []*WaveFeature         `protobuf:"bytes,7,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaveFeature) Reset() {
	*x = WaveFeature{}
	mi := &file_admin_v1_admin_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaveFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaveFeature) ProtoMessage() {}

func (x *WaveFeature) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaveFeature.ProtoReflect.Descriptor instead.
func (*WaveFeature) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{35}
}

func (x *WaveFeature) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *WaveFeature) GetFeatureId() string {
	if x != nil {
		return x.FeatureId
	}
	return ""
}

func (x *WaveFeature) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *WaveFeature) GetTickStrategy() string {
	if x != nil {
		return x.TickStrategy
	}
	return ""
}

func (x *WaveFeature) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *WaveFeature) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *WaveFeature) GetChildren() []*WaveFeature {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetWaveFeaturesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settings      []*WaveFeature         `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaveFeaturesResponse) Reset() {
	*x = GetWaveFeaturesResponse{}
	mi := &file_admin_v1_admin_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaveFeaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaveFeaturesResponse) ProtoMessage() {}

func (x *GetWaveFeaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaveFeaturesResponse.ProtoReflect.Descriptor instead.
func (*GetWaveFeaturesResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{36}
}

func (x *GetWaveFeaturesResponse) GetSettings() []*WaveFeature {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GetWaveFeaturesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lang          string                 `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaveFeaturesRequest) Reset() {
	*x = GetWaveFeaturesRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaveFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaveFeaturesRequest) ProtoMessage() {}

func (x *GetWaveFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaveFeaturesRequest.ProtoReflect.Descriptor instead.
func (*GetWaveFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{37}
}

func (x *GetWaveFeaturesRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

// For rpc UpdateWaveFeature
type FeatureSetting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeatureId     string                 `protobuf:"bytes,1,opt,name=featureId,proto3" json:"featureId,omitempty"`
	IsEnabled     bool                   `protobuf:"varint,2,opt,name=isEnabled,proto3" json:"isEnabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeatureSetting) Reset() {
	*x = FeatureSetting{}
	mi := &file_admin_v1_admin_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureSetting) ProtoMessage() {}

func (x *FeatureSetting) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureSetting.ProtoReflect.Descriptor instead.
func (*FeatureSetting) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{38}
}

func (x *FeatureSetting) GetFeatureId() string {
	if x != nil {
		return x.FeatureId
	}
	return ""
}

func (x *FeatureSetting) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

type UpdateWaveFeatureSettingRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Lang           string                 `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	FeatureSetting []*FeatureSetting      `protobuf:"bytes,1,rep,name=featureSetting,proto3" json:"featureSetting,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateWaveFeatureSettingRequest) Reset() {
	*x = UpdateWaveFeatureSettingRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWaveFeatureSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWaveFeatureSettingRequest) ProtoMessage() {}

func (x *UpdateWaveFeatureSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWaveFeatureSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateWaveFeatureSettingRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateWaveFeatureSettingRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UpdateWaveFeatureSettingRequest) GetFeatureSetting() []*FeatureSetting {
	if x != nil {
		return x.FeatureSetting
	}
	return nil
}

type GetMSPDefaultMetaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MspId         string                 `protobuf:"bytes,1,opt,name=mspId,proto3" json:"mspId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMSPDefaultMetaRequest) Reset() {
	*x = GetMSPDefaultMetaRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMSPDefaultMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSPDefaultMetaRequest) ProtoMessage() {}

func (x *GetMSPDefaultMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSPDefaultMetaRequest.ProtoReflect.Descriptor instead.
func (*GetMSPDefaultMetaRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{40}
}

func (x *GetMSPDefaultMetaRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

type GetMSPDefaultMetaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DefaultMeta   []string               `protobuf:"bytes,1,rep,name=defaultMeta,proto3" json:"defaultMeta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMSPDefaultMetaResponse) Reset() {
	*x = GetMSPDefaultMetaResponse{}
	mi := &file_admin_v1_admin_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMSPDefaultMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMSPDefaultMetaResponse) ProtoMessage() {}

func (x *GetMSPDefaultMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMSPDefaultMetaResponse.ProtoReflect.Descriptor instead.
func (*GetMSPDefaultMetaResponse) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{41}
}

func (x *GetMSPDefaultMetaResponse) GetDefaultMeta() []string {
	if x != nil {
		return x.DefaultMeta
	}
	return nil
}

type UpdateMSPDefaultMetaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MspId         string                 `protobuf:"bytes,1,opt,name=mspId,proto3" json:"mspId,omitempty"`
	DefaultMeta   []string               `protobuf:"bytes,2,rep,name=defaultMeta,proto3" json:"defaultMeta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMSPDefaultMetaRequest) Reset() {
	*x = UpdateMSPDefaultMetaRequest{}
	mi := &file_admin_v1_admin_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMSPDefaultMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMSPDefaultMetaRequest) ProtoMessage() {}

func (x *UpdateMSPDefaultMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_v1_admin_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMSPDefaultMetaRequest.ProtoReflect.Descriptor instead.
func (*UpdateMSPDefaultMetaRequest) Descriptor() ([]byte, []int) {
	return file_admin_v1_admin_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateMSPDefaultMetaRequest) GetMspId() string {
	if x != nil {
		return x.MspId
	}
	return ""
}

func (x *UpdateMSPDefaultMetaRequest) GetDefaultMeta() []string {
	if x != nil {
		return x.DefaultMeta
	}
	return nil
}

var File_admin_v1_admin_proto protoreflect.FileDescriptor

const file_admin_v1_admin_proto_rawDesc = "" +
	"\n" +
	"\x14admin/v1/admin.proto\x12\x10blueapi.admin.v1\x1a\x16api/accountgroup.proto\x1a\x16api/notification.proto\x1a\x0fapi/audit.proto\x1a\x16protos/operation.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a google/protobuf/field_mask.proto\"\x1a\n" +
	"\x18ListAccountGroupsRequest\"\\\n" +
	"\x19ListAccountGroupsResponse\x12?\n" +
	"\raccountGroups\x18\x01 \x03(\v2\x19.blueapi.api.AccountGroupR\raccountGroups\"(\n" +
	"\x16GetAccountGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"R\n" +
	"\x17GetAccountGroupResponse\x127\n" +
	"\tacctGroup\x18\x01 \x01(\v2\x19.blueapi.api.AccountGroupR\tacctGroup\"<\n" +
	"&GetDefaultCostAccessTemplateUrlRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\"\xc5\x01\n" +
	"'GetDefaultCostAccessTemplateUrlResponse\x12\x1c\n" +
	"\tlaunchUrl\x18\x01 \x01(\tR\tlaunchUrl\x12 \n" +
	"\vtemplateUrl\x18\x02 \x01(\tR\vtemplateUrl\x12\x1c\n" +
	"\tstackName\x18\x03 \x01(\tR\tstackName\x12\x1c\n" +
	"\tprincipal\x18\x04 \x01(\tR\tprincipal\x12\x1e\n" +
	"\n" +
	"externalId\x18\x05 \x01(\tR\n" +
	"externalId\"\x1e\n" +
	"\x1cListDefaultCostAccessRequest\"5\n" +
	"\x1bGetDefaultCostAccessRequest\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\"\xfd\x01\n" +
	"\x11DefaultCostAccess\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x18\n" +
	"\aroleArn\x18\x02 \x01(\tR\aroleArn\x12\x1e\n" +
	"\n" +
	"externalId\x18\x03 \x01(\tR\n" +
	"externalId\x12\x18\n" +
	"\astackId\x18\x04 \x01(\tR\astackId\x12 \n" +
	"\vstackRegion\x18\x05 \x01(\tR\vstackRegion\x12 \n" +
	"\vtemplateUrl\x18\x06 \x01(\tR\vtemplateUrl\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12 \n" +
	"\vlastUpdated\x18\b \x01(\tR\vlastUpdated\"R\n" +
	"\x1eCreateDefaultCostAccessRequest\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x18\n" +
	"\acurType\x18\x02 \x01(\tR\acurType\"8\n" +
	"\x1eUpdateDefaultCostAccessRequest\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\"8\n" +
	"\x1eDeleteDefaultCostAccessRequest\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\".\n" +
	",GetCloudWatchMetricsStreamTemplateUrlRequest\"\xad\x01\n" +
	"-GetCloudWatchMetricsStreamTemplateUrlResponse\x12\x1c\n" +
	"\tlaunchUrl\x18\x01 \x01(\tR\tlaunchUrl\x12 \n" +
	"\vtemplateUrl\x18\x02 \x01(\tR\vtemplateUrl\x12\x1c\n" +
	"\tstackName\x18\x03 \x01(\tR\tstackName\x12\x1e\n" +
	"\n" +
	"externalId\x18\x04 \x01(\tR\n" +
	"externalId\">\n" +
	"$CreateCloudWatchMetricsStreamRequest\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\"\xe9\x01\n" +
	"\x17CloudWatchMetricsStream\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x1e\n" +
	"\n" +
	"externalId\x18\x02 \x01(\tR\n" +
	"externalId\x12\x18\n" +
	"\astackId\x18\x03 \x01(\tR\astackId\x12 \n" +
	"\vstackRegion\x18\x04 \x01(\tR\vstackRegion\x12 \n" +
	"\vtemplateUrl\x18\x05 \x01(\tR\vtemplateUrl\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12 \n" +
	"\vlastUpdated\x18\a \x01(\tR\vlastUpdated\" \n" +
	"\x1eGetNotificationSettingsRequest\"c\n" +
	"\x1fSaveNotificationSettingsRequest\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12&\n" +
	"\x0edefaultChannel\x18\x02 \x01(\tR\x0edefaultChannel\"!\n" +
	"\x1fListNotificationChannelsRequest\"`\n" +
	" ListNotificationChannelsResponse\x12<\n" +
	"\bchannels\x18\x01 \x03(\v2 .blueapi.api.NotificationChannelR\bchannels\"j\n" +
	"\x1dGetNotificationChannelRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"field_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\"\xfd\x01\n" +
	" CreateNotificationChannelRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12/\n" +
	"\x05email\x18\x03 \x01(\v2\x19.blueapi.api.EmailChannelR\x05email\x12/\n" +
	"\x05slack\x18\x04 \x01(\v2\x19.blueapi.api.SlackChannelR\x05slack\x125\n" +
	"\amsteams\x18\x05 \x01(\v2\x1b.blueapi.api.MSTeamsChannelR\amsteams\x12\x18\n" +
	"\aproduct\x18\x06 \x01(\tR\aproduct\")\n" +
	"'CreateDefaultNotificationChannelRequest\"\x8d\x02\n" +
	" UpdateNotificationChannelRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12/\n" +
	"\x05email\x18\x04 \x01(\v2\x19.blueapi.api.EmailChannelR\x05email\x12/\n" +
	"\x05slack\x18\x05 \x01(\v2\x19.blueapi.api.SlackChannelR\x05slack\x125\n" +
	"\amsteams\x18\x06 \x01(\v2\x1b.blueapi.api.MSTeamsChannelR\amsteams\x12\x18\n" +
	"\aproduct\x18\a \x01(\tR\aproduct\"2\n" +
	" DeleteNotificationChannelRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1a\n" +
	"\x18ListNotificationsRequest\"\\\n" +
	"\x19ListNotificationsResponse\x12?\n" +
	"\rnotifications\x18\x01 \x03(\v2\x19.blueapi.api.NotificationR\rnotifications\"K\n" +
	"\x13NotificationAccount\x12\x16\n" +
	"\x06vendor\x18\x01 \x01(\tR\x06vendor\x12\x1c\n" +
	"\taccountId\x18\x02 \x01(\tR\taccountId\"T\n" +
	"\x16GetNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x10notificationType\x18\x02 \x01(\tR\x10notificationType\"\xbe\x01\n" +
	"\x19CreateNotificationRequest\x12*\n" +
	"\x10notificationType\x18\x01 \x01(\tR\x10notificationType\x12\x1a\n" +
	"\bchannels\x18\x02 \x03(\tR\bchannels\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12?\n" +
	"\aaccount\x18\x04 \x01(\v2%.blueapi.admin.v1.NotificationAccountR\aaccount\"\xce\x01\n" +
	"\x19UpdateNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bchannels\x18\x02 \x03(\tR\bchannels\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12*\n" +
	"\x10notificationType\x18\x04 \x01(\tR\x10notificationType\x12?\n" +
	"\aaccount\x18\x05 \x01(\v2%.blueapi.admin.v1.NotificationAccountR\aaccount\"W\n" +
	"\x19DeleteNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x10notificationType\x18\x02 \x01(\tR\x10notificationType\"\xde\x01\n" +
	"\x18CreateProformaCurRequest\x12\x18\n" +
	"\apayerId\x18\x01 \x01(\tR\apayerId\x12,\n" +
	"\x11billingInternalId\x18\x02 \x01(\tR\x11billingInternalId\x12\x1e\n" +
	"\n" +
	"reportName\x18\x03 \x01(\tR\n" +
	"reportName\x12\"\n" +
	"\fs3BucketName\x18\x04 \x01(\tR\fs3BucketName\x12\x1a\n" +
	"\bs3Prefix\x18\x05 \x01(\tR\bs3Prefix\x12\x1a\n" +
	"\bs3Region\x18\x06 \x01(\tR\bs3Region\"\xe5\x01\n" +
	"\vProformaCur\x12\x14\n" +
	"\x05orgId\x18\x01 \x01(\tR\x05orgId\x12\x18\n" +
	"\apayerId\x18\x02 \x01(\tR\apayerId\x12,\n" +
	"\x11billingInternalId\x18\x03 \x01(\tR\x11billingInternalId\x12\x1e\n" +
	"\n" +
	"reportName\x18\x04 \x01(\tR\n" +
	"reportName\x12\x1e\n" +
	"\n" +
	"bucketName\x18\x05 \x01(\tR\n" +
	"bucketName\x12\x16\n" +
	"\x06prefix\x18\x06 \x01(\tR\x06prefix\x12 \n" +
	"\vtimeCreated\x18\a \x01(\tR\vtimeCreated\"h\n" +
	"\x16ExportAuditLogsRequest\x12\x16\n" +
	"\x06format\x18\x01 \x01(\tR\x06format\x12\x1c\n" +
	"\tstartTime\x18\x02 \x01(\tR\tstartTime\x12\x18\n" +
	"\aendTime\x18\x03 \x01(\tR\aendTime\"\xf0\x01\n" +
	"\vWaveFeature\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x1c\n" +
	"\tfeatureId\x18\x02 \x01(\tR\tfeatureId\x12\x1c\n" +
	"\tisEnabled\x18\x05 \x01(\bR\tisEnabled\x12\"\n" +
	"\ftickStrategy\x18\x03 \x01(\tR\ftickStrategy\x12\x1c\n" +
	"\tcondition\x18\x04 \x01(\tR\tcondition\x12\x12\n" +
	"\x04flag\x18\x06 \x01(\tR\x04flag\x129\n" +
	"\bchildren\x18\a \x03(\v2\x1d.blueapi.admin.v1.WaveFeatureR\bchildren\"T\n" +
	"\x17GetWaveFeaturesResponse\x129\n" +
	"\bsettings\x18\x01 \x03(\v2\x1d.blueapi.admin.v1.WaveFeatureR\bsettings\",\n" +
	"\x16GetWaveFeaturesRequest\x12\x12\n" +
	"\x04lang\x18\x01 \x01(\tR\x04lang\"L\n" +
	"\x0eFeatureSetting\x12\x1c\n" +
	"\tfeatureId\x18\x01 \x01(\tR\tfeatureId\x12\x1c\n" +
	"\tisEnabled\x18\x02 \x01(\bR\tisEnabled\"\x7f\n" +
	"\x1fUpdateWaveFeatureSettingRequest\x12\x12\n" +
	"\x04lang\x18\x02 \x01(\tR\x04lang\x12H\n" +
	"\x0efeatureSetting\x18\x01 \x03(\v2 .blueapi.admin.v1.FeatureSettingR\x0efeatureSetting\"0\n" +
	"\x18GetMSPDefaultMetaRequest\x12\x14\n" +
	"\x05mspId\x18\x01 \x01(\tR\x05mspId\"=\n" +
	"\x19GetMSPDefaultMetaResponse\x12 \n" +
	"\vdefaultMeta\x18\x01 \x03(\tR\vdefaultMeta\"U\n" +
	"\x1bUpdateMSPDefaultMetaRequest\x12\x14\n" +
	"\x05mspId\x18\x01 \x01(\tR\x05mspId\x12 \n" +
	"\vdefaultMeta\x18\x02 \x03(\tR\vdefaultMeta2\xb2#\n" +
	"\x05Admin\x12\x8c\x01\n" +
	"\x11ListAccountGroups\x12*.blueapi.admin.v1.ListAccountGroupsRequest\x1a+.blueapi.admin.v1.ListAccountGroupsResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/admin/v1/acctgroups0\x01\x12\x89\x01\n" +
	"\x0fGetAccountGroup\x12(.blueapi.admin.v1.GetAccountGroupRequest\x1a).blueapi.admin.v1.GetAccountGroupResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/admin/v1/acctgroups/{id}\x12\xb7\x01\n" +
	"\x1fGetDefaultCostAccessTemplateUrl\x128.blueapi.admin.v1.GetDefaultCostAccessTemplateUrlRequest\x1a9.blueapi.admin.v1.GetDefaultCostAccessTemplateUrlResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/admin/v1/aws/xacct/dca\x12\x98\x01\n" +
	"\x15ListDefaultCostAccess\x12..blueapi.admin.v1.ListDefaultCostAccessRequest\x1a#.blueapi.admin.v1.DefaultCostAccess\"(\x82\xd3\xe4\x93\x02\"\" /admin/v1/aws/xacct/dca/all:read0\x01\x12\x94\x01\n" +
	"\x14GetDefaultCostAccess\x12-.blueapi.admin.v1.GetDefaultCostAccessRequest\x1a#.blueapi.admin.v1.DefaultCostAccess\"(\x82\xd3\xe4\x93\x02\"\x12 /admin/v1/aws/xacct/dca/{target}\x12\x94\x01\n" +
	"\x17CreateDefaultCostAccess\x120.blueapi.admin.v1.CreateDefaultCostAccessRequest\x1a#.blueapi.admin.v1.DefaultCostAccess\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/admin/v1/aws/xacct/dca\x12\x88\x01\n" +
	"\x17UpdateDefaultCostAccess\x120.blueapi.admin.v1.UpdateDefaultCostAccessRequest\x1a\x11.protos.Operation\"(\x82\xd3\xe4\x93\x02\"\x1a /admin/v1/aws/xacct/dca/{target}\x12\x8d\x01\n" +
	"\x17DeleteDefaultCostAccess\x120.blueapi.admin.v1.DeleteDefaultCostAccessRequest\x1a\x16.google.protobuf.Empty\"(\x82\xd3\xe4\x93\x02\"* /admin/v1/aws/xacct/dca/{target}\x12\xca\x01\n" +
	"%GetCloudWatchMetricsStreamTemplateUrl\x12>.blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlRequest\x1a?.blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlResponse\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/admin/v1/aws/xacct/cwms\x12\xa7\x01\n" +
	"\x1dCreateCloudWatchMetricsStream\x126.blueapi.admin.v1.CreateCloudWatchMetricsStreamRequest\x1a).blueapi.admin.v1.CloudWatchMetricsStream\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/admin/v1/aws/xacct/cwms\x12\x89\x01\n" +
	"\x11CreateProformaCur\x12*.blueapi.admin.v1.CreateProformaCurRequest\x1a\x1d.blueapi.admin.v1.ProformaCur\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/admin/v1/aws/reports/proforma\x12\x97\x01\n" +
	"\x17GetNotificationSettings\x120.blueapi.admin.v1.GetNotificationSettingsRequest\x1a!.blueapi.api.NotificationSettings\"'\x82\xd3\xe4\x93\x02!\x12\x1f/admin/v1/notification/settings\x12\x9c\x01\n" +
	"\x18SaveNotificationSettings\x121.blueapi.admin.v1.SaveNotificationSettingsRequest\x1a!.blueapi.api.NotificationSettings\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/admin/v1/notification/settings\x12\xaa\x01\n" +
	"\x18ListNotificationChannels\x121.blueapi.admin.v1.ListNotificationChannelsRequest\x1a2.blueapi.admin.v1.ListNotificationChannelsResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/admin/v1/notification/channels\x12\x99\x01\n" +
	"\x16GetNotificationChannel\x12/.blueapi.admin.v1.GetNotificationChannelRequest\x1a .blueapi.api.NotificationChannel\",\x82\xd3\xe4\x93\x02&\x12$/admin/v1/notification/channels/{id}\x12\x9d\x01\n" +
	"\x19CreateNotificationChannel\x122.blueapi.admin.v1.CreateNotificationChannelRequest\x1a .blueapi.api.NotificationChannel\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/admin/v1/notification/channels\x12\xaa\x01\n" +
	" CreateDefaultNotificationChannel\x129.blueapi.admin.v1.CreateDefaultNotificationChannelRequest\x1a .blueapi.api.NotificationChannel\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/admin/v1/notification/default\x12\xa2\x01\n" +
	"\x19UpdateNotificationChannel\x122.blueapi.admin.v1.UpdateNotificationChannelRequest\x1a .blueapi.api.NotificationChannel\"/\x82\xd3\xe4\x93\x02):\x01*\x1a$/admin/v1/notification/channels/{id}\x12\x95\x01\n" +
	"\x19DeleteNotificationChannel\x122.blueapi.admin.v1.DeleteNotificationChannelRequest\x1a\x16.google.protobuf.Empty\",\x82\xd3\xe4\x93\x02&*$/admin/v1/notification/channels/{id}\x12\x8d\x01\n" +
	"\x11ListNotifications\x12*.blueapi.admin.v1.ListNotificationsRequest\x1a+.blueapi.admin.v1.ListNotificationsResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/admin/v1/notifications\x12|\n" +
	"\x0fGetNotification\x12(.blueapi.admin.v1.GetNotificationRequest\x1a\x19.blueapi.api.Notification\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/admin/v1/notifications/{id}\x12\x80\x01\n" +
	"\x12CreateNotification\x12+.blueapi.admin.v1.CreateNotificationRequest\x1a\x19.blueapi.api.Notification\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/admin/v1/notifications\x12\x85\x01\n" +
	"\x12UpdateNotification\x12+.blueapi.admin.v1.UpdateNotificationRequest\x1a\x19.blueapi.api.Notification\"'\x82\xd3\xe4\x93\x02!:\x01*\x1a\x1c/admin/v1/notifications/{id}\x12\x7f\n" +
	"\x12DeleteNotification\x12+.blueapi.admin.v1.DeleteNotificationRequest\x1a\x16.google.protobuf.Empty\"$\x82\xd3\xe4\x93\x02\x1e*\x1c/admin/v1/notifications/{id}\x12|\n" +
	"\x0fExportAuditLogs\x12(.blueapi.admin.v1.ExportAuditLogsRequest\x1a\x18.blueapi.api.AuditExport\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/admin/v1/auditlogs:export\x12\x86\x01\n" +
	"\x0fGetWaveFeatures\x12(.blueapi.admin.v1.GetWaveFeaturesRequest\x1a).blueapi.admin.v1.GetWaveFeaturesResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/admin/v1/wavefeatures\x12\x9b\x01\n" +
	"\x18UpdateWaveFeatureSetting\x121.blueapi.admin.v1.UpdateWaveFeatureSettingRequest\x1a).blueapi.admin.v1.GetWaveFeaturesResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\x1a\x16/admin/v1/wavefeatures\x12\x93\x01\n" +
	"\x11GetMSPDefaultMeta\x12*.blueapi.admin.v1.GetMSPDefaultMetaRequest\x1a+.blueapi.admin.v1.GetMSPDefaultMetaResponse\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/admin/v1/defaultmeta/{mspId}\x12\x7f\n" +
	"\x14UpdateMSPDefaultMeta\x12-.blueapi.admin.v1.UpdateMSPDefaultMetaRequest\x1a\x16.google.protobuf.Empty\" \x82\xd3\xe4\x93\x02\x1a:\x01*\x1a\x15/admin/v1/defaultmeta\x1a\x8a\x01\x92A\x86\x01\x125Admin API. Base URL: https://api.alphaus.cloud/m/blue\x1aM\n" +
	"\x12Service definition\x127https://github.com/alphauslabs/blueapi/tree/main/admin/BK\n" +
	"\x17cloud.alphaus.api.adminB\n" +
	"AdminProtoZ$github.com/alphauslabs/blueapi/adminb\x06proto3"

var (
	file_admin_v1_admin_proto_rawDescOnce sync.Once
	file_admin_v1_admin_proto_rawDescData []byte
)

func file_admin_v1_admin_proto_rawDescGZIP() []byte {
	file_admin_v1_admin_proto_rawDescOnce.Do(func() {
		file_admin_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_admin_v1_admin_proto_rawDesc), len(file_admin_v1_admin_proto_rawDesc)))
	})
	return file_admin_v1_admin_proto_rawDescData
}

var file_admin_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_admin_v1_admin_proto_goTypes = []any{
	(*ListAccountGroupsRequest)(nil),                      // 0: blueapi.admin.v1.ListAccountGroupsRequest
	(*ListAccountGroupsResponse)(nil),                     // 1: blueapi.admin.v1.ListAccountGroupsResponse
	(*GetAccountGroupRequest)(nil),                        // 2: blueapi.admin.v1.GetAccountGroupRequest
	(*GetAccountGroupResponse)(nil),                       // 3: blueapi.admin.v1.GetAccountGroupResponse
	(*GetDefaultCostAccessTemplateUrlRequest)(nil),        // 4: blueapi.admin.v1.GetDefaultCostAccessTemplateUrlRequest
	(*GetDefaultCostAccessTemplateUrlResponse)(nil),       // 5: blueapi.admin.v1.GetDefaultCostAccessTemplateUrlResponse
	(*ListDefaultCostAccessRequest)(nil),                  // 6: blueapi.admin.v1.ListDefaultCostAccessRequest
	(*GetDefaultCostAccessRequest)(nil),                   // 7: blueapi.admin.v1.GetDefaultCostAccessRequest
	(*DefaultCostAccess)(nil),                             // 8: blueapi.admin.v1.DefaultCostAccess
	(*CreateDefaultCostAccessRequest)(nil),                // 9: blueapi.admin.v1.CreateDefaultCostAccessRequest
	(*UpdateDefaultCostAccessRequest)(nil),                // 10: blueapi.admin.v1.UpdateDefaultCostAccessRequest
	(*DeleteDefaultCostAccessRequest)(nil),                // 11: blueapi.admin.v1.DeleteDefaultCostAccessRequest
	(*GetCloudWatchMetricsStreamTemplateUrlRequest)(nil),  // 12: blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlRequest
	(*GetCloudWatchMetricsStreamTemplateUrlResponse)(nil), // 13: blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlResponse
	(*CreateCloudWatchMetricsStreamRequest)(nil),          // 14: blueapi.admin.v1.CreateCloudWatchMetricsStreamRequest
	(*CloudWatchMetricsStream)(nil),                       // 15: blueapi.admin.v1.CloudWatchMetricsStream
	(*GetNotificationSettingsRequest)(nil),                // 16: blueapi.admin.v1.GetNotificationSettingsRequest
	(*SaveNotificationSettingsRequest)(nil),               // 17: blueapi.admin.v1.SaveNotificationSettingsRequest
	(*ListNotificationChannelsRequest)(nil),               // 18: blueapi.admin.v1.ListNotificationChannelsRequest
	(*ListNotificationChannelsResponse)(nil),              // 19: blueapi.admin.v1.ListNotificationChannelsResponse
	(*GetNotificationChannelRequest)(nil),                 // 20: blueapi.admin.v1.GetNotificationChannelRequest
	(*CreateNotificationChannelRequest)(nil),              // 21: blueapi.admin.v1.CreateNotificationChannelRequest
	(*CreateDefaultNotificationChannelRequest)(nil),       // 22: blueapi.admin.v1.CreateDefaultNotificationChannelRequest
	(*UpdateNotificationChannelRequest)(nil),              // 23: blueapi.admin.v1.UpdateNotificationChannelRequest
	(*DeleteNotificationChannelRequest)(nil),              // 24: blueapi.admin.v1.DeleteNotificationChannelRequest
	(*ListNotificationsRequest)(nil),                      // 25: blueapi.admin.v1.ListNotificationsRequest
	(*ListNotificationsResponse)(nil),                     // 26: blueapi.admin.v1.ListNotificationsResponse
	(*NotificationAccount)(nil),                           // 27: blueapi.admin.v1.NotificationAccount
	(*GetNotificationRequest)(nil),                        // 28: blueapi.admin.v1.GetNotificationRequest
	(*CreateNotificationRequest)(nil),                     // 29: blueapi.admin.v1.CreateNotificationRequest
	(*UpdateNotificationRequest)(nil),                     // 30: blueapi.admin.v1.UpdateNotificationRequest
	(*DeleteNotificationRequest)(nil),                     // 31: blueapi.admin.v1.DeleteNotificationRequest
	(*CreateProformaCurRequest)(nil),                      // 32: blueapi.admin.v1.CreateProformaCurRequest
	(*ProformaCur)(nil),                                   // 33: blueapi.admin.v1.ProformaCur
	(*ExportAuditLogsRequest)(nil),                        // 34: blueapi.admin.v1.ExportAuditLogsRequest
	(*WaveFeature)(nil),                                   // 35: blueapi.admin.v1.WaveFeature
	(*GetWaveFeaturesResponse)(nil),                       // 36: blueapi.admin.v1.GetWaveFeaturesResponse
	(*GetWaveFeaturesRequest)(nil),                        // 37: blueapi.admin.v1.GetWaveFeaturesRequest
	(*FeatureSetting)(nil),                                // 38: blueapi.admin.v1.FeatureSetting
	(*UpdateWaveFeatureSettingRequest)(nil),               // 39: blueapi.admin.v1.UpdateWaveFeatureSettingRequest
	(*GetMSPDefaultMetaRequest)(nil),                      // 40: blueapi.admin.v1.GetMSPDefaultMetaRequest
	(*GetMSPDefaultMetaResponse)(nil),                     // 41: blueapi.admin.v1.GetMSPDefaultMetaResponse
	(*UpdateMSPDefaultMetaRequest)(nil),                   // 42: blueapi.admin.v1.UpdateMSPDefaultMetaRequest
	(*api.AccountGroup)(nil),                              // 43: blueapi.api.AccountGroup
	(*api.NotificationChannel)(nil),                       // 44: blueapi.api.NotificationChannel
	(*fieldmaskpb.FieldMask)(nil),                         // 45: google.protobuf.FieldMask
	(*api.EmailChannel)(nil),                              // 46: blueapi.api.EmailChannel
	(*api.SlackChannel)(nil),                              // 47: blueapi.api.SlackChannel
	(*api.MSTeamsChannel)(nil),                            // 48: blueapi.api.MSTeamsChannel
	(*api.Notification)(nil),                              // 49: blueapi.api.Notification
	(*protos.Operation)(nil),                              // 50: protos.Operation
	(*emptypb.Empty)(nil),                                 // 51: google.protobuf.Empty
	(*api.NotificationSettings)(nil),                      // 52: blueapi.api.NotificationSettings
	(*api.AuditExport)(nil),                               // 53: blueapi.api.AuditExport
}
var file_admin_v1_admin_proto_depIdxs = []int32{
	43, // 0: blueapi.admin.v1.ListAccountGroupsResponse.accountGroups:type_name -> blueapi.api.AccountGroup
	43, // 1: blueapi.admin.v1.GetAccountGroupResponse.acctGroup:type_name -> blueapi.api.AccountGroup
	44, // 2: blueapi.admin.v1.ListNotificationChannelsResponse.channels:type_name -> blueapi.api.NotificationChannel
	45, // 3: blueapi.admin.v1.GetNotificationChannelRequest.field_mask:type_name -> google.protobuf.FieldMask
	46, // 4: blueapi.admin.v1.CreateNotificationChannelRequest.email:type_name -> blueapi.api.EmailChannel
	47, // 5: blueapi.admin.v1.CreateNotificationChannelRequest.slack:type_name -> blueapi.api.SlackChannel
	48, // 6: blueapi.admin.v1.CreateNotificationChannelRequest.msteams:type_name -> blueapi.api.MSTeamsChannel
	46, // 7: blueapi.admin.v1.UpdateNotificationChannelRequest.email:type_name -> blueapi.api.EmailChannel
	47, // 8: blueapi.admin.v1.UpdateNotificationChannelRequest.slack:type_name -> blueapi.api.SlackChannel
	48, // 9: blueapi.admin.v1.UpdateNotificationChannelRequest.msteams:type_name -> blueapi.api.MSTeamsChannel
	49, // 10: blueapi.admin.v1.ListNotificationsResponse.notifications:type_name -> blueapi.api.Notification
	27, // 11: blueapi.admin.v1.CreateNotificationRequest.account:type_name -> blueapi.admin.v1.NotificationAccount
	27, // 12: blueapi.admin.v1.UpdateNotificationRequest.account:type_name -> blueapi.admin.v1.NotificationAccount
	35, // 13: blueapi.admin.v1.WaveFeature.children:type_name -> blueapi.admin.v1.WaveFeature
	35, // 14: blueapi.admin.v1.GetWaveFeaturesResponse.settings:type_name -> blueapi.admin.v1.WaveFeature
	38, // 15: blueapi.admin.v1.UpdateWaveFeatureSettingRequest.featureSetting:type_name -> blueapi.admin.v1.FeatureSetting
	0,  // 16: blueapi.admin.v1.Admin.ListAccountGroups:input_type -> blueapi.admin.v1.ListAccountGroupsRequest
	2,  // 17: blueapi.admin.v1.Admin.GetAccountGroup:input_type -> blueapi.admin.v1.GetAccountGroupRequest
	4,  // 18: blueapi.admin.v1.Admin.GetDefaultCostAccessTemplateUrl:input_type -> blueapi.admin.v1.GetDefaultCostAccessTemplateUrlRequest
	6,  // 19: blueapi.admin.v1.Admin.ListDefaultCostAccess:input_type -> blueapi.admin.v1.ListDefaultCostAccessRequest
	7,  // 20: blueapi.admin.v1.Admin.GetDefaultCostAccess:input_type -> blueapi.admin.v1.GetDefaultCostAccessRequest
	9,  // 21: blueapi.admin.v1.Admin.CreateDefaultCostAccess:input_type -> blueapi.admin.v1.CreateDefaultCostAccessRequest
	10, // 22: blueapi.admin.v1.Admin.UpdateDefaultCostAccess:input_type -> blueapi.admin.v1.UpdateDefaultCostAccessRequest
	11, // 23: blueapi.admin.v1.Admin.DeleteDefaultCostAccess:input_type -> blueapi.admin.v1.DeleteDefaultCostAccessRequest
	12, // 24: blueapi.admin.v1.Admin.GetCloudWatchMetricsStreamTemplateUrl:input_type -> blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlRequest
	14, // 25: blueapi.admin.v1.Admin.CreateCloudWatchMetricsStream:input_type -> blueapi.admin.v1.CreateCloudWatchMetricsStreamRequest
	32, // 26: blueapi.admin.v1.Admin.CreateProformaCur:input_type -> blueapi.admin.v1.CreateProformaCurRequest
	16, // 27: blueapi.admin.v1.Admin.GetNotificationSettings:input_type -> blueapi.admin.v1.GetNotificationSettingsRequest
	17, // 28: blueapi.admin.v1.Admin.SaveNotificationSettings:input_type -> blueapi.admin.v1.SaveNotificationSettingsRequest
	18, // 29: blueapi.admin.v1.Admin.ListNotificationChannels:input_type -> blueapi.admin.v1.ListNotificationChannelsRequest
	20, // 30: blueapi.admin.v1.Admin.GetNotificationChannel:input_type -> blueapi.admin.v1.GetNotificationChannelRequest
	21, // 31: blueapi.admin.v1.Admin.CreateNotificationChannel:input_type -> blueapi.admin.v1.CreateNotificationChannelRequest
	22, // 32: blueapi.admin.v1.Admin.CreateDefaultNotificationChannel:input_type -> blueapi.admin.v1.CreateDefaultNotificationChannelRequest
	23, // 33: blueapi.admin.v1.Admin.UpdateNotificationChannel:input_type -> blueapi.admin.v1.UpdateNotificationChannelRequest
	24, // 34: blueapi.admin.v1.Admin.DeleteNotificationChannel:input_type -> blueapi.admin.v1.DeleteNotificationChannelRequest
	25, // 35: blueapi.admin.v1.Admin.ListNotifications:input_type -> blueapi.admin.v1.ListNotificationsRequest
	28, // 36: blueapi.admin.v1.Admin.GetNotification:input_type -> blueapi.admin.v1.GetNotificationRequest
	29, // 37: blueapi.admin.v1.Admin.CreateNotification:input_type -> blueapi.admin.v1.CreateNotificationRequest
	30, // 38: blueapi.admin.v1.Admin.UpdateNotification:input_type -> blueapi.admin.v1.UpdateNotificationRequest
	31, // 39: blueapi.admin.v1.Admin.DeleteNotification:input_type -> blueapi.admin.v1.DeleteNotificationRequest
	34, // 40: blueapi.admin.v1.Admin.ExportAuditLogs:input_type -> blueapi.admin.v1.ExportAuditLogsRequest
	37, // 41: blueapi.admin.v1.Admin.GetWaveFeatures:input_type -> blueapi.admin.v1.GetWaveFeaturesRequest
	39, // 42: blueapi.admin.v1.Admin.UpdateWaveFeatureSetting:input_type -> blueapi.admin.v1.UpdateWaveFeatureSettingRequest
	40, // 43: blueapi.admin.v1.Admin.GetMSPDefaultMeta:input_type -> blueapi.admin.v1.GetMSPDefaultMetaRequest
	42, // 44: blueapi.admin.v1.Admin.UpdateMSPDefaultMeta:input_type -> blueapi.admin.v1.UpdateMSPDefaultMetaRequest
	1,  // 45: blueapi.admin.v1.Admin.ListAccountGroups:output_type -> blueapi.admin.v1.ListAccountGroupsResponse
	3,  // 46: blueapi.admin.v1.Admin.GetAccountGroup:output_type -> blueapi.admin.v1.GetAccountGroupResponse
	5,  // 47: blueapi.admin.v1.Admin.GetDefaultCostAccessTemplateUrl:output_type -> blueapi.admin.v1.GetDefaultCostAccessTemplateUrlResponse
	8,  // 48: blueapi.admin.v1.Admin.ListDefaultCostAccess:output_type -> blueapi.admin.v1.DefaultCostAccess
	8,  // 49: blueapi.admin.v1.Admin.GetDefaultCostAccess:output_type -> blueapi.admin.v1.DefaultCostAccess
	8,  // 50: blueapi.admin.v1.Admin.CreateDefaultCostAccess:output_type -> blueapi.admin.v1.DefaultCostAccess
	50, // 51: blueapi.admin.v1.Admin.UpdateDefaultCostAccess:output_type -> protos.Operation
	51, // 52: blueapi.admin.v1.Admin.DeleteDefaultCostAccess:output_type -> google.protobuf.Empty
	13, // 53: blueapi.admin.v1.Admin.GetCloudWatchMetricsStreamTemplateUrl:output_type -> blueapi.admin.v1.GetCloudWatchMetricsStreamTemplateUrlResponse
	15, // 54: blueapi.admin.v1.Admin.CreateCloudWatchMetricsStream:output_type -> blueapi.admin.v1.CloudWatchMetricsStream
	33, // 55: blueapi.admin.v1.Admin.CreateProformaCur:output_type -> blueapi.admin.v1.ProformaCur
	52, // 56: blueapi.admin.v1.Admin.GetNotificationSettings:output_type -> blueapi.api.NotificationSettings
	52, // 57: blueapi.admin.v1.Admin.SaveNotificationSettings:output_type -> blueapi.api.NotificationSettings
	19, // 58: blueapi.admin.v1.Admin.ListNotificationChannels:output_type -> blueapi.admin.v1.ListNotificationChannelsResponse
	44, // 59: blueapi.admin.v1.Admin.GetNotificationChannel:output_type -> blueapi.api.NotificationChannel
	44, // 60: blueapi.admin.v1.Admin.CreateNotificationChannel:output_type -> blueapi.api.NotificationChannel
	44, // 61: blueapi.admin.v1.Admin.CreateDefaultNotificationChannel:output_type -> blueapi.api.NotificationChannel
	44, // 62: blueapi.admin.v1.Admin.UpdateNotificationChannel:output_type -> blueapi.api.NotificationChannel
	51, // 63: blueapi.admin.v1.Admin.DeleteNotificationChannel:output_type -> google.protobuf.Empty
	26, // 64: blueapi.admin.v1.Admin.ListNotifications:output_type -> blueapi.admin.v1.ListNotificationsResponse
	49, // 65: blueapi.admin.v1.Admin.GetNotification:output_type -> blueapi.api.Notification
	49, // 66: blueapi.admin.v1.Admin.CreateNotification:output_type -> blueapi.api.Notification
	49, // 67: blueapi.admin.v1.Admin.UpdateNotification:output_type -> blueapi.api.Notification
	51, // 68: blueapi.admin.v1.Admin.DeleteNotification:output_type -> google.protobuf.Empty
	53, // 69: blueapi.admin.v1.Admin.ExportAuditLogs:output_type -> blueapi.api.AuditExport
	36, // 70: blueapi.admin.v1.Admin.GetWaveFeatures:output_type -> blueapi.admin.v1.GetWaveFeaturesResponse
	36, // 71: blueapi.admin.v1.Admin.UpdateWaveFeatureSetting:output_type -> blueapi.admin.v1.GetWaveFeaturesResponse
	41, // 72: blueapi.admin.v1.Admin.GetMSPDefaultMeta:output_type -> blueapi.admin.v1.GetMSPDefaultMetaResponse
	51, // 73: blueapi.admin.v1.Admin.UpdateMSPDefaultMeta:output_type -> google.protobuf.Empty
	45, // [45:74] is the sub-list for method output_type
	16, // [16:45] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_admin_v1_admin_proto_init() }
func file_admin_v1_admin_proto_init() {
	if File_admin_v1_admin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_admin_v1_admin_proto_rawDesc), len(file_admin_v1_admin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_v1_admin_proto_goTypes,
		DependencyIndexes: file_admin_v1_admin_proto_depIdxs,
		MessageInfos:      file_admin_v1_admin_proto_msgTypes,
	}.Build()
	File_admin_v1_admin_proto = out.File
	file_admin_v1_admin_proto_goTypes = nil
	file_admin_v1_admin_proto_depIdxs = nil
}
