// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/ripple/billinggroup.proto

package ripple

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BillingGroupInfo resource definition. Only available in Ripple.
type BillingGroupInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The title of the billing
	BillingTitle string `protobuf:"bytes,1,opt,name=billingTitle,proto3" json:"billingTitle,omitempty"`
	// Optional. Company’s phone number
	PhoneNumber string `protobuf:"bytes,2,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// Optional. Company’s postal code
	PostalCode string `protobuf:"bytes,3,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	// Optional. Company’s address
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// Optional. Addressee
	Personal string `protobuf:"bytes,5,opt,name=personal,proto3" json:"personal,omitempty"`
	// Optional. Any remarks about the billing group
	Remarks string `protobuf:"bytes,6,opt,name=remarks,proto3" json:"remarks,omitempty"`
	// Optional. Project code
	ProjectId string `protobuf:"bytes,7,opt,name=projectId,proto3" json:"projectId,omitempty"`
	// Optional. Invoice language
	Language string `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	// Optional. Calculation type, true unblended or unblended
	DisplayCost string `protobuf:"bytes,9,opt,name=displayCost,proto3" json:"displayCost,omitempty"`
	// Optional. Exchange rate type, payer or billing group
	ExchangeRateType string `protobuf:"bytes,10,opt,name=exchangeRateType,proto3" json:"exchangeRateType,omitempty"`
	// Optional. qrCode
	QrCode bool `protobuf:"varint,11,opt,name=qrCode,proto3" json:"qrCode,omitempty"`
	// Optional. Invoice template Id
	InvoiceTemplateId string `protobuf:"bytes,12,opt,name=invoiceTemplateId,proto3" json:"invoiceTemplateId,omitempty"`
	// Optional. Company's city
	City string `protobuf:"bytes,13,opt,name=city,proto3" json:"city,omitempty"`
	// Optional. Company's prefecture
	Prefecture string `protobuf:"bytes,14,opt,name=prefecture,proto3" json:"prefecture,omitempty"`
	// Optional. Company's country
	Country string `protobuf:"bytes,15,opt,name=country,proto3" json:"country,omitempty"`
	// Optional. Company's state
	State string `protobuf:"bytes,16,opt,name=state,proto3" json:"state,omitempty"`
	// Optional. Company's street address (primary line)
	AddressLine1 string `protobuf:"bytes,17,opt,name=addressLine1,proto3" json:"addressLine1,omitempty"`
	// Optional. Company's street address (secondary line, e.g., apartment, suite, unit)
	AddressLine2  string `protobuf:"bytes,18,opt,name=addressLine2,proto3" json:"addressLine2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BillingGroupInfo) Reset() {
	*x = BillingGroupInfo{}
	mi := &file_api_ripple_billinggroup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BillingGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingGroupInfo) ProtoMessage() {}

func (x *BillingGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_billinggroup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingGroupInfo.ProtoReflect.Descriptor instead.
func (*BillingGroupInfo) Descriptor() ([]byte, []int) {
	return file_api_ripple_billinggroup_proto_rawDescGZIP(), []int{0}
}

func (x *BillingGroupInfo) GetBillingTitle() string {
	if x != nil {
		return x.BillingTitle
	}
	return ""
}

func (x *BillingGroupInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *BillingGroupInfo) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *BillingGroupInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BillingGroupInfo) GetPersonal() string {
	if x != nil {
		return x.Personal
	}
	return ""
}

func (x *BillingGroupInfo) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *BillingGroupInfo) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *BillingGroupInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *BillingGroupInfo) GetDisplayCost() string {
	if x != nil {
		return x.DisplayCost
	}
	return ""
}

func (x *BillingGroupInfo) GetExchangeRateType() string {
	if x != nil {
		return x.ExchangeRateType
	}
	return ""
}

func (x *BillingGroupInfo) GetQrCode() bool {
	if x != nil {
		return x.QrCode
	}
	return false
}

func (x *BillingGroupInfo) GetInvoiceTemplateId() string {
	if x != nil {
		return x.InvoiceTemplateId
	}
	return ""
}

func (x *BillingGroupInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *BillingGroupInfo) GetPrefecture() string {
	if x != nil {
		return x.Prefecture
	}
	return ""
}

func (x *BillingGroupInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *BillingGroupInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *BillingGroupInfo) GetAddressLine1() string {
	if x != nil {
		return x.AddressLine1
	}
	return ""
}

func (x *BillingGroupInfo) GetAddressLine2() string {
	if x != nil {
		return x.AddressLine2
	}
	return ""
}

var File_api_ripple_billinggroup_proto protoreflect.FileDescriptor

const file_api_ripple_billinggroup_proto_rawDesc = "" +
	"\n" +
	"\x1dapi/ripple/billinggroup.proto\x12\x12blueapi.api.ripple\"\xc2\x04\n" +
	"\x10BillingGroupInfo\x12\"\n" +
	"\fbillingTitle\x18\x01 \x01(\tR\fbillingTitle\x12 \n" +
	"\vphoneNumber\x18\x02 \x01(\tR\vphoneNumber\x12\x1e\n" +
	"\n" +
	"postalCode\x18\x03 \x01(\tR\n" +
	"postalCode\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x1a\n" +
	"\bpersonal\x18\x05 \x01(\tR\bpersonal\x12\x18\n" +
	"\aremarks\x18\x06 \x01(\tR\aremarks\x12\x1c\n" +
	"\tprojectId\x18\a \x01(\tR\tprojectId\x12\x1a\n" +
	"\blanguage\x18\b \x01(\tR\blanguage\x12 \n" +
	"\vdisplayCost\x18\t \x01(\tR\vdisplayCost\x12*\n" +
	"\x10exchangeRateType\x18\n" +
	" \x01(\tR\x10exchangeRateType\x12\x16\n" +
	"\x06qrCode\x18\v \x01(\bR\x06qrCode\x12,\n" +
	"\x11invoiceTemplateId\x18\f \x01(\tR\x11invoiceTemplateId\x12\x12\n" +
	"\x04city\x18\r \x01(\tR\x04city\x12\x1e\n" +
	"\n" +
	"prefecture\x18\x0e \x01(\tR\n" +
	"prefecture\x12\x18\n" +
	"\acountry\x18\x0f \x01(\tR\acountry\x12\x14\n" +
	"\x05state\x18\x10 \x01(\tR\x05state\x12\"\n" +
	"\faddressLine1\x18\x11 \x01(\tR\faddressLine1\x12\"\n" +
	"\faddressLine2\x18\x12 \x01(\tR\faddressLine2Bq\n" +
	" cloud.alphaus.blueapi.api.rippleB\x1eApiRippleBillingGroupInfoProtoZ-github.com/alphauslabs/blue-sdk-go/api/rippleb\x06proto3"

var (
	file_api_ripple_billinggroup_proto_rawDescOnce sync.Once
	file_api_ripple_billinggroup_proto_rawDescData []byte
)

func file_api_ripple_billinggroup_proto_rawDescGZIP() []byte {
	file_api_ripple_billinggroup_proto_rawDescOnce.Do(func() {
		file_api_ripple_billinggroup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_ripple_billinggroup_proto_rawDesc), len(file_api_ripple_billinggroup_proto_rawDesc)))
	})
	return file_api_ripple_billinggroup_proto_rawDescData
}

var file_api_ripple_billinggroup_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_ripple_billinggroup_proto_goTypes = []any{
	(*BillingGroupInfo)(nil), // 0: blueapi.api.ripple.BillingGroupInfo
}
var file_api_ripple_billinggroup_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_ripple_billinggroup_proto_init() }
func file_api_ripple_billinggroup_proto_init() {
	if File_api_ripple_billinggroup_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_ripple_billinggroup_proto_rawDesc), len(file_api_ripple_billinggroup_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_ripple_billinggroup_proto_goTypes,
		DependencyIndexes: file_api_ripple_billinggroup_proto_depIdxs,
		MessageInfos:      file_api_ripple_billinggroup_proto_msgTypes,
	}.Build()
	File_api_ripple_billinggroup_proto = out.File
	file_api_ripple_billinggroup_proto_goTypes = nil
	file_api_ripple_billinggroup_proto_depIdxs = nil
}
