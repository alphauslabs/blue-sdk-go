// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/ripple/v1/dashboard.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OverViewSection resource definition.
type OverViewSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id. id:OverViewSection.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name. name:OverViewSection.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The currency.
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// The invoice cost.
	InvoiceCost float64 `protobuf:"fixed64,4,opt,name=invoiceCost,proto3" json:"invoiceCost,omitempty"`
	// The procurement cost.
	ProcurementCost float64 `protobuf:"fixed64,5,opt,name=procurementCost,proto3" json:"procurementCost,omitempty"`
	// The profit cost.
	ProfitCost float64 `protobuf:"fixed64,6,opt,name=profitCost,proto3" json:"profitCost,omitempty"`
	// The options.
	Options *OverViewOptionSection `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	// The period over period.
	PeriodOverPeriod *PeriodOverPeriodSection `protobuf:"bytes,8,opt,name=periodOverPeriod,proto3" json:"periodOverPeriod,omitempty"`
	// The aws section.
	AwsSection *VendorOverViewSection `protobuf:"bytes,9,opt,name=awsSection,proto3" json:"awsSection,omitempty"`
	// The azure section.
	AzureSection *VendorOverViewSection `protobuf:"bytes,10,opt,name=azureSection,proto3" json:"azureSection,omitempty"`
	// The gcp section.
	GcpSection    *VendorOverViewSection `protobuf:"bytes,11,opt,name=gcpSection,proto3" json:"gcpSection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OverViewSection) Reset() {
	*x = OverViewSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverViewSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverViewSection) ProtoMessage() {}

func (x *OverViewSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverViewSection.ProtoReflect.Descriptor instead.
func (*OverViewSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{0}
}

func (x *OverViewSection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OverViewSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OverViewSection) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OverViewSection) GetInvoiceCost() float64 {
	if x != nil {
		return x.InvoiceCost
	}
	return 0
}

func (x *OverViewSection) GetProcurementCost() float64 {
	if x != nil {
		return x.ProcurementCost
	}
	return 0
}

func (x *OverViewSection) GetProfitCost() float64 {
	if x != nil {
		return x.ProfitCost
	}
	return 0
}

func (x *OverViewSection) GetOptions() *OverViewOptionSection {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *OverViewSection) GetPeriodOverPeriod() *PeriodOverPeriodSection {
	if x != nil {
		return x.PeriodOverPeriod
	}
	return nil
}

func (x *OverViewSection) GetAwsSection() *VendorOverViewSection {
	if x != nil {
		return x.AwsSection
	}
	return nil
}

func (x *OverViewSection) GetAzureSection() *VendorOverViewSection {
	if x != nil {
		return x.AzureSection
	}
	return nil
}

func (x *OverViewSection) GetGcpSection() *VendorOverViewSection {
	if x != nil {
		return x.GcpSection
	}
	return nil
}

// PeriodOverPeriodSection resource definition.
type PeriodOverPeriodSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The invoice cost
	InvoiceCost float64 `protobuf:"fixed64,1,opt,name=invoiceCost,proto3" json:"invoiceCost,omitempty"`
	// The procurement cost
	ProcurementCost float64 `protobuf:"fixed64,2,opt,name=procurementCost,proto3" json:"procurementCost,omitempty"`
	// The profit cost
	ProfitCost float64 `protobuf:"fixed64,3,opt,name=profitCost,proto3" json:"profitCost,omitempty"`
	// The invoice cost Period-over-Period.
	// Represents a comparison of costs over a specified period of time.
	// currently, supported `Month-over-Month`
	InvoiceCostPoP float64 `protobuf:"fixed64,4,opt,name=invoiceCostPoP,proto3" json:"invoiceCostPoP,omitempty"`
	// The procurement cost Period-over-Period.
	// Represents a comparison of costs over a specified period of time.
	// currently, supported `Month-over-Month`
	ProcurementCostPoP float64 `protobuf:"fixed64,5,opt,name=procurementCostPoP,proto3" json:"procurementCostPoP,omitempty"`
	// The profit cost Period-over-Period.
	// Represents a comparison of costs over a specified period of time.
	// currently, supported `Month-over-Month`
	ProfitCostPoP float64 `protobuf:"fixed64,6,opt,name=profitCostPoP,proto3" json:"profitCostPoP,omitempty"`
	// The options cost Period-over-Period.
	Options       *PeriodOverPeriodOptionSection `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeriodOverPeriodSection) Reset() {
	*x = PeriodOverPeriodSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodOverPeriodSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodOverPeriodSection) ProtoMessage() {}

func (x *PeriodOverPeriodSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodOverPeriodSection.ProtoReflect.Descriptor instead.
func (*PeriodOverPeriodSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{1}
}

func (x *PeriodOverPeriodSection) GetInvoiceCost() float64 {
	if x != nil {
		return x.InvoiceCost
	}
	return 0
}

func (x *PeriodOverPeriodSection) GetProcurementCost() float64 {
	if x != nil {
		return x.ProcurementCost
	}
	return 0
}

func (x *PeriodOverPeriodSection) GetProfitCost() float64 {
	if x != nil {
		return x.ProfitCost
	}
	return 0
}

func (x *PeriodOverPeriodSection) GetInvoiceCostPoP() float64 {
	if x != nil {
		return x.InvoiceCostPoP
	}
	return 0
}

func (x *PeriodOverPeriodSection) GetProcurementCostPoP() float64 {
	if x != nil {
		return x.ProcurementCostPoP
	}
	return 0
}

func (x *PeriodOverPeriodSection) GetProfitCostPoP() float64 {
	if x != nil {
		return x.ProfitCostPoP
	}
	return 0
}

func (x *PeriodOverPeriodSection) GetOptions() *PeriodOverPeriodOptionSection {
	if x != nil {
		return x.Options
	}
	return nil
}

// OverViewOptionSection resource definition.
type OverViewOptionSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The spp discount cost.
	SppDiscountCost float64 `protobuf:"fixed64,1,opt,name=sppDiscountCost,proto3" json:"sppDiscountCost,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *OverViewOptionSection) Reset() {
	*x = OverViewOptionSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverViewOptionSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverViewOptionSection) ProtoMessage() {}

func (x *OverViewOptionSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverViewOptionSection.ProtoReflect.Descriptor instead.
func (*OverViewOptionSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{2}
}

func (x *OverViewOptionSection) GetSppDiscountCost() float64 {
	if x != nil {
		return x.SppDiscountCost
	}
	return 0
}

// PeriodOverPeriodOptionSection resource definition.
type PeriodOverPeriodOptionSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The spp discount cost.
	SppDiscountCost float64 `protobuf:"fixed64,1,opt,name=sppDiscountCost,proto3" json:"sppDiscountCost,omitempty"`
	// The spp discount cost Period-over-Period.
	// Represents a comparison of costs over a specified period of time.
	// currently, supported `Month-over-Month`
	SppDiscountCostPoP float64 `protobuf:"fixed64,2,opt,name=sppDiscountCostPoP,proto3" json:"sppDiscountCostPoP,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PeriodOverPeriodOptionSection) Reset() {
	*x = PeriodOverPeriodOptionSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodOverPeriodOptionSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodOverPeriodOptionSection) ProtoMessage() {}

func (x *PeriodOverPeriodOptionSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodOverPeriodOptionSection.ProtoReflect.Descriptor instead.
func (*PeriodOverPeriodOptionSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{3}
}

func (x *PeriodOverPeriodOptionSection) GetSppDiscountCost() float64 {
	if x != nil {
		return x.SppDiscountCost
	}
	return 0
}

func (x *PeriodOverPeriodOptionSection) GetSppDiscountCostPoP() float64 {
	if x != nil {
		return x.SppDiscountCostPoP
	}
	return 0
}

// VendorOverViewSection resource definition.
type VendorOverViewSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id. id:VendorOverViewSection.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name. name:VendorOverViewSection.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The currency.
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// The invoice cost.
	InvoiceCost float64 `protobuf:"fixed64,4,opt,name=invoiceCost,proto3" json:"invoiceCost,omitempty"`
	// The procurement cost.
	ProcurementCost float64 `protobuf:"fixed64,5,opt,name=procurementCost,proto3" json:"procurementCost,omitempty"`
	// The profit cost.
	ProfitCost float64 `protobuf:"fixed64,6,opt,name=profitCost,proto3" json:"profitCost,omitempty"`
	// The options.
	Options *OverViewOptionSection `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	// The period over period.
	PeriodOverPeriod *PeriodOverPeriodSection `protobuf:"bytes,8,opt,name=periodOverPeriod,proto3" json:"periodOverPeriod,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VendorOverViewSection) Reset() {
	*x = VendorOverViewSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorOverViewSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorOverViewSection) ProtoMessage() {}

func (x *VendorOverViewSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorOverViewSection.ProtoReflect.Descriptor instead.
func (*VendorOverViewSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{4}
}

func (x *VendorOverViewSection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VendorOverViewSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VendorOverViewSection) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *VendorOverViewSection) GetInvoiceCost() float64 {
	if x != nil {
		return x.InvoiceCost
	}
	return 0
}

func (x *VendorOverViewSection) GetProcurementCost() float64 {
	if x != nil {
		return x.ProcurementCost
	}
	return 0
}

func (x *VendorOverViewSection) GetProfitCost() float64 {
	if x != nil {
		return x.ProfitCost
	}
	return 0
}

func (x *VendorOverViewSection) GetOptions() *OverViewOptionSection {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *VendorOverViewSection) GetPeriodOverPeriod() *PeriodOverPeriodSection {
	if x != nil {
		return x.PeriodOverPeriod
	}
	return nil
}

// TotalSection resource definition.
type TotalSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id. id:TotalSection.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name. name:TotalSection.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The currency.
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// The year-month. format: yyyymm
	YearMonth string `protobuf:"bytes,4,opt,name=yearMonth,proto3" json:"yearMonth,omitempty"`
	// The invoice cost.
	InvoiceCost float64 `protobuf:"fixed64,5,opt,name=invoiceCost,proto3" json:"invoiceCost,omitempty"`
	// The procurement cost.
	ProcurementCost float64 `protobuf:"fixed64,6,opt,name=procurementCost,proto3" json:"procurementCost,omitempty"`
	// The profit cost.
	ProfitCost float64 `protobuf:"fixed64,7,opt,name=profitCost,proto3" json:"profitCost,omitempty"`
	// The total detail.
	TotalDeital *TotalDetailSection `protobuf:"bytes,8,opt,name=totalDeital,proto3" json:"totalDeital,omitempty"`
	// The third profit item.
	ThirdProfitItem []*ThirdProfitItemSection `protobuf:"bytes,9,rep,name=thirdProfitItem,proto3" json:"thirdProfitItem,omitempty"`
	// The aws section.
	AwsSection *VendorTotalSection `protobuf:"bytes,10,opt,name=awsSection,proto3" json:"awsSection,omitempty"`
	// The azure section.
	AzureSection *VendorTotalSection `protobuf:"bytes,11,opt,name=azureSection,proto3" json:"azureSection,omitempty"`
	// The gcp section.
	GcpSection    *VendorTotalSection `protobuf:"bytes,12,opt,name=gcpSection,proto3" json:"gcpSection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TotalSection) Reset() {
	*x = TotalSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TotalSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalSection) ProtoMessage() {}

func (x *TotalSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalSection.ProtoReflect.Descriptor instead.
func (*TotalSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{5}
}

func (x *TotalSection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TotalSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TotalSection) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *TotalSection) GetYearMonth() string {
	if x != nil {
		return x.YearMonth
	}
	return ""
}

func (x *TotalSection) GetInvoiceCost() float64 {
	if x != nil {
		return x.InvoiceCost
	}
	return 0
}

func (x *TotalSection) GetProcurementCost() float64 {
	if x != nil {
		return x.ProcurementCost
	}
	return 0
}

func (x *TotalSection) GetProfitCost() float64 {
	if x != nil {
		return x.ProfitCost
	}
	return 0
}

func (x *TotalSection) GetTotalDeital() *TotalDetailSection {
	if x != nil {
		return x.TotalDeital
	}
	return nil
}

func (x *TotalSection) GetThirdProfitItem() []*ThirdProfitItemSection {
	if x != nil {
		return x.ThirdProfitItem
	}
	return nil
}

func (x *TotalSection) GetAwsSection() *VendorTotalSection {
	if x != nil {
		return x.AwsSection
	}
	return nil
}

func (x *TotalSection) GetAzureSection() *VendorTotalSection {
	if x != nil {
		return x.AzureSection
	}
	return nil
}

func (x *TotalSection) GetGcpSection() *VendorTotalSection {
	if x != nil {
		return x.GcpSection
	}
	return nil
}

// VendorTotalSection resource definition.
type VendorTotalSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id. id:VendorTotalSection.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name. name:VendorTotalSection.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The currency.
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// The year-month. format: yyyymm
	YearMonth string `protobuf:"bytes,4,opt,name=yearMonth,proto3" json:"yearMonth,omitempty"`
	// The invoice cost.
	InvoiceCost float64 `protobuf:"fixed64,5,opt,name=invoiceCost,proto3" json:"invoiceCost,omitempty"`
	// The procurement cost.
	ProcurementCost float64 `protobuf:"fixed64,6,opt,name=procurementCost,proto3" json:"procurementCost,omitempty"`
	// The profit cost.
	ProfitCost float64 `protobuf:"fixed64,7,opt,name=profitCost,proto3" json:"profitCost,omitempty"`
	// The total detail.
	TotalDeital *TotalDetailSection `protobuf:"bytes,8,opt,name=totalDeital,proto3" json:"totalDeital,omitempty"`
	// The yhird profit item.
	ThirdProfitItem []*ThirdProfitItemSection `protobuf:"bytes,9,rep,name=thirdProfitItem,proto3" json:"thirdProfitItem,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VendorTotalSection) Reset() {
	*x = VendorTotalSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorTotalSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorTotalSection) ProtoMessage() {}

func (x *VendorTotalSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorTotalSection.ProtoReflect.Descriptor instead.
func (*VendorTotalSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{6}
}

func (x *VendorTotalSection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VendorTotalSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VendorTotalSection) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *VendorTotalSection) GetYearMonth() string {
	if x != nil {
		return x.YearMonth
	}
	return ""
}

func (x *VendorTotalSection) GetInvoiceCost() float64 {
	if x != nil {
		return x.InvoiceCost
	}
	return 0
}

func (x *VendorTotalSection) GetProcurementCost() float64 {
	if x != nil {
		return x.ProcurementCost
	}
	return 0
}

func (x *VendorTotalSection) GetProfitCost() float64 {
	if x != nil {
		return x.ProfitCost
	}
	return 0
}

func (x *VendorTotalSection) GetTotalDeital() *TotalDetailSection {
	if x != nil {
		return x.TotalDeital
	}
	return nil
}

func (x *VendorTotalSection) GetThirdProfitItem() []*ThirdProfitItemSection {
	if x != nil {
		return x.ThirdProfitItem
	}
	return nil
}

// TotalDetailSection resource definition.
type TotalDetailSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cost(True unblended or Unblended) used for invoicing.
	TotalCost float64 `protobuf:"fixed64,1,opt,name=totalCost,proto3" json:"totalCost,omitempty"`
	// The spp discount cost.
	SppDiscount float64 `protobuf:"fixed64,2,opt,name=sppDiscount,proto3" json:"sppDiscount,omitempty"`
	// The third profit item cost.
	ThirdProfitItem float64 `protobuf:"fixed64,3,opt,name=thirdProfitItem,proto3" json:"thirdProfitItem,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TotalDetailSection) Reset() {
	*x = TotalDetailSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TotalDetailSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalDetailSection) ProtoMessage() {}

func (x *TotalDetailSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalDetailSection.ProtoReflect.Descriptor instead.
func (*TotalDetailSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{7}
}

func (x *TotalDetailSection) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *TotalDetailSection) GetSppDiscount() float64 {
	if x != nil {
		return x.SppDiscount
	}
	return 0
}

func (x *TotalDetailSection) GetThirdProfitItem() float64 {
	if x != nil {
		return x.ThirdProfitItem
	}
	return 0
}

// ThirdProfitItemSection resource definition.
type ThirdProfitItemSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The profit cost.
	Profit        float64 `protobuf:"fixed64,3,opt,name=profit,proto3" json:"profit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThirdProfitItemSection) Reset() {
	*x = ThirdProfitItemSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThirdProfitItemSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdProfitItemSection) ProtoMessage() {}

func (x *ThirdProfitItemSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdProfitItemSection.ProtoReflect.Descriptor instead.
func (*ThirdProfitItemSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{8}
}

func (x *ThirdProfitItemSection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ThirdProfitItemSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThirdProfitItemSection) GetProfit() float64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

// BillingGroupSection resource definition.
type BillingGroupSection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The id. billing group id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name. billing group name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The year-month. format: yyyymm
	YearMonth string `protobuf:"bytes,3,opt,name=yearMonth,proto3" json:"yearMonth,omitempty"`
	// The currency.
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	// The invoice cost.
	InvoiceCost float64 `protobuf:"fixed64,5,opt,name=invoiceCost,proto3" json:"invoiceCost,omitempty"`
	// The procurement cost.
	ProcurementCost float64 `protobuf:"fixed64,6,opt,name=procurementCost,proto3" json:"procurementCost,omitempty"`
	// The profit cost.
	ProfitCost    float64 `protobuf:"fixed64,7,opt,name=profitCost,proto3" json:"profitCost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BillingGroupSection) Reset() {
	*x = BillingGroupSection{}
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BillingGroupSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillingGroupSection) ProtoMessage() {}

func (x *BillingGroupSection) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_dashboard_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillingGroupSection.ProtoReflect.Descriptor instead.
func (*BillingGroupSection) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_dashboard_proto_rawDescGZIP(), []int{9}
}

func (x *BillingGroupSection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BillingGroupSection) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BillingGroupSection) GetYearMonth() string {
	if x != nil {
		return x.YearMonth
	}
	return ""
}

func (x *BillingGroupSection) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BillingGroupSection) GetInvoiceCost() float64 {
	if x != nil {
		return x.InvoiceCost
	}
	return 0
}

func (x *BillingGroupSection) GetProcurementCost() float64 {
	if x != nil {
		return x.ProcurementCost
	}
	return 0
}

func (x *BillingGroupSection) GetProfitCost() float64 {
	if x != nil {
		return x.ProfitCost
	}
	return 0
}

var File_api_ripple_v1_dashboard_proto protoreflect.FileDescriptor

const file_api_ripple_v1_dashboard_proto_rawDesc = "" +
	"\n" +
	"\x1dapi/ripple/v1/dashboard.proto\x12\x15blueapi.api.ripple.v1\"\xcf\x04\n" +
	"\x0fOverViewSection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12 \n" +
	"\vinvoiceCost\x18\x04 \x01(\x01R\vinvoiceCost\x12(\n" +
	"\x0fprocurementCost\x18\x05 \x01(\x01R\x0fprocurementCost\x12\x1e\n" +
	"\n" +
	"profitCost\x18\x06 \x01(\x01R\n" +
	"profitCost\x12F\n" +
	"\aoptions\x18\a \x01(\v2,.blueapi.api.ripple.v1.OverViewOptionSectionR\aoptions\x12Z\n" +
	"\x10periodOverPeriod\x18\b \x01(\v2..blueapi.api.ripple.v1.PeriodOverPeriodSectionR\x10periodOverPeriod\x12L\n" +
	"\n" +
	"awsSection\x18\t \x01(\v2,.blueapi.api.ripple.v1.VendorOverViewSectionR\n" +
	"awsSection\x12P\n" +
	"\fazureSection\x18\n" +
	" \x01(\v2,.blueapi.api.ripple.v1.VendorOverViewSectionR\fazureSection\x12L\n" +
	"\n" +
	"gcpSection\x18\v \x01(\v2,.blueapi.api.ripple.v1.VendorOverViewSectionR\n" +
	"gcpSection\"\xd3\x02\n" +
	"\x17PeriodOverPeriodSection\x12 \n" +
	"\vinvoiceCost\x18\x01 \x01(\x01R\vinvoiceCost\x12(\n" +
	"\x0fprocurementCost\x18\x02 \x01(\x01R\x0fprocurementCost\x12\x1e\n" +
	"\n" +
	"profitCost\x18\x03 \x01(\x01R\n" +
	"profitCost\x12&\n" +
	"\x0einvoiceCostPoP\x18\x04 \x01(\x01R\x0einvoiceCostPoP\x12.\n" +
	"\x12procurementCostPoP\x18\x05 \x01(\x01R\x12procurementCostPoP\x12$\n" +
	"\rprofitCostPoP\x18\x06 \x01(\x01R\rprofitCostPoP\x12N\n" +
	"\aoptions\x18\a \x01(\v24.blueapi.api.ripple.v1.PeriodOverPeriodOptionSectionR\aoptions\"A\n" +
	"\x15OverViewOptionSection\x12(\n" +
	"\x0fsppDiscountCost\x18\x01 \x01(\x01R\x0fsppDiscountCost\"y\n" +
	"\x1dPeriodOverPeriodOptionSection\x12(\n" +
	"\x0fsppDiscountCost\x18\x01 \x01(\x01R\x0fsppDiscountCost\x12.\n" +
	"\x12sppDiscountCostPoP\x18\x02 \x01(\x01R\x12sppDiscountCostPoP\"\xe7\x02\n" +
	"\x15VendorOverViewSection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12 \n" +
	"\vinvoiceCost\x18\x04 \x01(\x01R\vinvoiceCost\x12(\n" +
	"\x0fprocurementCost\x18\x05 \x01(\x01R\x0fprocurementCost\x12\x1e\n" +
	"\n" +
	"profitCost\x18\x06 \x01(\x01R\n" +
	"profitCost\x12F\n" +
	"\aoptions\x18\a \x01(\v2,.blueapi.api.ripple.v1.OverViewOptionSectionR\aoptions\x12Z\n" +
	"\x10periodOverPeriod\x18\b \x01(\v2..blueapi.api.ripple.v1.PeriodOverPeriodSectionR\x10periodOverPeriod\"\xe3\x04\n" +
	"\fTotalSection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x1c\n" +
	"\tyearMonth\x18\x04 \x01(\tR\tyearMonth\x12 \n" +
	"\vinvoiceCost\x18\x05 \x01(\x01R\vinvoiceCost\x12(\n" +
	"\x0fprocurementCost\x18\x06 \x01(\x01R\x0fprocurementCost\x12\x1e\n" +
	"\n" +
	"profitCost\x18\a \x01(\x01R\n" +
	"profitCost\x12K\n" +
	"\vtotalDeital\x18\b \x01(\v2).blueapi.api.ripple.v1.TotalDetailSectionR\vtotalDeital\x12W\n" +
	"\x0fthirdProfitItem\x18\t \x03(\v2-.blueapi.api.ripple.v1.ThirdProfitItemSectionR\x0fthirdProfitItem\x12I\n" +
	"\n" +
	"awsSection\x18\n" +
	" \x01(\v2).blueapi.api.ripple.v1.VendorTotalSectionR\n" +
	"awsSection\x12M\n" +
	"\fazureSection\x18\v \x01(\v2).blueapi.api.ripple.v1.VendorTotalSectionR\fazureSection\x12I\n" +
	"\n" +
	"gcpSection\x18\f \x01(\v2).blueapi.api.ripple.v1.VendorTotalSectionR\n" +
	"gcpSection\"\x84\x03\n" +
	"\x12VendorTotalSection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x1c\n" +
	"\tyearMonth\x18\x04 \x01(\tR\tyearMonth\x12 \n" +
	"\vinvoiceCost\x18\x05 \x01(\x01R\vinvoiceCost\x12(\n" +
	"\x0fprocurementCost\x18\x06 \x01(\x01R\x0fprocurementCost\x12\x1e\n" +
	"\n" +
	"profitCost\x18\a \x01(\x01R\n" +
	"profitCost\x12K\n" +
	"\vtotalDeital\x18\b \x01(\v2).blueapi.api.ripple.v1.TotalDetailSectionR\vtotalDeital\x12W\n" +
	"\x0fthirdProfitItem\x18\t \x03(\v2-.blueapi.api.ripple.v1.ThirdProfitItemSectionR\x0fthirdProfitItem\"~\n" +
	"\x12TotalDetailSection\x12\x1c\n" +
	"\ttotalCost\x18\x01 \x01(\x01R\ttotalCost\x12 \n" +
	"\vsppDiscount\x18\x02 \x01(\x01R\vsppDiscount\x12(\n" +
	"\x0fthirdProfitItem\x18\x03 \x01(\x01R\x0fthirdProfitItem\"T\n" +
	"\x16ThirdProfitItemSection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06profit\x18\x03 \x01(\x01R\x06profit\"\xdf\x01\n" +
	"\x13BillingGroupSection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tyearMonth\x18\x03 \x01(\tR\tyearMonth\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12 \n" +
	"\vinvoiceCost\x18\x05 \x01(\x01R\vinvoiceCost\x12(\n" +
	"\x0fprocurementCost\x18\x06 \x01(\x01R\x0fprocurementCost\x12\x1e\n" +
	"\n" +
	"profitCost\x18\a \x01(\x01R\n" +
	"profitCostBp\n" +
	"#cloud.alphaus.blueapi.api.ripple.v1B\x17ApiRippleDashboardProtoZ0github.com/alphauslabs/blue-sdk-go/api/ripple/v1b\x06proto3"

var (
	file_api_ripple_v1_dashboard_proto_rawDescOnce sync.Once
	file_api_ripple_v1_dashboard_proto_rawDescData []byte
)

func file_api_ripple_v1_dashboard_proto_rawDescGZIP() []byte {
	file_api_ripple_v1_dashboard_proto_rawDescOnce.Do(func() {
		file_api_ripple_v1_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_ripple_v1_dashboard_proto_rawDesc), len(file_api_ripple_v1_dashboard_proto_rawDesc)))
	})
	return file_api_ripple_v1_dashboard_proto_rawDescData
}

var file_api_ripple_v1_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_ripple_v1_dashboard_proto_goTypes = []any{
	(*OverViewSection)(nil),               // 0: blueapi.api.ripple.v1.OverViewSection
	(*PeriodOverPeriodSection)(nil),       // 1: blueapi.api.ripple.v1.PeriodOverPeriodSection
	(*OverViewOptionSection)(nil),         // 2: blueapi.api.ripple.v1.OverViewOptionSection
	(*PeriodOverPeriodOptionSection)(nil), // 3: blueapi.api.ripple.v1.PeriodOverPeriodOptionSection
	(*VendorOverViewSection)(nil),         // 4: blueapi.api.ripple.v1.VendorOverViewSection
	(*TotalSection)(nil),                  // 5: blueapi.api.ripple.v1.TotalSection
	(*VendorTotalSection)(nil),            // 6: blueapi.api.ripple.v1.VendorTotalSection
	(*TotalDetailSection)(nil),            // 7: blueapi.api.ripple.v1.TotalDetailSection
	(*ThirdProfitItemSection)(nil),        // 8: blueapi.api.ripple.v1.ThirdProfitItemSection
	(*BillingGroupSection)(nil),           // 9: blueapi.api.ripple.v1.BillingGroupSection
}
var file_api_ripple_v1_dashboard_proto_depIdxs = []int32{
	2,  // 0: blueapi.api.ripple.v1.OverViewSection.options:type_name -> blueapi.api.ripple.v1.OverViewOptionSection
	1,  // 1: blueapi.api.ripple.v1.OverViewSection.periodOverPeriod:type_name -> blueapi.api.ripple.v1.PeriodOverPeriodSection
	4,  // 2: blueapi.api.ripple.v1.OverViewSection.awsSection:type_name -> blueapi.api.ripple.v1.VendorOverViewSection
	4,  // 3: blueapi.api.ripple.v1.OverViewSection.azureSection:type_name -> blueapi.api.ripple.v1.VendorOverViewSection
	4,  // 4: blueapi.api.ripple.v1.OverViewSection.gcpSection:type_name -> blueapi.api.ripple.v1.VendorOverViewSection
	3,  // 5: blueapi.api.ripple.v1.PeriodOverPeriodSection.options:type_name -> blueapi.api.ripple.v1.PeriodOverPeriodOptionSection
	2,  // 6: blueapi.api.ripple.v1.VendorOverViewSection.options:type_name -> blueapi.api.ripple.v1.OverViewOptionSection
	1,  // 7: blueapi.api.ripple.v1.VendorOverViewSection.periodOverPeriod:type_name -> blueapi.api.ripple.v1.PeriodOverPeriodSection
	7,  // 8: blueapi.api.ripple.v1.TotalSection.totalDeital:type_name -> blueapi.api.ripple.v1.TotalDetailSection
	8,  // 9: blueapi.api.ripple.v1.TotalSection.thirdProfitItem:type_name -> blueapi.api.ripple.v1.ThirdProfitItemSection
	6,  // 10: blueapi.api.ripple.v1.TotalSection.awsSection:type_name -> blueapi.api.ripple.v1.VendorTotalSection
	6,  // 11: blueapi.api.ripple.v1.TotalSection.azureSection:type_name -> blueapi.api.ripple.v1.VendorTotalSection
	6,  // 12: blueapi.api.ripple.v1.TotalSection.gcpSection:type_name -> blueapi.api.ripple.v1.VendorTotalSection
	7,  // 13: blueapi.api.ripple.v1.VendorTotalSection.totalDeital:type_name -> blueapi.api.ripple.v1.TotalDetailSection
	8,  // 14: blueapi.api.ripple.v1.VendorTotalSection.thirdProfitItem:type_name -> blueapi.api.ripple.v1.ThirdProfitItemSection
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_ripple_v1_dashboard_proto_init() }
func file_api_ripple_v1_dashboard_proto_init() {
	if File_api_ripple_v1_dashboard_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_ripple_v1_dashboard_proto_rawDesc), len(file_api_ripple_v1_dashboard_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_ripple_v1_dashboard_proto_goTypes,
		DependencyIndexes: file_api_ripple_v1_dashboard_proto_depIdxs,
		MessageInfos:      file_api_ripple_v1_dashboard_proto_msgTypes,
	}.Build()
	File_api_ripple_v1_dashboard_proto = out.File
	file_api_ripple_v1_dashboard_proto_goTypes = nil
	file_api_ripple_v1_dashboard_proto_depIdxs = nil
}
