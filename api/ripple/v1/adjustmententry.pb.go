// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/ripple/v1/adjustmententry.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AdjustmentEntry resource definition.
type AdjustmentEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The adjustment entry ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The adjustment entry name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Account info.
	Account *AdjustmentEntryAccountInfo `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	// Adjustment entry info.
	Entry *AdjustmentEntryInfo `protobuf:"bytes,4,opt,name=entry,proto3" json:"entry,omitempty"`
	// Adjustment entry setting.
	Setting       *AdjustmentEntrySetting `protobuf:"bytes,5,opt,name=setting,proto3" json:"setting,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdjustmentEntry) Reset() {
	*x = AdjustmentEntry{}
	mi := &file_api_ripple_v1_adjustmententry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdjustmentEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustmentEntry) ProtoMessage() {}

func (x *AdjustmentEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_adjustmententry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustmentEntry.ProtoReflect.Descriptor instead.
func (*AdjustmentEntry) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_adjustmententry_proto_rawDescGZIP(), []int{0}
}

func (x *AdjustmentEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdjustmentEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdjustmentEntry) GetAccount() *AdjustmentEntryAccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AdjustmentEntry) GetEntry() *AdjustmentEntryInfo {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *AdjustmentEntry) GetSetting() *AdjustmentEntrySetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

// AdjustmentEntryAccountInfo resource definition.
type AdjustmentEntryAccountInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The account ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The account name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The vendor.
	Vendor string `protobuf:"bytes,3,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// The billing internal ID.
	BillingInternalId string `protobuf:"bytes,4,opt,name=billingInternalId,proto3" json:"billingInternalId,omitempty"`
	// The billing group ID.
	BillingGroupId string `protobuf:"bytes,5,opt,name=billingGroupId,proto3" json:"billingGroupId,omitempty"`
	// The billing group name.
	BillingGroupName string `protobuf:"bytes,6,opt,name=billingGroupName,proto3" json:"billingGroupName,omitempty"`
	// The billing group currency.
	Currency      string `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdjustmentEntryAccountInfo) Reset() {
	*x = AdjustmentEntryAccountInfo{}
	mi := &file_api_ripple_v1_adjustmententry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdjustmentEntryAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustmentEntryAccountInfo) ProtoMessage() {}

func (x *AdjustmentEntryAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_adjustmententry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustmentEntryAccountInfo.ProtoReflect.Descriptor instead.
func (*AdjustmentEntryAccountInfo) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_adjustmententry_proto_rawDescGZIP(), []int{1}
}

func (x *AdjustmentEntryAccountInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AdjustmentEntryAccountInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdjustmentEntryAccountInfo) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *AdjustmentEntryAccountInfo) GetBillingInternalId() string {
	if x != nil {
		return x.BillingInternalId
	}
	return ""
}

func (x *AdjustmentEntryAccountInfo) GetBillingGroupId() string {
	if x != nil {
		return x.BillingGroupId
	}
	return ""
}

func (x *AdjustmentEntryAccountInfo) GetBillingGroupName() string {
	if x != nil {
		return x.BillingGroupName
	}
	return ""
}

func (x *AdjustmentEntryAccountInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

// AdjustmentEntryInfo resource definition.
type AdjustmentEntryInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The calculation type.
	CalculationType string `protobuf:"bytes,1,opt,name=calculationType,proto3" json:"calculationType,omitempty"`
	// The adjustment entry type.
	AdjustmentEntryType string `protobuf:"bytes,2,opt,name=adjustmentEntryType,proto3" json:"adjustmentEntryType,omitempty"`
	// The adjustment entry description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The product code.
	ProductCode string `protobuf:"bytes,4,opt,name=productCode,proto3" json:"productCode,omitempty"`
	// The product name.
	ProductName string `protobuf:"bytes,5,opt,name=productName,proto3" json:"productName,omitempty"`
	// The currency.
	Currency string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	// The amount.
	Amount string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	// The time interval.
	TimeInterval string `protobuf:"bytes,8,opt,name=timeInterval,proto3" json:"timeInterval,omitempty"`
	// The usage start.
	UsageStart    string `protobuf:"bytes,9,opt,name=usageStart,proto3" json:"usageStart,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdjustmentEntryInfo) Reset() {
	*x = AdjustmentEntryInfo{}
	mi := &file_api_ripple_v1_adjustmententry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdjustmentEntryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustmentEntryInfo) ProtoMessage() {}

func (x *AdjustmentEntryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_adjustmententry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustmentEntryInfo.ProtoReflect.Descriptor instead.
func (*AdjustmentEntryInfo) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_adjustmententry_proto_rawDescGZIP(), []int{2}
}

func (x *AdjustmentEntryInfo) GetCalculationType() string {
	if x != nil {
		return x.CalculationType
	}
	return ""
}

func (x *AdjustmentEntryInfo) GetAdjustmentEntryType() string {
	if x != nil {
		return x.AdjustmentEntryType
	}
	return ""
}

func (x *AdjustmentEntryInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AdjustmentEntryInfo) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *AdjustmentEntryInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *AdjustmentEntryInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AdjustmentEntryInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *AdjustmentEntryInfo) GetTimeInterval() string {
	if x != nil {
		return x.TimeInterval
	}
	return ""
}

func (x *AdjustmentEntryInfo) GetUsageStart() string {
	if x != nil {
		return x.UsageStart
	}
	return ""
}

// AdjustmentEntrySetting resource definition.
type AdjustmentEntrySetting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Applied to the billing.
	Apply bool `protobuf:"varint,1,opt,name=apply,proto3" json:"apply,omitempty"`
	// The exchange rate applied to the billing.
	ExchangeRate float64 `protobuf:"fixed64,2,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	// The tax free applied to the billing.
	TaxFree bool `protobuf:"varint,3,opt,name=taxFree,proto3" json:"taxFree,omitempty"`
	// The allocate type indicates the type to which an entry has been allocated.
	AllocateType string `protobuf:"bytes,4,opt,name=allocateType,proto3" json:"allocateType,omitempty"`
	// The split type indicates the type to which an entry has been splitted.
	SplitType string `protobuf:"bytes,5,opt,name=splitType,proto3" json:"splitType,omitempty"`
	// The original ID represents the originally allocated or splitted ID.
	OriginalId    string `protobuf:"bytes,6,opt,name=originalId,proto3" json:"originalId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdjustmentEntrySetting) Reset() {
	*x = AdjustmentEntrySetting{}
	mi := &file_api_ripple_v1_adjustmententry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdjustmentEntrySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustmentEntrySetting) ProtoMessage() {}

func (x *AdjustmentEntrySetting) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_v1_adjustmententry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustmentEntrySetting.ProtoReflect.Descriptor instead.
func (*AdjustmentEntrySetting) Descriptor() ([]byte, []int) {
	return file_api_ripple_v1_adjustmententry_proto_rawDescGZIP(), []int{3}
}

func (x *AdjustmentEntrySetting) GetApply() bool {
	if x != nil {
		return x.Apply
	}
	return false
}

func (x *AdjustmentEntrySetting) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *AdjustmentEntrySetting) GetTaxFree() bool {
	if x != nil {
		return x.TaxFree
	}
	return false
}

func (x *AdjustmentEntrySetting) GetAllocateType() string {
	if x != nil {
		return x.AllocateType
	}
	return ""
}

func (x *AdjustmentEntrySetting) GetSplitType() string {
	if x != nil {
		return x.SplitType
	}
	return ""
}

func (x *AdjustmentEntrySetting) GetOriginalId() string {
	if x != nil {
		return x.OriginalId
	}
	return ""
}

var File_api_ripple_v1_adjustmententry_proto protoreflect.FileDescriptor

var file_api_ripple_v1_adjustmententry_proto_rawDesc = string([]byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x8d, 0x02, 0x0a,
	0x0f, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72,
	0x69, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0xf6, 0x01, 0x0a,
	0x1a, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xcf, 0x02, 0x0a, 0x13, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x61, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x78, 0x46, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x74,
	0x61, 0x78, 0x46, 0x72, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70,
	0x6c, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x70, 0x6c, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x42, 0x76, 0x0a, 0x23, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x75, 0x73, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42,
	0x1d, 0x41, 0x70, 0x69, 0x52, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x75, 0x73, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x73, 0x64, 0x6b, 0x2d,
	0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x69, 0x70, 0x70, 0x6c, 0x65, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_ripple_v1_adjustmententry_proto_rawDescOnce sync.Once
	file_api_ripple_v1_adjustmententry_proto_rawDescData []byte
)

func file_api_ripple_v1_adjustmententry_proto_rawDescGZIP() []byte {
	file_api_ripple_v1_adjustmententry_proto_rawDescOnce.Do(func() {
		file_api_ripple_v1_adjustmententry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_ripple_v1_adjustmententry_proto_rawDesc), len(file_api_ripple_v1_adjustmententry_proto_rawDesc)))
	})
	return file_api_ripple_v1_adjustmententry_proto_rawDescData
}

var file_api_ripple_v1_adjustmententry_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_ripple_v1_adjustmententry_proto_goTypes = []any{
	(*AdjustmentEntry)(nil),            // 0: blueapi.api.ripple.v1.AdjustmentEntry
	(*AdjustmentEntryAccountInfo)(nil), // 1: blueapi.api.ripple.v1.AdjustmentEntryAccountInfo
	(*AdjustmentEntryInfo)(nil),        // 2: blueapi.api.ripple.v1.AdjustmentEntryInfo
	(*AdjustmentEntrySetting)(nil),     // 3: blueapi.api.ripple.v1.AdjustmentEntrySetting
}
var file_api_ripple_v1_adjustmententry_proto_depIdxs = []int32{
	1, // 0: blueapi.api.ripple.v1.AdjustmentEntry.account:type_name -> blueapi.api.ripple.v1.AdjustmentEntryAccountInfo
	2, // 1: blueapi.api.ripple.v1.AdjustmentEntry.entry:type_name -> blueapi.api.ripple.v1.AdjustmentEntryInfo
	3, // 2: blueapi.api.ripple.v1.AdjustmentEntry.setting:type_name -> blueapi.api.ripple.v1.AdjustmentEntrySetting
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_ripple_v1_adjustmententry_proto_init() }
func file_api_ripple_v1_adjustmententry_proto_init() {
	if File_api_ripple_v1_adjustmententry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_ripple_v1_adjustmententry_proto_rawDesc), len(file_api_ripple_v1_adjustmententry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_ripple_v1_adjustmententry_proto_goTypes,
		DependencyIndexes: file_api_ripple_v1_adjustmententry_proto_depIdxs,
		MessageInfos:      file_api_ripple_v1_adjustmententry_proto_msgTypes,
	}.Build()
	File_api_ripple_v1_adjustmententry_proto = out.File
	file_api_ripple_v1_adjustmententry_proto_goTypes = nil
	file_api_ripple_v1_adjustmententry_proto_depIdxs = nil
}
