// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/ripple/payer.proto

package ripple

import (
	api "github.com/alphauslabs/blue-sdk-go/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Payer resource definition.
type Payer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The payer account id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The payer account name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The attributes (key/value pair) of the account.
	Metadata []*api.KeyValue `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// List of all members under this payer.
	Members       []*api.Account `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Payer) Reset() {
	*x = Payer{}
	mi := &file_api_ripple_payer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payer) ProtoMessage() {}

func (x *Payer) ProtoReflect() protoreflect.Message {
	mi := &file_api_ripple_payer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payer.ProtoReflect.Descriptor instead.
func (*Payer) Descriptor() ([]byte, []int) {
	return file_api_ripple_payer_proto_rawDescGZIP(), []int{0}
}

func (x *Payer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Payer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Payer) GetMetadata() []*api.KeyValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Payer) GetMembers() []*api.Account {
	if x != nil {
		return x.Members
	}
	return nil
}

var File_api_ripple_payer_proto protoreflect.FileDescriptor

const file_api_ripple_payer_proto_rawDesc = "" +
	"\n" +
	"\x16api/ripple/payer.proto\x12\x12blueapi.api.ripple\x1a\x11api/account.proto\x1a\x12api/keyvalue.proto\"\x8e\x01\n" +
	"\x05Payer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x121\n" +
	"\bmetadata\x18\x03 \x03(\v2\x15.blueapi.api.KeyValueR\bmetadata\x12.\n" +
	"\amembers\x18\x04 \x03(\v2\x14.blueapi.api.AccountR\amembersBf\n" +
	" cloud.alphaus.blueapi.api.rippleB\x13ApiRipplePayerProtoZ-github.com/alphauslabs/blue-sdk-go/api/rippleb\x06proto3"

var (
	file_api_ripple_payer_proto_rawDescOnce sync.Once
	file_api_ripple_payer_proto_rawDescData []byte
)

func file_api_ripple_payer_proto_rawDescGZIP() []byte {
	file_api_ripple_payer_proto_rawDescOnce.Do(func() {
		file_api_ripple_payer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_ripple_payer_proto_rawDesc), len(file_api_ripple_payer_proto_rawDesc)))
	})
	return file_api_ripple_payer_proto_rawDescData
}

var file_api_ripple_payer_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_ripple_payer_proto_goTypes = []any{
	(*Payer)(nil),        // 0: blueapi.api.ripple.Payer
	(*api.KeyValue)(nil), // 1: blueapi.api.KeyValue
	(*api.Account)(nil),  // 2: blueapi.api.Account
}
var file_api_ripple_payer_proto_depIdxs = []int32{
	1, // 0: blueapi.api.ripple.Payer.metadata:type_name -> blueapi.api.KeyValue
	2, // 1: blueapi.api.ripple.Payer.members:type_name -> blueapi.api.Account
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_ripple_payer_proto_init() }
func file_api_ripple_payer_proto_init() {
	if File_api_ripple_payer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_ripple_payer_proto_rawDesc), len(file_api_ripple_payer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_ripple_payer_proto_goTypes,
		DependencyIndexes: file_api_ripple_payer_proto_depIdxs,
		MessageInfos:      file_api_ripple_payer_proto_msgTypes,
	}.Build()
	File_api_ripple_payer_proto = out.File
	file_api_ripple_payer_proto_goTypes = nil
	file_api_ripple_payer_proto_depIdxs = nil
}
