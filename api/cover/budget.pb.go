// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: api/cover/budget.proto

package cover

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BudgetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // not required for creating budget
	Name           string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Granularity    string                `protobuf:"bytes,4,opt,name=granularity,proto3" json:"granularity,omitempty"` // monthly, quarterly, yearly
	StartDate      string                `protobuf:"bytes,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate        string                `protobuf:"bytes,6,opt,name=endDate,proto3" json:"endDate,omitempty"`
	TotalBudget    float32               `protobuf:"fixed32,7,opt,name=totalBudget,proto3" json:"totalBudget,omitempty"`
	GranularBudget []*GranularBudgetData `protobuf:"bytes,8,rep,name=granularBudget,proto3" json:"granularBudget,omitempty"` // budget per month/quarter/year
	CostGroup      *AlertCostGroup       `protobuf:"bytes,9,opt,name=costGroup,proto3" json:"costGroup,omitempty"`
	Channels       *AlertChannels        `protobuf:"bytes,10,opt,name=channels,proto3" json:"channels,omitempty"`
	Threshold      *Threshold            `protobuf:"bytes,11,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Repeat         bool                  `protobuf:"varint,12,opt,name=repeat,proto3" json:"repeat,omitempty"` // set to true if budget is repeated over multiple periods
	Draft          bool                  `protobuf:"varint,13,opt,name=draft,proto3" json:"draft,omitempty"`   // set to true if the current budget set is still a draft
}

func (x *BudgetData) Reset() {
	*x = BudgetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cover_budget_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetData) ProtoMessage() {}

func (x *BudgetData) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_budget_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetData.ProtoReflect.Descriptor instead.
func (*BudgetData) Descriptor() ([]byte, []int) {
	return file_api_cover_budget_proto_rawDescGZIP(), []int{0}
}

func (x *BudgetData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BudgetData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BudgetData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BudgetData) GetGranularity() string {
	if x != nil {
		return x.Granularity
	}
	return ""
}

func (x *BudgetData) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *BudgetData) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *BudgetData) GetTotalBudget() float32 {
	if x != nil {
		return x.TotalBudget
	}
	return 0
}

func (x *BudgetData) GetGranularBudget() []*GranularBudgetData {
	if x != nil {
		return x.GranularBudget
	}
	return nil
}

func (x *BudgetData) GetCostGroup() *AlertCostGroup {
	if x != nil {
		return x.CostGroup
	}
	return nil
}

func (x *BudgetData) GetChannels() *AlertChannels {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *BudgetData) GetThreshold() *Threshold {
	if x != nil {
		return x.Threshold
	}
	return nil
}

func (x *BudgetData) GetRepeat() bool {
	if x != nil {
		return x.Repeat
	}
	return false
}

func (x *BudgetData) GetDraft() bool {
	if x != nil {
		return x.Draft
	}
	return false
}

type GranularBudgetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period string  `protobuf:"bytes,1,opt,name=period,proto3" json:"period,omitempty"` // name of month, quarter, year
	Budget float32 `protobuf:"fixed32,2,opt,name=budget,proto3" json:"budget,omitempty"`
}

func (x *GranularBudgetData) Reset() {
	*x = GranularBudgetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cover_budget_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GranularBudgetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GranularBudgetData) ProtoMessage() {}

func (x *GranularBudgetData) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_budget_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GranularBudgetData.ProtoReflect.Descriptor instead.
func (*GranularBudgetData) Descriptor() ([]byte, []int) {
	return file_api_cover_budget_proto_rawDescGZIP(), []int{1}
}

func (x *GranularBudgetData) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *GranularBudgetData) GetBudget() float32 {
	if x != nil {
		return x.Budget
	}
	return 0
}

type Threshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExactAmount []float32 `protobuf:"fixed32,1,rep,packed,name=exactAmount,proto3" json:"exactAmount,omitempty"` // when spending reaches this amount, alert is sent
	Percentage  []float32 `protobuf:"fixed32,2,rep,packed,name=percentage,proto3" json:"percentage,omitempty"`   // when spending reaches this percentage of the budget, alert is sent
}

func (x *Threshold) Reset() {
	*x = Threshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_cover_budget_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Threshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Threshold) ProtoMessage() {}

func (x *Threshold) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_budget_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Threshold.ProtoReflect.Descriptor instead.
func (*Threshold) Descriptor() ([]byte, []int) {
	return file_api_cover_budget_proto_rawDescGZIP(), []int{2}
}

func (x *Threshold) GetExactAmount() []float32 {
	if x != nil {
		return x.ExactAmount
	}
	return nil
}

func (x *Threshold) GetPercentage() []float32 {
	if x != nil {
		return x.Percentage
	}
	return nil
}

var File_api_cover_budget_proto protoreflect.FileDescriptor

var file_api_cover_budget_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2f, 0x62, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x1a, 0x15, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x86, 0x04, 0x0a, 0x0a, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72,
	0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x0e, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x6c,
	0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0e, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x42, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x3f, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x22, 0x44, 0x0a, 0x12, 0x47,
	0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x22, 0x4d, 0x0a, 0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x78, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x02, 0x52, 0x0b, 0x65, 0x78, 0x61, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x42, 0x64, 0x0a, 0x1f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x75,
	0x73, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x42, 0x13, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x75, 0x73, 0x6c, 0x61, 0x62, 0x73,
	0x2f, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_cover_budget_proto_rawDescOnce sync.Once
	file_api_cover_budget_proto_rawDescData = file_api_cover_budget_proto_rawDesc
)

func file_api_cover_budget_proto_rawDescGZIP() []byte {
	file_api_cover_budget_proto_rawDescOnce.Do(func() {
		file_api_cover_budget_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_cover_budget_proto_rawDescData)
	})
	return file_api_cover_budget_proto_rawDescData
}

var file_api_cover_budget_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_cover_budget_proto_goTypes = []interface{}{
	(*BudgetData)(nil),         // 0: blueapi.api.cover.BudgetData
	(*GranularBudgetData)(nil), // 1: blueapi.api.cover.GranularBudgetData
	(*Threshold)(nil),          // 2: blueapi.api.cover.Threshold
	(*AlertCostGroup)(nil),     // 3: blueapi.api.cover.AlertCostGroup
	(*AlertChannels)(nil),      // 4: blueapi.api.cover.AlertChannels
}
var file_api_cover_budget_proto_depIdxs = []int32{
	1, // 0: blueapi.api.cover.BudgetData.granularBudget:type_name -> blueapi.api.cover.GranularBudgetData
	3, // 1: blueapi.api.cover.BudgetData.costGroup:type_name -> blueapi.api.cover.AlertCostGroup
	4, // 2: blueapi.api.cover.BudgetData.channels:type_name -> blueapi.api.cover.AlertChannels
	2, // 3: blueapi.api.cover.BudgetData.threshold:type_name -> blueapi.api.cover.Threshold
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_cover_budget_proto_init() }
func file_api_cover_budget_proto_init() {
	if File_api_cover_budget_proto != nil {
		return
	}
	file_api_cover_alert_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_cover_budget_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BudgetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cover_budget_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GranularBudgetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_cover_budget_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Threshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_cover_budget_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_cover_budget_proto_goTypes,
		DependencyIndexes: file_api_cover_budget_proto_depIdxs,
		MessageInfos:      file_api_cover_budget_proto_msgTypes,
	}.Build()
	File_api_cover_budget_proto = out.File
	file_api_cover_budget_proto_rawDesc = nil
	file_api_cover_budget_proto_goTypes = nil
	file_api_cover_budget_proto_depIdxs = nil
}
