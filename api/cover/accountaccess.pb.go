// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/cover/accountaccess.proto

package cover

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistrationStatus struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ApiAccess           bool                   `protobuf:"varint,1,opt,name=apiAccess,proto3" json:"apiAccess,omitempty"`
	CloudwatchStreaming bool                   `protobuf:"varint,2,opt,name=cloudwatchStreaming,proto3" json:"cloudwatchStreaming,omitempty"`
	CurExport           bool                   `protobuf:"varint,3,opt,name=curExport,proto3" json:"curExport,omitempty"`
	Payer               bool                   `protobuf:"varint,4,opt,name=payer,proto3" json:"payer,omitempty"`
	StackSet            bool                   `protobuf:"varint,5,opt,name=stackSet,proto3" json:"stackSet,omitempty"`
	TransferAccount     bool                   `protobuf:"varint,6,opt,name=transferAccount,proto3" json:"transferAccount,omitempty"`
	IsDataAvailable     bool                   `protobuf:"varint,7,opt,name=isDataAvailable,proto3" json:"isDataAvailable,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RegistrationStatus) Reset() {
	*x = RegistrationStatus{}
	mi := &file_api_cover_accountaccess_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationStatus) ProtoMessage() {}

func (x *RegistrationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_accountaccess_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationStatus.ProtoReflect.Descriptor instead.
func (*RegistrationStatus) Descriptor() ([]byte, []int) {
	return file_api_cover_accountaccess_proto_rawDescGZIP(), []int{0}
}

func (x *RegistrationStatus) GetApiAccess() bool {
	if x != nil {
		return x.ApiAccess
	}
	return false
}

func (x *RegistrationStatus) GetCloudwatchStreaming() bool {
	if x != nil {
		return x.CloudwatchStreaming
	}
	return false
}

func (x *RegistrationStatus) GetCurExport() bool {
	if x != nil {
		return x.CurExport
	}
	return false
}

func (x *RegistrationStatus) GetPayer() bool {
	if x != nil {
		return x.Payer
	}
	return false
}

func (x *RegistrationStatus) GetStackSet() bool {
	if x != nil {
		return x.StackSet
	}
	return false
}

func (x *RegistrationStatus) GetTransferAccount() bool {
	if x != nil {
		return x.TransferAccount
	}
	return false
}

func (x *RegistrationStatus) GetIsDataAvailable() bool {
	if x != nil {
		return x.IsDataAvailable
	}
	return false
}

type TagData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TagKey        string                 `protobuf:"bytes,1,opt,name=tagKey,proto3" json:"tagKey,omitempty"`
	TagValue      []string               `protobuf:"bytes,2,rep,name=tagValue,proto3" json:"tagValue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagData) Reset() {
	*x = TagData{}
	mi := &file_api_cover_accountaccess_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagData) ProtoMessage() {}

func (x *TagData) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_accountaccess_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagData.ProtoReflect.Descriptor instead.
func (*TagData) Descriptor() ([]byte, []int) {
	return file_api_cover_accountaccess_proto_rawDescGZIP(), []int{1}
}

func (x *TagData) GetTagKey() string {
	if x != nil {
		return x.TagKey
	}
	return ""
}

func (x *TagData) GetTagValue() []string {
	if x != nil {
		return x.TagValue
	}
	return nil
}

type GcpOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Entity:
	//
	//	*GcpOptions_BillingOption_
	//	*GcpOptions_ProjectOption_
	Entity isGcpOptions_Entity `protobuf_oneof:"Entity"`
	// We'll keep this to avoid crash in production.
	// We will remove this after this changes released to prod
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	// where dataset is stored
	ProjectId     string `protobuf:"bytes,4,opt,name=projectId,proto3" json:"projectId,omitempty"`
	DatasetId     string `protobuf:"bytes,5,opt,name=datasetId,proto3" json:"datasetId,omitempty"`
	DatasetRegion string `protobuf:"bytes,6,opt,name=datasetRegion,proto3" json:"datasetRegion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GcpOptions) Reset() {
	*x = GcpOptions{}
	mi := &file_api_cover_accountaccess_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpOptions) ProtoMessage() {}

func (x *GcpOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_accountaccess_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpOptions.ProtoReflect.Descriptor instead.
func (*GcpOptions) Descriptor() ([]byte, []int) {
	return file_api_cover_accountaccess_proto_rawDescGZIP(), []int{2}
}

func (x *GcpOptions) GetEntity() isGcpOptions_Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *GcpOptions) GetBillingOption() *GcpOptions_BillingOption {
	if x != nil {
		if x, ok := x.Entity.(*GcpOptions_BillingOption_); ok {
			return x.BillingOption
		}
	}
	return nil
}

func (x *GcpOptions) GetProjectOption() *GcpOptions_ProjectOption {
	if x != nil {
		if x, ok := x.Entity.(*GcpOptions_ProjectOption_); ok {
			return x.ProjectOption
		}
	}
	return nil
}

func (x *GcpOptions) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GcpOptions) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GcpOptions) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *GcpOptions) GetDatasetRegion() string {
	if x != nil {
		return x.DatasetRegion
	}
	return ""
}

type isGcpOptions_Entity interface {
	isGcpOptions_Entity()
}

type GcpOptions_BillingOption_ struct {
	BillingOption *GcpOptions_BillingOption `protobuf:"bytes,1,opt,name=billingOption,proto3,oneof"`
}

type GcpOptions_ProjectOption_ struct {
	ProjectOption *GcpOptions_ProjectOption `protobuf:"bytes,2,opt,name=projectOption,proto3,oneof"`
}

func (*GcpOptions_BillingOption_) isGcpOptions_Entity() {}

func (*GcpOptions_ProjectOption_) isGcpOptions_Entity() {}

type AzureOptions struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccountName     string                 `protobuf:"bytes,1,opt,name=accountName,proto3" json:"accountName,omitempty"`
	AzureCustomerId string                 `protobuf:"bytes,2,opt,name=azureCustomerId,proto3" json:"azureCustomerId,omitempty"`
	AzurePlanId     string                 `protobuf:"bytes,3,opt,name=azurePlanId,proto3" json:"azurePlanId,omitempty"`
	ServiceAcct     string                 `protobuf:"bytes,4,opt,name=serviceAcct,proto3" json:"serviceAcct,omitempty"`
	PartnerAcct     string                 `protobuf:"bytes,5,opt,name=partnerAcct,proto3" json:"partnerAcct,omitempty"`
	CompanyId       string                 `protobuf:"bytes,6,opt,name=companyId,proto3" json:"companyId,omitempty"`
	PayerId         string                 `protobuf:"bytes,7,opt,name=payerId,proto3" json:"payerId,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AzureOptions) Reset() {
	*x = AzureOptions{}
	mi := &file_api_cover_accountaccess_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureOptions) ProtoMessage() {}

func (x *AzureOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_accountaccess_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureOptions.ProtoReflect.Descriptor instead.
func (*AzureOptions) Descriptor() ([]byte, []int) {
	return file_api_cover_accountaccess_proto_rawDescGZIP(), []int{3}
}

func (x *AzureOptions) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AzureOptions) GetAzureCustomerId() string {
	if x != nil {
		return x.AzureCustomerId
	}
	return ""
}

func (x *AzureOptions) GetAzurePlanId() string {
	if x != nil {
		return x.AzurePlanId
	}
	return ""
}

func (x *AzureOptions) GetServiceAcct() string {
	if x != nil {
		return x.ServiceAcct
	}
	return ""
}

func (x *AzureOptions) GetPartnerAcct() string {
	if x != nil {
		return x.PartnerAcct
	}
	return ""
}

func (x *AzureOptions) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *AzureOptions) GetPayerId() string {
	if x != nil {
		return x.PayerId
	}
	return ""
}

type AwsOptions struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AccountName        string                 `protobuf:"bytes,1,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	PayerId            string                 `protobuf:"bytes,2,opt,name=PayerId,proto3" json:"PayerId,omitempty"`
	RoleArn            string                 `protobuf:"bytes,3,opt,name=RoleArn,proto3" json:"RoleArn,omitempty"`
	ExternalId         string                 `protobuf:"bytes,4,opt,name=ExternalId,proto3" json:"ExternalId,omitempty"`
	StackId            string                 `protobuf:"bytes,5,opt,name=StackId,proto3" json:"StackId,omitempty"`
	StackRegion        string                 `protobuf:"bytes,6,opt,name=StackRegion,proto3" json:"StackRegion,omitempty"`
	TemplateUrl        string                 `protobuf:"bytes,7,opt,name=TemplateUrl,proto3" json:"TemplateUrl,omitempty"`
	BucketName         string                 `protobuf:"bytes,8,opt,name=BucketName,proto3" json:"BucketName,omitempty"`
	Prefix             string                 `protobuf:"bytes,9,opt,name=Prefix,proto3" json:"Prefix,omitempty"`
	ReportName         string                 `protobuf:"bytes,10,opt,name=ReportName,proto3" json:"ReportName,omitempty"`
	RegistrationStatus *RegistrationStatus    `protobuf:"bytes,11,opt,name=registrationStatus,proto3" json:"registrationStatus,omitempty"`
	Status             string                 `protobuf:"bytes,12,opt,name=Status,proto3" json:"Status,omitempty"`
	// Valid values for now are: 'console', 'terraform'. default would be 'console'
	RegistrationMethod string `protobuf:"bytes,13,opt,name=RegistrationMethod,proto3" json:"RegistrationMethod,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AwsOptions) Reset() {
	*x = AwsOptions{}
	mi := &file_api_cover_accountaccess_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsOptions) ProtoMessage() {}

func (x *AwsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_accountaccess_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsOptions.ProtoReflect.Descriptor instead.
func (*AwsOptions) Descriptor() ([]byte, []int) {
	return file_api_cover_accountaccess_proto_rawDescGZIP(), []int{4}
}

func (x *AwsOptions) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AwsOptions) GetPayerId() string {
	if x != nil {
		return x.PayerId
	}
	return ""
}

func (x *AwsOptions) GetRoleArn() string {
	if x != nil {
		return x.RoleArn
	}
	return ""
}

func (x *AwsOptions) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *AwsOptions) GetStackId() string {
	if x != nil {
		return x.StackId
	}
	return ""
}

func (x *AwsOptions) GetStackRegion() string {
	if x != nil {
		return x.StackRegion
	}
	return ""
}

func (x *AwsOptions) GetTemplateUrl() string {
	if x != nil {
		return x.TemplateUrl
	}
	return ""
}

func (x *AwsOptions) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *AwsOptions) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *AwsOptions) GetReportName() string {
	if x != nil {
		return x.ReportName
	}
	return ""
}

func (x *AwsOptions) GetRegistrationStatus() *RegistrationStatus {
	if x != nil {
		return x.RegistrationStatus
	}
	return nil
}

func (x *AwsOptions) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AwsOptions) GetRegistrationMethod() string {
	if x != nil {
		return x.RegistrationMethod
	}
	return ""
}

// V2
type GcpOptions_BillingOption struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AccountName    string                 `protobuf:"bytes,1,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ProjectId      string                 `protobuf:"bytes,2,opt,name=projectId,proto3" json:"projectId,omitempty"`
	DatasetId      string                 `protobuf:"bytes,3,opt,name=datasetId,proto3" json:"datasetId,omitempty"`
	DatasetRegion  string                 `protobuf:"bytes,4,opt,name=datasetRegion,proto3" json:"datasetRegion,omitempty"`
	BigQueryStatus bool                   `protobuf:"varint,5,opt,name=bigQueryStatus,proto3" json:"bigQueryStatus,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GcpOptions_BillingOption) Reset() {
	*x = GcpOptions_BillingOption{}
	mi := &file_api_cover_accountaccess_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpOptions_BillingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpOptions_BillingOption) ProtoMessage() {}

func (x *GcpOptions_BillingOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_accountaccess_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpOptions_BillingOption.ProtoReflect.Descriptor instead.
func (*GcpOptions_BillingOption) Descriptor() ([]byte, []int) {
	return file_api_cover_accountaccess_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GcpOptions_BillingOption) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GcpOptions_BillingOption) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GcpOptions_BillingOption) GetDatasetId() string {
	if x != nil {
		return x.DatasetId
	}
	return ""
}

func (x *GcpOptions_BillingOption) GetDatasetRegion() string {
	if x != nil {
		return x.DatasetRegion
	}
	return ""
}

func (x *GcpOptions_BillingOption) GetBigQueryStatus() bool {
	if x != nil {
		return x.BigQueryStatus
	}
	return false
}

type GcpOptions_ProjectOption struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ApiAccess        bool                   `protobuf:"varint,1,opt,name=apiAccess,proto3" json:"apiAccess,omitempty"`
	ProjectName      string                 `protobuf:"bytes,2,opt,name=projectName,proto3" json:"projectName,omitempty"`
	ProjectNumber    string                 `protobuf:"bytes,3,opt,name=projectNumber,proto3" json:"projectNumber,omitempty"`
	BillingAccountId string                 `protobuf:"bytes,4,opt,name=billingAccountId,proto3" json:"billingAccountId,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GcpOptions_ProjectOption) Reset() {
	*x = GcpOptions_ProjectOption{}
	mi := &file_api_cover_accountaccess_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GcpOptions_ProjectOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpOptions_ProjectOption) ProtoMessage() {}

func (x *GcpOptions_ProjectOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_accountaccess_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpOptions_ProjectOption.ProtoReflect.Descriptor instead.
func (*GcpOptions_ProjectOption) Descriptor() ([]byte, []int) {
	return file_api_cover_accountaccess_proto_rawDescGZIP(), []int{2, 1}
}

func (x *GcpOptions_ProjectOption) GetApiAccess() bool {
	if x != nil {
		return x.ApiAccess
	}
	return false
}

func (x *GcpOptions_ProjectOption) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GcpOptions_ProjectOption) GetProjectNumber() string {
	if x != nil {
		return x.ProjectNumber
	}
	return ""
}

func (x *GcpOptions_ProjectOption) GetBillingAccountId() string {
	if x != nil {
		return x.BillingAccountId
	}
	return ""
}

var File_api_cover_accountaccess_proto protoreflect.FileDescriptor

const file_api_cover_accountaccess_proto_rawDesc = "" +
	"\n" +
	"\x1dapi/cover/accountaccess.proto\x12\x11blueapi.api.cover\"\x88\x02\n" +
	"\x12RegistrationStatus\x12\x1c\n" +
	"\tapiAccess\x18\x01 \x01(\bR\tapiAccess\x120\n" +
	"\x13cloudwatchStreaming\x18\x02 \x01(\bR\x13cloudwatchStreaming\x12\x1c\n" +
	"\tcurExport\x18\x03 \x01(\bR\tcurExport\x12\x14\n" +
	"\x05payer\x18\x04 \x01(\bR\x05payer\x12\x1a\n" +
	"\bstackSet\x18\x05 \x01(\bR\bstackSet\x12(\n" +
	"\x0ftransferAccount\x18\x06 \x01(\bR\x0ftransferAccount\x12(\n" +
	"\x0fisDataAvailable\x18\a \x01(\bR\x0fisDataAvailable\"=\n" +
	"\aTagData\x12\x16\n" +
	"\x06tagKey\x18\x01 \x01(\tR\x06tagKey\x12\x1a\n" +
	"\btagValue\x18\x02 \x03(\tR\btagValue\"\xa6\x05\n" +
	"\n" +
	"GcpOptions\x12S\n" +
	"\rbillingOption\x18\x01 \x01(\v2+.blueapi.api.cover.GcpOptions.BillingOptionH\x00R\rbillingOption\x12S\n" +
	"\rprojectOption\x18\x02 \x01(\v2+.blueapi.api.cover.GcpOptions.ProjectOptionH\x00R\rprojectOption\x12 \n" +
	"\vaccountName\x18\x03 \x01(\tR\vaccountName\x12\x1c\n" +
	"\tprojectId\x18\x04 \x01(\tR\tprojectId\x12\x1c\n" +
	"\tdatasetId\x18\x05 \x01(\tR\tdatasetId\x12$\n" +
	"\rdatasetRegion\x18\x06 \x01(\tR\rdatasetRegion\x1a\xbb\x01\n" +
	"\rBillingOption\x12 \n" +
	"\vaccountName\x18\x01 \x01(\tR\vaccountName\x12\x1c\n" +
	"\tprojectId\x18\x02 \x01(\tR\tprojectId\x12\x1c\n" +
	"\tdatasetId\x18\x03 \x01(\tR\tdatasetId\x12$\n" +
	"\rdatasetRegion\x18\x04 \x01(\tR\rdatasetRegion\x12&\n" +
	"\x0ebigQueryStatus\x18\x05 \x01(\bR\x0ebigQueryStatus\x1a\xa1\x01\n" +
	"\rProjectOption\x12\x1c\n" +
	"\tapiAccess\x18\x01 \x01(\bR\tapiAccess\x12 \n" +
	"\vprojectName\x18\x02 \x01(\tR\vprojectName\x12$\n" +
	"\rprojectNumber\x18\x03 \x01(\tR\rprojectNumber\x12*\n" +
	"\x10billingAccountId\x18\x04 \x01(\tR\x10billingAccountIdB\b\n" +
	"\x06Entity\"\xf8\x01\n" +
	"\fAzureOptions\x12 \n" +
	"\vaccountName\x18\x01 \x01(\tR\vaccountName\x12(\n" +
	"\x0fazureCustomerId\x18\x02 \x01(\tR\x0fazureCustomerId\x12 \n" +
	"\vazurePlanId\x18\x03 \x01(\tR\vazurePlanId\x12 \n" +
	"\vserviceAcct\x18\x04 \x01(\tR\vserviceAcct\x12 \n" +
	"\vpartnerAcct\x18\x05 \x01(\tR\vpartnerAcct\x12\x1c\n" +
	"\tcompanyId\x18\x06 \x01(\tR\tcompanyId\x12\x18\n" +
	"\apayerId\x18\a \x01(\tR\apayerId\"\xd7\x03\n" +
	"\n" +
	"AwsOptions\x12 \n" +
	"\vAccountName\x18\x01 \x01(\tR\vAccountName\x12\x18\n" +
	"\aPayerId\x18\x02 \x01(\tR\aPayerId\x12\x18\n" +
	"\aRoleArn\x18\x03 \x01(\tR\aRoleArn\x12\x1e\n" +
	"\n" +
	"ExternalId\x18\x04 \x01(\tR\n" +
	"ExternalId\x12\x18\n" +
	"\aStackId\x18\x05 \x01(\tR\aStackId\x12 \n" +
	"\vStackRegion\x18\x06 \x01(\tR\vStackRegion\x12 \n" +
	"\vTemplateUrl\x18\a \x01(\tR\vTemplateUrl\x12\x1e\n" +
	"\n" +
	"BucketName\x18\b \x01(\tR\n" +
	"BucketName\x12\x16\n" +
	"\x06Prefix\x18\t \x01(\tR\x06Prefix\x12\x1e\n" +
	"\n" +
	"ReportName\x18\n" +
	" \x01(\tR\n" +
	"ReportName\x12U\n" +
	"\x12registrationStatus\x18\v \x01(\v2%.blueapi.api.cover.RegistrationStatusR\x12registrationStatus\x12\x16\n" +
	"\x06Status\x18\f \x01(\tR\x06Status\x12.\n" +
	"\x12RegistrationMethod\x18\r \x01(\tR\x12RegistrationMethodBk\n" +
	"\x1fcloud.alphaus.blueapi.api.coverB\x1aApiCoverAccountAccessProtoZ,github.com/alphauslabs/blue-sdk-go/api/coverb\x06proto3"

var (
	file_api_cover_accountaccess_proto_rawDescOnce sync.Once
	file_api_cover_accountaccess_proto_rawDescData []byte
)

func file_api_cover_accountaccess_proto_rawDescGZIP() []byte {
	file_api_cover_accountaccess_proto_rawDescOnce.Do(func() {
		file_api_cover_accountaccess_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_cover_accountaccess_proto_rawDesc), len(file_api_cover_accountaccess_proto_rawDesc)))
	})
	return file_api_cover_accountaccess_proto_rawDescData
}

var file_api_cover_accountaccess_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_cover_accountaccess_proto_goTypes = []any{
	(*RegistrationStatus)(nil),       // 0: blueapi.api.cover.RegistrationStatus
	(*TagData)(nil),                  // 1: blueapi.api.cover.TagData
	(*GcpOptions)(nil),               // 2: blueapi.api.cover.GcpOptions
	(*AzureOptions)(nil),             // 3: blueapi.api.cover.AzureOptions
	(*AwsOptions)(nil),               // 4: blueapi.api.cover.AwsOptions
	(*GcpOptions_BillingOption)(nil), // 5: blueapi.api.cover.GcpOptions.BillingOption
	(*GcpOptions_ProjectOption)(nil), // 6: blueapi.api.cover.GcpOptions.ProjectOption
}
var file_api_cover_accountaccess_proto_depIdxs = []int32{
	5, // 0: blueapi.api.cover.GcpOptions.billingOption:type_name -> blueapi.api.cover.GcpOptions.BillingOption
	6, // 1: blueapi.api.cover.GcpOptions.projectOption:type_name -> blueapi.api.cover.GcpOptions.ProjectOption
	0, // 2: blueapi.api.cover.AwsOptions.registrationStatus:type_name -> blueapi.api.cover.RegistrationStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_cover_accountaccess_proto_init() }
func file_api_cover_accountaccess_proto_init() {
	if File_api_cover_accountaccess_proto != nil {
		return
	}
	file_api_cover_accountaccess_proto_msgTypes[2].OneofWrappers = []any{
		(*GcpOptions_BillingOption_)(nil),
		(*GcpOptions_ProjectOption_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_cover_accountaccess_proto_rawDesc), len(file_api_cover_accountaccess_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_cover_accountaccess_proto_goTypes,
		DependencyIndexes: file_api_cover_accountaccess_proto_depIdxs,
		MessageInfos:      file_api_cover_accountaccess_proto_msgTypes,
	}.Build()
	File_api_cover_accountaccess_proto = out.File
	file_api_cover_accountaccess_proto_goTypes = nil
	file_api_cover_accountaccess_proto_depIdxs = nil
}
