// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: api/cover/costforecast.proto

package cover

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AwsCostForecast struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// For daily data, format is `yyyy-mm-dd`; for monthly, `yyyy-mm`.
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	// The account being queried.
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// The product code for an AWS service
	ProductCode string `protobuf:"bytes,3,opt,name=productCode,proto3" json:"productCode,omitempty"`
	// Forcasted cost based on true cost (calculated)
	Cost       float64 `protobuf:"fixed64,4,opt,name=cost,proto3" json:"cost,omitempty"`
	LowerBound float64 `protobuf:"fixed64,5,opt,name=lowerBound,proto3" json:"lowerBound,omitempty"`
	UpperBound float64 `protobuf:"fixed64,6,opt,name=upperBound,proto3" json:"upperBound,omitempty"`
	// Forcasted cost based on unblended cost
	UnblendedCost       float64 `protobuf:"fixed64,7,opt,name=unblendedCost,proto3" json:"unblendedCost,omitempty"`
	UnblendedLowerBound float64 `protobuf:"fixed64,8,opt,name=unblendedLowerBound,proto3" json:"unblendedLowerBound,omitempty"`
	UnblendedUpperBound float64 `protobuf:"fixed64,9,opt,name=unblendedUpperBound,proto3" json:"unblendedUpperBound,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AwsCostForecast) Reset() {
	*x = AwsCostForecast{}
	mi := &file_api_cover_costforecast_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsCostForecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsCostForecast) ProtoMessage() {}

func (x *AwsCostForecast) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_costforecast_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsCostForecast.ProtoReflect.Descriptor instead.
func (*AwsCostForecast) Descriptor() ([]byte, []int) {
	return file_api_cover_costforecast_proto_rawDescGZIP(), []int{0}
}

func (x *AwsCostForecast) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AwsCostForecast) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AwsCostForecast) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

func (x *AwsCostForecast) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *AwsCostForecast) GetLowerBound() float64 {
	if x != nil {
		return x.LowerBound
	}
	return 0
}

func (x *AwsCostForecast) GetUpperBound() float64 {
	if x != nil {
		return x.UpperBound
	}
	return 0
}

func (x *AwsCostForecast) GetUnblendedCost() float64 {
	if x != nil {
		return x.UnblendedCost
	}
	return 0
}

func (x *AwsCostForecast) GetUnblendedLowerBound() float64 {
	if x != nil {
		return x.UnblendedLowerBound
	}
	return 0
}

func (x *AwsCostForecast) GetUnblendedUpperBound() float64 {
	if x != nil {
		return x.UnblendedUpperBound
	}
	return 0
}

type CostGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // cost group name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CostGroup) Reset() {
	*x = CostGroup{}
	mi := &file_api_cover_costforecast_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CostGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostGroup) ProtoMessage() {}

func (x *CostGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_costforecast_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostGroup.ProtoReflect.Descriptor instead.
func (*CostGroup) Descriptor() ([]byte, []int) {
	return file_api_cover_costforecast_proto_rawDescGZIP(), []int{1}
}

func (x *CostGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CostGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CostForecastDetails struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ForecastName    string                 `protobuf:"bytes,2,opt,name=forecastName,proto3" json:"forecastName,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Costgroup       *CostGroup             `protobuf:"bytes,4,opt,name=costgroup,proto3" json:"costgroup,omitempty"`
	StartDate       string                 `protobuf:"bytes,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate         string                 `protobuf:"bytes,6,opt,name=endDate,proto3" json:"endDate,omitempty"`
	CreatedBy       string                 `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreationDate    string                 `protobuf:"bytes,8,opt,name=creationDate,proto3" json:"creationDate,omitempty"`
	LastUpdatedDate string                 `protobuf:"bytes,9,opt,name=lastUpdatedDate,proto3" json:"lastUpdatedDate,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CostForecastDetails) Reset() {
	*x = CostForecastDetails{}
	mi := &file_api_cover_costforecast_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CostForecastDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostForecastDetails) ProtoMessage() {}

func (x *CostForecastDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_costforecast_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostForecastDetails.ProtoReflect.Descriptor instead.
func (*CostForecastDetails) Descriptor() ([]byte, []int) {
	return file_api_cover_costforecast_proto_rawDescGZIP(), []int{2}
}

func (x *CostForecastDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CostForecastDetails) GetForecastName() string {
	if x != nil {
		return x.ForecastName
	}
	return ""
}

func (x *CostForecastDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CostForecastDetails) GetCostgroup() *CostGroup {
	if x != nil {
		return x.Costgroup
	}
	return nil
}

func (x *CostForecastDetails) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CostForecastDetails) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CostForecastDetails) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CostForecastDetails) GetCreationDate() string {
	if x != nil {
		return x.CreationDate
	}
	return ""
}

func (x *CostForecastDetails) GetLastUpdatedDate() string {
	if x != nil {
		return x.LastUpdatedDate
	}
	return ""
}

type ExternalAdjustment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the adjustment
	Name          string                    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Adjustments   []*CostForecastAdjustment `protobuf:"bytes,4,rep,name=adjustments,proto3" json:"adjustments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalAdjustment) Reset() {
	*x = ExternalAdjustment{}
	mi := &file_api_cover_costforecast_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalAdjustment) ProtoMessage() {}

func (x *ExternalAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_costforecast_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalAdjustment.ProtoReflect.Descriptor instead.
func (*ExternalAdjustment) Descriptor() ([]byte, []int) {
	return file_api_cover_costforecast_proto_rawDescGZIP(), []int{3}
}

func (x *ExternalAdjustment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExternalAdjustment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExternalAdjustment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExternalAdjustment) GetAdjustments() []*CostForecastAdjustment {
	if x != nil {
		return x.Adjustments
	}
	return nil
}

type CostForecastAdjustment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// For monthly adjustment, format is yyyy-mm.
	Month         string  `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	Adjustment    float64 `protobuf:"fixed64,2,opt,name=adjustment,proto3" json:"adjustment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CostForecastAdjustment) Reset() {
	*x = CostForecastAdjustment{}
	mi := &file_api_cover_costforecast_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CostForecastAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostForecastAdjustment) ProtoMessage() {}

func (x *CostForecastAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_costforecast_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostForecastAdjustment.ProtoReflect.Descriptor instead.
func (*CostForecastAdjustment) Descriptor() ([]byte, []int) {
	return file_api_cover_costforecast_proto_rawDescGZIP(), []int{4}
}

func (x *CostForecastAdjustment) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *CostForecastAdjustment) GetAdjustment() float64 {
	if x != nil {
		return x.Adjustment
	}
	return 0
}

var File_api_cover_costforecast_proto protoreflect.FileDescriptor

var file_api_cover_costforecast_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x73, 0x74,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x22, 0xbf, 0x02, 0x0a, 0x0f, 0x41, 0x77, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x70,
	0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75,
	0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6e, 0x62,
	0x6c, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x75, 0x6e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x13, 0x75, 0x6e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4c, 0x6f, 0x77, 0x65,
	0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x75, 0x6e,
	0x62, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x55, 0x70,
	0x70, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13,
	0x75, 0x6e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x55, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x22, 0x2f, 0x0a, 0x09, 0x43, 0x6f, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xcb, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4b, 0x0a, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4e, 0x0a, 0x16,
	0x43, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6a, 0x0a, 0x1f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x75, 0x73, 0x2e, 0x62, 0x6c,
	0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x42,
	0x19, 0x41, 0x70, 0x69, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x75, 0x73, 0x6c, 0x61,
	0x62, 0x73, 0x2f, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_api_cover_costforecast_proto_rawDescOnce sync.Once
	file_api_cover_costforecast_proto_rawDescData []byte
)

func file_api_cover_costforecast_proto_rawDescGZIP() []byte {
	file_api_cover_costforecast_proto_rawDescOnce.Do(func() {
		file_api_cover_costforecast_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_cover_costforecast_proto_rawDesc), len(file_api_cover_costforecast_proto_rawDesc)))
	})
	return file_api_cover_costforecast_proto_rawDescData
}

var file_api_cover_costforecast_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_cover_costforecast_proto_goTypes = []any{
	(*AwsCostForecast)(nil),        // 0: blueapi.api.cover.AwsCostForecast
	(*CostGroup)(nil),              // 1: blueapi.api.cover.CostGroup
	(*CostForecastDetails)(nil),    // 2: blueapi.api.cover.CostForecastDetails
	(*ExternalAdjustment)(nil),     // 3: blueapi.api.cover.ExternalAdjustment
	(*CostForecastAdjustment)(nil), // 4: blueapi.api.cover.CostForecastAdjustment
}
var file_api_cover_costforecast_proto_depIdxs = []int32{
	1, // 0: blueapi.api.cover.CostForecastDetails.costgroup:type_name -> blueapi.api.cover.CostGroup
	4, // 1: blueapi.api.cover.ExternalAdjustment.adjustments:type_name -> blueapi.api.cover.CostForecastAdjustment
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_cover_costforecast_proto_init() }
func file_api_cover_costforecast_proto_init() {
	if File_api_cover_costforecast_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_cover_costforecast_proto_rawDesc), len(file_api_cover_costforecast_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_cover_costforecast_proto_goTypes,
		DependencyIndexes: file_api_cover_costforecast_proto_depIdxs,
		MessageInfos:      file_api_cover_costforecast_proto_msgTypes,
	}.Build()
	File_api_cover_costforecast_proto = out.File
	file_api_cover_costforecast_proto_goTypes = nil
	file_api_cover_costforecast_proto_depIdxs = nil
}
