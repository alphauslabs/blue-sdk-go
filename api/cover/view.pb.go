// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/cover/view.proto

package cover

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ViewData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,4,opt,name=isPrivate,proto3" json:"isPrivate,omitempty"`
	IsEditable    bool                   `protobuf:"varint,5,opt,name=isEditable,proto3" json:"isEditable,omitempty"`
	Icon          string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	CreatedBy     *MemberUserData        `protobuf:"bytes,7,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedBy     *MemberUserData        `protobuf:"bytes,9,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Layout        []*WidgetData          `protobuf:"bytes,11,rep,name=layout,proto3" json:"layout,omitempty"`
	SideMenu      *SideMenu              `protobuf:"bytes,12,opt,name=sideMenu,proto3" json:"sideMenu,omitempty"`
	ReportType    string                 `protobuf:"bytes,13,opt,name=reportType,proto3" json:"reportType,omitempty"`
	ColorTheme    string                 `protobuf:"bytes,14,opt,name=colorTheme,proto3" json:"colorTheme,omitempty"`
	Currency      string                 `protobuf:"bytes,15,opt,name=currency,proto3" json:"currency,omitempty"`
	ReportPeriod  string                 `protobuf:"bytes,16,opt,name=reportPeriod,proto3" json:"reportPeriod,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewData) Reset() {
	*x = ViewData{}
	mi := &file_api_cover_view_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewData) ProtoMessage() {}

func (x *ViewData) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_view_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewData.ProtoReflect.Descriptor instead.
func (*ViewData) Descriptor() ([]byte, []int) {
	return file_api_cover_view_proto_rawDescGZIP(), []int{0}
}

func (x *ViewData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ViewData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ViewData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ViewData) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *ViewData) GetIsEditable() bool {
	if x != nil {
		return x.IsEditable
	}
	return false
}

func (x *ViewData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ViewData) GetCreatedBy() *MemberUserData {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *ViewData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ViewData) GetUpdatedBy() *MemberUserData {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *ViewData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ViewData) GetLayout() []*WidgetData {
	if x != nil {
		return x.Layout
	}
	return nil
}

func (x *ViewData) GetSideMenu() *SideMenu {
	if x != nil {
		return x.SideMenu
	}
	return nil
}

func (x *ViewData) GetReportType() string {
	if x != nil {
		return x.ReportType
	}
	return ""
}

func (x *ViewData) GetColorTheme() string {
	if x != nil {
		return x.ColorTheme
	}
	return ""
}

func (x *ViewData) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ViewData) GetReportPeriod() string {
	if x != nil {
		return x.ReportPeriod
	}
	return ""
}

type ViewList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,4,opt,name=isPrivate,proto3" json:"isPrivate,omitempty"`
	IsEditable    bool                   `protobuf:"varint,5,opt,name=isEditable,proto3" json:"isEditable,omitempty"`
	Icon          string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ColorTheme    string                 `protobuf:"bytes,9,opt,name=colorTheme,proto3" json:"colorTheme,omitempty"`
	ReportType    string                 `protobuf:"bytes,10,opt,name=reportType,proto3" json:"reportType,omitempty"`
	ReportPeriod  string                 `protobuf:"bytes,11,opt,name=reportPeriod,proto3" json:"reportPeriod,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewList) Reset() {
	*x = ViewList{}
	mi := &file_api_cover_view_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewList) ProtoMessage() {}

func (x *ViewList) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_view_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewList.ProtoReflect.Descriptor instead.
func (*ViewList) Descriptor() ([]byte, []int) {
	return file_api_cover_view_proto_rawDescGZIP(), []int{1}
}

func (x *ViewList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ViewList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ViewList) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ViewList) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *ViewList) GetIsEditable() bool {
	if x != nil {
		return x.IsEditable
	}
	return false
}

func (x *ViewList) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ViewList) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ViewList) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ViewList) GetColorTheme() string {
	if x != nil {
		return x.ColorTheme
	}
	return ""
}

func (x *ViewList) GetReportType() string {
	if x != nil {
		return x.ReportType
	}
	return ""
}

func (x *ViewList) GetReportPeriod() string {
	if x != nil {
		return x.ReportPeriod
	}
	return ""
}

type ViewLayout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WidgetId      string                 `protobuf:"bytes,1,opt,name=widgetId,proto3" json:"widgetId,omitempty"`
	WidgetData    *WidgetData            `protobuf:"bytes,2,opt,name=widgetData,proto3" json:"widgetData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ViewLayout) Reset() {
	*x = ViewLayout{}
	mi := &file_api_cover_view_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ViewLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewLayout) ProtoMessage() {}

func (x *ViewLayout) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_view_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewLayout.ProtoReflect.Descriptor instead.
func (*ViewLayout) Descriptor() ([]byte, []int) {
	return file_api_cover_view_proto_rawDescGZIP(), []int{2}
}

func (x *ViewLayout) GetWidgetId() string {
	if x != nil {
		return x.WidgetId
	}
	return ""
}

func (x *ViewLayout) GetWidgetData() *WidgetData {
	if x != nil {
		return x.WidgetData
	}
	return nil
}

type WidgetData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	X             float64                `protobuf:"fixed64,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             float64                `protobuf:"fixed64,3,opt,name=y,proto3" json:"y,omitempty"`
	ComponentId   string                 `protobuf:"bytes,4,opt,name=componentId,proto3" json:"componentId,omitempty"`
	Options       *structpb.Struct       `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	Requests      []*LayoutRequests      `protobuf:"bytes,6,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WidgetData) Reset() {
	*x = WidgetData{}
	mi := &file_api_cover_view_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WidgetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetData) ProtoMessage() {}

func (x *WidgetData) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_view_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetData.ProtoReflect.Descriptor instead.
func (*WidgetData) Descriptor() ([]byte, []int) {
	return file_api_cover_view_proto_rawDescGZIP(), []int{3}
}

func (x *WidgetData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WidgetData) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *WidgetData) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *WidgetData) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *WidgetData) GetOptions() *structpb.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *WidgetData) GetRequests() []*LayoutRequests {
	if x != nil {
		return x.Requests
	}
	return nil
}

type SideMenu struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Favorite           []string               `protobuf:"bytes,1,rep,name=favorite,proto3" json:"favorite,omitempty"`
	IsOpenedAdmin      bool                   `protobuf:"varint,2,opt,name=isOpenedAdmin,proto3" json:"isOpenedAdmin,omitempty"`
	IsOpenedFeatures   bool                   `protobuf:"varint,3,opt,name=isOpenedFeatures,proto3" json:"isOpenedFeatures,omitempty"`
	IsOpenedCostGroups bool                   `protobuf:"varint,4,opt,name=isOpenedCostGroups,proto3" json:"isOpenedCostGroups,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SideMenu) Reset() {
	*x = SideMenu{}
	mi := &file_api_cover_view_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SideMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideMenu) ProtoMessage() {}

func (x *SideMenu) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_view_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideMenu.ProtoReflect.Descriptor instead.
func (*SideMenu) Descriptor() ([]byte, []int) {
	return file_api_cover_view_proto_rawDescGZIP(), []int{4}
}

func (x *SideMenu) GetFavorite() []string {
	if x != nil {
		return x.Favorite
	}
	return nil
}

func (x *SideMenu) GetIsOpenedAdmin() bool {
	if x != nil {
		return x.IsOpenedAdmin
	}
	return false
}

func (x *SideMenu) GetIsOpenedFeatures() bool {
	if x != nil {
		return x.IsOpenedFeatures
	}
	return false
}

func (x *SideMenu) GetIsOpenedCostGroups() bool {
	if x != nil {
		return x.IsOpenedCostGroups
	}
	return false
}

type LayoutRequests struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Params        *structpb.Struct       `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	Hash          string                 `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LayoutRequests) Reset() {
	*x = LayoutRequests{}
	mi := &file_api_cover_view_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LayoutRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayoutRequests) ProtoMessage() {}

func (x *LayoutRequests) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_view_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayoutRequests.ProtoReflect.Descriptor instead.
func (*LayoutRequests) Descriptor() ([]byte, []int) {
	return file_api_cover_view_proto_rawDescGZIP(), []int{5}
}

func (x *LayoutRequests) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LayoutRequests) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LayoutRequests) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LayoutRequests) GetParams() *structpb.Struct {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *LayoutRequests) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type Favorites struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,4,opt,name=isPrivate,proto3" json:"isPrivate,omitempty"`
	Icon          string                 `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ColorTheme    string                 `protobuf:"bytes,8,opt,name=colorTheme,proto3" json:"colorTheme,omitempty"`
	ReportType    string                 `protobuf:"bytes,9,opt,name=reportType,proto3" json:"reportType,omitempty"`
	ReportPeriod  string                 `protobuf:"bytes,10,opt,name=reportPeriod,proto3" json:"reportPeriod,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Favorites) Reset() {
	*x = Favorites{}
	mi := &file_api_cover_view_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Favorites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Favorites) ProtoMessage() {}

func (x *Favorites) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_view_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Favorites.ProtoReflect.Descriptor instead.
func (*Favorites) Descriptor() ([]byte, []int) {
	return file_api_cover_view_proto_rawDescGZIP(), []int{6}
}

func (x *Favorites) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Favorites) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Favorites) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Favorites) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *Favorites) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Favorites) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Favorites) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Favorites) GetColorTheme() string {
	if x != nil {
		return x.ColorTheme
	}
	return ""
}

func (x *Favorites) GetReportType() string {
	if x != nil {
		return x.ReportType
	}
	return ""
}

func (x *Favorites) GetReportPeriod() string {
	if x != nil {
		return x.ReportPeriod
	}
	return ""
}

type SideMenuState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         bool                   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SideMenuState) Reset() {
	*x = SideMenuState{}
	mi := &file_api_cover_view_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SideMenuState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideMenuState) ProtoMessage() {}

func (x *SideMenuState) ProtoReflect() protoreflect.Message {
	mi := &file_api_cover_view_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideMenuState.ProtoReflect.Descriptor instead.
func (*SideMenuState) Descriptor() ([]byte, []int) {
	return file_api_cover_view_proto_rawDescGZIP(), []int{7}
}

func (x *SideMenuState) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SideMenuState) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

var File_api_cover_view_proto protoreflect.FileDescriptor

const file_api_cover_view_proto_rawDesc = "" +
	"\n" +
	"\x14api/cover/view.proto\x12\x11blueapi.api.cover\x1a\x14api/cover/user.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xd0\x04\n" +
	"\bViewData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\tisPrivate\x18\x04 \x01(\bR\tisPrivate\x12\x1e\n" +
	"\n" +
	"isEditable\x18\x05 \x01(\bR\n" +
	"isEditable\x12\x12\n" +
	"\x04icon\x18\x06 \x01(\tR\x04icon\x12?\n" +
	"\tcreatedBy\x18\a \x01(\v2!.blueapi.api.cover.MemberUserDataR\tcreatedBy\x12\x1c\n" +
	"\tcreatedAt\x18\b \x01(\tR\tcreatedAt\x12?\n" +
	"\tupdatedBy\x18\t \x01(\v2!.blueapi.api.cover.MemberUserDataR\tupdatedBy\x12\x1c\n" +
	"\tupdatedAt\x18\n" +
	" \x01(\tR\tupdatedAt\x125\n" +
	"\x06layout\x18\v \x03(\v2\x1d.blueapi.api.cover.WidgetDataR\x06layout\x127\n" +
	"\bsideMenu\x18\f \x01(\v2\x1b.blueapi.api.cover.SideMenuR\bsideMenu\x12\x1e\n" +
	"\n" +
	"reportType\x18\r \x01(\tR\n" +
	"reportType\x12\x1e\n" +
	"\n" +
	"colorTheme\x18\x0e \x01(\tR\n" +
	"colorTheme\x12\x1a\n" +
	"\bcurrency\x18\x0f \x01(\tR\bcurrency\x12\"\n" +
	"\freportPeriod\x18\x10 \x01(\tR\freportPeriod\"\xc2\x02\n" +
	"\bViewList\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\tisPrivate\x18\x04 \x01(\bR\tisPrivate\x12\x1e\n" +
	"\n" +
	"isEditable\x18\x05 \x01(\bR\n" +
	"isEditable\x12\x12\n" +
	"\x04icon\x18\x06 \x01(\tR\x04icon\x12\x1c\n" +
	"\tcreatedAt\x18\a \x01(\tR\tcreatedAt\x12\x1c\n" +
	"\tupdatedAt\x18\b \x01(\tR\tupdatedAt\x12\x1e\n" +
	"\n" +
	"colorTheme\x18\t \x01(\tR\n" +
	"colorTheme\x12\x1e\n" +
	"\n" +
	"reportType\x18\n" +
	" \x01(\tR\n" +
	"reportType\x12\"\n" +
	"\freportPeriod\x18\v \x01(\tR\freportPeriod\"g\n" +
	"\n" +
	"ViewLayout\x12\x1a\n" +
	"\bwidgetId\x18\x01 \x01(\tR\bwidgetId\x12=\n" +
	"\n" +
	"widgetData\x18\x02 \x01(\v2\x1d.blueapi.api.cover.WidgetDataR\n" +
	"widgetData\"\xcc\x01\n" +
	"\n" +
	"WidgetData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12 \n" +
	"\vcomponentId\x18\x04 \x01(\tR\vcomponentId\x121\n" +
	"\aoptions\x18\x05 \x01(\v2\x17.google.protobuf.StructR\aoptions\x12=\n" +
	"\brequests\x18\x06 \x03(\v2!.blueapi.api.cover.LayoutRequestsR\brequests\"\xa8\x01\n" +
	"\bSideMenu\x12\x1a\n" +
	"\bfavorite\x18\x01 \x03(\tR\bfavorite\x12$\n" +
	"\risOpenedAdmin\x18\x02 \x01(\bR\risOpenedAdmin\x12*\n" +
	"\x10isOpenedFeatures\x18\x03 \x01(\bR\x10isOpenedFeatures\x12.\n" +
	"\x12isOpenedCostGroups\x18\x04 \x01(\bR\x12isOpenedCostGroups\"\x8b\x01\n" +
	"\x0eLayoutRequests\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12/\n" +
	"\x06params\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x06params\x12\x12\n" +
	"\x04hash\x18\x05 \x01(\tR\x04hash\"\xa3\x02\n" +
	"\tFavorites\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\tisPrivate\x18\x04 \x01(\bR\tisPrivate\x12\x12\n" +
	"\x04icon\x18\x05 \x01(\tR\x04icon\x12\x1c\n" +
	"\tcreatedAt\x18\x06 \x01(\tR\tcreatedAt\x12\x1c\n" +
	"\tupdatedAt\x18\a \x01(\tR\tupdatedAt\x12\x1e\n" +
	"\n" +
	"colorTheme\x18\b \x01(\tR\n" +
	"colorTheme\x12\x1e\n" +
	"\n" +
	"reportType\x18\t \x01(\tR\n" +
	"reportType\x12\"\n" +
	"\freportPeriod\x18\n" +
	" \x01(\tR\freportPeriod\"7\n" +
	"\rSideMenuState\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05valueBb\n" +
	"\x1fcloud.alphaus.blueapi.api.coverB\x11ApiCoverViewProtoZ,github.com/alphauslabs/blue-sdk-go/api/coverb\x06proto3"

var (
	file_api_cover_view_proto_rawDescOnce sync.Once
	file_api_cover_view_proto_rawDescData []byte
)

func file_api_cover_view_proto_rawDescGZIP() []byte {
	file_api_cover_view_proto_rawDescOnce.Do(func() {
		file_api_cover_view_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_cover_view_proto_rawDesc), len(file_api_cover_view_proto_rawDesc)))
	})
	return file_api_cover_view_proto_rawDescData
}

var file_api_cover_view_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_cover_view_proto_goTypes = []any{
	(*ViewData)(nil),        // 0: blueapi.api.cover.ViewData
	(*ViewList)(nil),        // 1: blueapi.api.cover.ViewList
	(*ViewLayout)(nil),      // 2: blueapi.api.cover.ViewLayout
	(*WidgetData)(nil),      // 3: blueapi.api.cover.WidgetData
	(*SideMenu)(nil),        // 4: blueapi.api.cover.SideMenu
	(*LayoutRequests)(nil),  // 5: blueapi.api.cover.LayoutRequests
	(*Favorites)(nil),       // 6: blueapi.api.cover.Favorites
	(*SideMenuState)(nil),   // 7: blueapi.api.cover.SideMenuState
	(*MemberUserData)(nil),  // 8: blueapi.api.cover.MemberUserData
	(*structpb.Struct)(nil), // 9: google.protobuf.Struct
}
var file_api_cover_view_proto_depIdxs = []int32{
	8, // 0: blueapi.api.cover.ViewData.createdBy:type_name -> blueapi.api.cover.MemberUserData
	8, // 1: blueapi.api.cover.ViewData.updatedBy:type_name -> blueapi.api.cover.MemberUserData
	3, // 2: blueapi.api.cover.ViewData.layout:type_name -> blueapi.api.cover.WidgetData
	4, // 3: blueapi.api.cover.ViewData.sideMenu:type_name -> blueapi.api.cover.SideMenu
	3, // 4: blueapi.api.cover.ViewLayout.widgetData:type_name -> blueapi.api.cover.WidgetData
	9, // 5: blueapi.api.cover.WidgetData.options:type_name -> google.protobuf.Struct
	5, // 6: blueapi.api.cover.WidgetData.requests:type_name -> blueapi.api.cover.LayoutRequests
	9, // 7: blueapi.api.cover.LayoutRequests.params:type_name -> google.protobuf.Struct
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_api_cover_view_proto_init() }
func file_api_cover_view_proto_init() {
	if File_api_cover_view_proto != nil {
		return
	}
	file_api_cover_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_cover_view_proto_rawDesc), len(file_api_cover_view_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_cover_view_proto_goTypes,
		DependencyIndexes: file_api_cover_view_proto_depIdxs,
		MessageInfos:      file_api_cover_view_proto_msgTypes,
	}.Build()
	File_api_cover_view_proto = out.File
	file_api_cover_view_proto_goTypes = nil
	file_api_cover_view_proto_depIdxs = nil
}
