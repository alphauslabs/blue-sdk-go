// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: api/invoice.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Invoice vendor detail by 'aws'
	Aws *VendorDetail `protobuf:"bytes,1,opt,name=aws,proto3" json:"aws,omitempty"`
	// Invoice vendor detail by 'gcp'
	Gcp *VendorDetail `protobuf:"bytes,2,opt,name=gcp,proto3" json:"gcp,omitempty"`
	// Invoice vendor detail by 'azure'
	Azure *VendorDetail `protobuf:"bytes,3,opt,name=azure,proto3" json:"azure,omitempty"`
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{0}
}

func (x *Invoice) GetAws() *VendorDetail {
	if x != nil {
		return x.Aws
	}
	return nil
}

func (x *Invoice) GetGcp() *VendorDetail {
	if x != nil {
		return x.Gcp
	}
	return nil
}

func (x *Invoice) GetAzure() *VendorDetail {
	if x != nil {
		return x.Azure
	}
	return nil
}

type VendorDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details      []*AccountDetails `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
	GroupDetails []*GroupDetails   `protobuf:"bytes,2,rep,name=groupDetails,proto3" json:"groupDetails,omitempty"`
	Total        []*InvoiceTotal   `protobuf:"bytes,3,rep,name=total,proto3" json:"total,omitempty"`
	Settings     *InvoiceSettings  `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *VendorDetail) Reset() {
	*x = VendorDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VendorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorDetail) ProtoMessage() {}

func (x *VendorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorDetail.ProtoReflect.Descriptor instead.
func (*VendorDetail) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{1}
}

func (x *VendorDetail) GetDetails() []*AccountDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *VendorDetail) GetGroupDetails() []*GroupDetails {
	if x != nil {
		return x.GroupDetails
	}
	return nil
}

func (x *VendorDetail) GetTotal() []*InvoiceTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *VendorDetail) GetSettings() *InvoiceSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type AccountDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resource Id.
	//
	// if account, customer id.
	//
	// if tag, tag resource id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Resource Name.
	//
	// if account, customer name.
	//
	// if tag, tag resources.
	Name          string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Details       []*UsageDetails  `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	CustomDetails []*CustomDetails `protobuf:"bytes,4,rep,name=customDetails,proto3" json:"customDetails,omitempty"`
	FeeDetails    []*FeeDetails    `protobuf:"bytes,5,rep,name=feeDetails,proto3" json:"feeDetails,omitempty"`
	Total         []*AccountTotal  `protobuf:"bytes,6,rep,name=total,proto3" json:"total,omitempty"`
}

func (x *AccountDetails) Reset() {
	*x = AccountDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetails) ProtoMessage() {}

func (x *AccountDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetails.ProtoReflect.Descriptor instead.
func (*AccountDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{2}
}

func (x *AccountDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountDetails) GetDetails() []*UsageDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AccountDetails) GetCustomDetails() []*CustomDetails {
	if x != nil {
		return x.CustomDetails
	}
	return nil
}

func (x *AccountDetails) GetFeeDetails() []*FeeDetails {
	if x != nil {
		return x.FeeDetails
	}
	return nil
}

func (x *AccountDetails) GetTotal() []*AccountTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

type UsageDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *UsageDetails) Reset() {
	*x = UsageDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageDetails) ProtoMessage() {}

func (x *UsageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageDetails.ProtoReflect.Descriptor instead.
func (*UsageDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{3}
}

func (x *UsageDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsageDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UsageDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type CustomDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CustomDetails) Reset() {
	*x = CustomDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDetails) ProtoMessage() {}

func (x *CustomDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDetails.ProtoReflect.Descriptor instead.
func (*CustomDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{4}
}

func (x *CustomDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CustomDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type FeeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *FeeDetails) Reset() {
	*x = FeeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeDetails) ProtoMessage() {}

func (x *FeeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeDetails.ProtoReflect.Descriptor instead.
func (*FeeDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{5}
}

func (x *FeeDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeeDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FeeDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type AccountTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *AccountTotal) Reset() {
	*x = AccountTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTotal) ProtoMessage() {}

func (x *AccountTotal) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTotal.ProtoReflect.Descriptor instead.
func (*AccountTotal) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{6}
}

func (x *AccountTotal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountTotal) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountTotal) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type InvoiceTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *InvoiceTotal) Reset() {
	*x = InvoiceTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceTotal) ProtoMessage() {}

func (x *InvoiceTotal) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceTotal.ProtoReflect.Descriptor instead.
func (*InvoiceTotal) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{7}
}

func (x *InvoiceTotal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InvoiceTotal) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InvoiceTotal) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GroupDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GroupDetails) Reset() {
	*x = GroupDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDetails) ProtoMessage() {}

func (x *GroupDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDetails.ProtoReflect.Descriptor instead.
func (*GroupDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{8}
}

func (x *GroupDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GroupDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GroupUsageDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GroupUsageDetails) Reset() {
	*x = GroupUsageDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupUsageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUsageDetails) ProtoMessage() {}

func (x *GroupUsageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUsageDetails.ProtoReflect.Descriptor instead.
func (*GroupUsageDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{9}
}

func (x *GroupUsageDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupUsageDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GroupUsageDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type InvoiceSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	GroupId          string  `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupName        string  `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Contact          string  `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	Currency         string  `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	DueDate          string  `protobuf:"bytes,6,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	DueDateCustomDay float64 `protobuf:"fixed64,7,opt,name=dueDateCustomDay,proto3" json:"dueDateCustomDay,omitempty"`
	DueDateDay       string  `protobuf:"bytes,8,opt,name=dueDateDay,proto3" json:"dueDateDay,omitempty"`
	DueDateMonth     string  `protobuf:"bytes,9,opt,name=dueDateMonth,proto3" json:"dueDateMonth,omitempty"`
	ExchangeRate     float64 `protobuf:"fixed64,10,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	InvoiceNo        string  `protobuf:"bytes,11,opt,name=invoiceNo,proto3" json:"invoiceNo,omitempty"`
	Language         string  `protobuf:"bytes,12,opt,name=language,proto3" json:"language,omitempty"`
	Phone            string  `protobuf:"bytes,13,opt,name=phone,proto3" json:"phone,omitempty"`
	Postal           string  `protobuf:"bytes,14,opt,name=postal,proto3" json:"postal,omitempty"`
	Title            string  `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *InvoiceSettings) Reset() {
	*x = InvoiceSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceSettings) ProtoMessage() {}

func (x *InvoiceSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceSettings.ProtoReflect.Descriptor instead.
func (*InvoiceSettings) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{10}
}

func (x *InvoiceSettings) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *InvoiceSettings) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InvoiceSettings) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *InvoiceSettings) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *InvoiceSettings) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InvoiceSettings) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

func (x *InvoiceSettings) GetDueDateCustomDay() float64 {
	if x != nil {
		return x.DueDateCustomDay
	}
	return 0
}

func (x *InvoiceSettings) GetDueDateDay() string {
	if x != nil {
		return x.DueDateDay
	}
	return ""
}

func (x *InvoiceSettings) GetDueDateMonth() string {
	if x != nil {
		return x.DueDateMonth
	}
	return ""
}

func (x *InvoiceSettings) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *InvoiceSettings) GetInvoiceNo() string {
	if x != nil {
		return x.InvoiceNo
	}
	return ""
}

func (x *InvoiceSettings) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *InvoiceSettings) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InvoiceSettings) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *InvoiceSettings) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type InvoiceSettingsAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountSupportPlan         *AccountSupportPlan         `protobuf:"bytes,1,opt,name=accountSupportPlan,proto3" json:"accountSupportPlan,omitempty"`
	AdditionalItems            []*AdditionalItems          `protobuf:"bytes,2,rep,name=additionalItems,proto3" json:"additionalItems,omitempty"`
	Address                    string                      `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Asps                       *AccountSupportPlanSettings `protobuf:"bytes,4,opt,name=asps,proto3" json:"asps,omitempty"`
	GroupId                    string                      `protobuf:"bytes,5,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupName                  string                      `protobuf:"bytes,6,opt,name=groupName,proto3" json:"groupName,omitempty"`
	CalculationType            string                      `protobuf:"bytes,7,opt,name=calculationType,proto3" json:"calculationType,omitempty"`
	Contact                    string                      `protobuf:"bytes,8,opt,name=contact,proto3" json:"contact,omitempty"`
	Currency                   string                      `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	DiscountCalcLogic          string                      `protobuf:"bytes,10,opt,name=discountCalcLogic,proto3" json:"discountCalcLogic,omitempty"`
	DiscountRate               float64                     `protobuf:"fixed64,11,opt,name=discountRate,proto3" json:"discountRate,omitempty"`
	DiscountTargetUsage        string                      `protobuf:"bytes,12,opt,name=discountTargetUsage,proto3" json:"discountTargetUsage,omitempty"`
	DisplayCost                string                      `protobuf:"bytes,13,opt,name=displayCost,proto3" json:"displayCost,omitempty"`
	DueDate                    string                      `protobuf:"bytes,14,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	DueDateCustomDay           float64                     `protobuf:"fixed64,15,opt,name=dueDateCustomDay,proto3" json:"dueDateCustomDay,omitempty"`
	DueDateDay                 string                      `protobuf:"bytes,16,opt,name=dueDateDay,proto3" json:"dueDateDay,omitempty"`
	DueDateMonth               string                      `protobuf:"bytes,17,opt,name=dueDateMonth,proto3" json:"dueDateMonth,omitempty"`
	ExchangeRate               float64                     `protobuf:"fixed64,18,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	ExchangeRateType           string                      `protobuf:"bytes,19,opt,name=exchangeRateType,proto3" json:"exchangeRateType,omitempty"`
	ImageUrl                   string                      `protobuf:"bytes,20,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	InvoiceNo                  string                      `protobuf:"bytes,21,opt,name=invoiceNo,proto3" json:"invoiceNo,omitempty"`
	Language                   string                      `protobuf:"bytes,22,opt,name=language,proto3" json:"language,omitempty"`
	Memo                       string                      `protobuf:"bytes,23,opt,name=memo,proto3" json:"memo,omitempty"`
	Name                       string                      `protobuf:"bytes,24,opt,name=name,proto3" json:"name,omitempty"`
	Phone                      string                      `protobuf:"bytes,25,opt,name=phone,proto3" json:"phone,omitempty"`
	Postal                     string                      `protobuf:"bytes,26,opt,name=postal,proto3" json:"postal,omitempty"`
	ProjectCode                string                      `protobuf:"bytes,27,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ProjectCurrency            string                      `protobuf:"bytes,28,opt,name=projectCurrency,proto3" json:"projectCurrency,omitempty"`
	ProjectId                  string                      `protobuf:"bytes,29,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ProjectLabel               string                      `protobuf:"bytes,30,opt,name=projectLabel,proto3" json:"projectLabel,omitempty"`
	Remarks                    string                      `protobuf:"bytes,31,opt,name=remarks,proto3" json:"remarks,omitempty"`
	SubstitutionFee            string                      `protobuf:"bytes,32,opt,name=substitutionFee,proto3" json:"substitutionFee,omitempty"`
	SubstitutionFeeCalcTarget  string                      `protobuf:"bytes,33,opt,name=substitutionFeeCalcTarget,proto3" json:"substitutionFeeCalcTarget,omitempty"`
	SubstitutionFeeCalcType    string                      `protobuf:"bytes,34,opt,name=substitutionFeeCalcType,proto3" json:"substitutionFeeCalcType,omitempty"`
	SubstitutionFeeTargetUsage string                      `protobuf:"bytes,35,opt,name=substitutionFeeTargetUsage,proto3" json:"substitutionFeeTargetUsage,omitempty"`
	SubstitutionFix            float64                     `protobuf:"fixed64,36,opt,name=substitutionFix,proto3" json:"substitutionFix,omitempty"`
	SubstitutionRate           float64                     `protobuf:"fixed64,37,opt,name=substitutionRate,proto3" json:"substitutionRate,omitempty"`
	SupportFee                 string                      `protobuf:"bytes,38,opt,name=supportFee,proto3" json:"supportFee,omitempty"`
	SupportFeeCalcTarget       string                      `protobuf:"bytes,39,opt,name=supportFeeCalcTarget,proto3" json:"supportFeeCalcTarget,omitempty"`
	SupportFix                 float64                     `protobuf:"fixed64,40,opt,name=supportFix,proto3" json:"supportFix,omitempty"`
	SupportRate                float64                     `protobuf:"fixed64,41,opt,name=supportRate,proto3" json:"supportRate,omitempty"`
	TaxRate                    float64                     `protobuf:"fixed64,42,opt,name=taxRate,proto3" json:"taxRate,omitempty"`
	Title                      string                      `protobuf:"bytes,43,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *InvoiceSettingsAll) Reset() {
	*x = InvoiceSettingsAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceSettingsAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceSettingsAll) ProtoMessage() {}

func (x *InvoiceSettingsAll) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceSettingsAll.ProtoReflect.Descriptor instead.
func (*InvoiceSettingsAll) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{11}
}

func (x *InvoiceSettingsAll) GetAccountSupportPlan() *AccountSupportPlan {
	if x != nil {
		return x.AccountSupportPlan
	}
	return nil
}

func (x *InvoiceSettingsAll) GetAdditionalItems() []*AdditionalItems {
	if x != nil {
		return x.AdditionalItems
	}
	return nil
}

func (x *InvoiceSettingsAll) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *InvoiceSettingsAll) GetAsps() *AccountSupportPlanSettings {
	if x != nil {
		return x.Asps
	}
	return nil
}

func (x *InvoiceSettingsAll) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InvoiceSettingsAll) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *InvoiceSettingsAll) GetCalculationType() string {
	if x != nil {
		return x.CalculationType
	}
	return ""
}

func (x *InvoiceSettingsAll) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *InvoiceSettingsAll) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDiscountCalcLogic() string {
	if x != nil {
		return x.DiscountCalcLogic
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDiscountRate() float64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetDiscountTargetUsage() string {
	if x != nil {
		return x.DiscountTargetUsage
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDisplayCost() string {
	if x != nil {
		return x.DisplayCost
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDueDateCustomDay() float64 {
	if x != nil {
		return x.DueDateCustomDay
	}
	return 0
}

func (x *InvoiceSettingsAll) GetDueDateDay() string {
	if x != nil {
		return x.DueDateDay
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDueDateMonth() string {
	if x != nil {
		return x.DueDateMonth
	}
	return ""
}

func (x *InvoiceSettingsAll) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetExchangeRateType() string {
	if x != nil {
		return x.ExchangeRateType
	}
	return ""
}

func (x *InvoiceSettingsAll) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *InvoiceSettingsAll) GetInvoiceNo() string {
	if x != nil {
		return x.InvoiceNo
	}
	return ""
}

func (x *InvoiceSettingsAll) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *InvoiceSettingsAll) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *InvoiceSettingsAll) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InvoiceSettingsAll) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InvoiceSettingsAll) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *InvoiceSettingsAll) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *InvoiceSettingsAll) GetProjectCurrency() string {
	if x != nil {
		return x.ProjectCurrency
	}
	return ""
}

func (x *InvoiceSettingsAll) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *InvoiceSettingsAll) GetProjectLabel() string {
	if x != nil {
		return x.ProjectLabel
	}
	return ""
}

func (x *InvoiceSettingsAll) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFee() string {
	if x != nil {
		return x.SubstitutionFee
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFeeCalcTarget() string {
	if x != nil {
		return x.SubstitutionFeeCalcTarget
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFeeCalcType() string {
	if x != nil {
		return x.SubstitutionFeeCalcType
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFeeTargetUsage() string {
	if x != nil {
		return x.SubstitutionFeeTargetUsage
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFix() float64 {
	if x != nil {
		return x.SubstitutionFix
	}
	return 0
}

func (x *InvoiceSettingsAll) GetSubstitutionRate() float64 {
	if x != nil {
		return x.SubstitutionRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetSupportFee() string {
	if x != nil {
		return x.SupportFee
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSupportFeeCalcTarget() string {
	if x != nil {
		return x.SupportFeeCalcTarget
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSupportFix() float64 {
	if x != nil {
		return x.SupportFix
	}
	return 0
}

func (x *InvoiceSettingsAll) GetSupportRate() float64 {
	if x != nil {
		return x.SupportRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AccountSupportPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwsEnterpriseOnRamp bool `protobuf:"varint,1,opt,name=awsEnterpriseOnRamp,proto3" json:"awsEnterpriseOnRamp,omitempty"`
	AwsBusiness         bool `protobuf:"varint,2,opt,name=awsBusiness,proto3" json:"awsBusiness,omitempty"`
	NoSupport           bool `protobuf:"varint,3,opt,name=noSupport,proto3" json:"noSupport,omitempty"`
	AwsDeveloper        bool `protobuf:"varint,4,opt,name=awsDeveloper,proto3" json:"awsDeveloper,omitempty"`
}

func (x *AccountSupportPlan) Reset() {
	*x = AccountSupportPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSupportPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSupportPlan) ProtoMessage() {}

func (x *AccountSupportPlan) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSupportPlan.ProtoReflect.Descriptor instead.
func (*AccountSupportPlan) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{12}
}

func (x *AccountSupportPlan) GetAwsEnterpriseOnRamp() bool {
	if x != nil {
		return x.AwsEnterpriseOnRamp
	}
	return false
}

func (x *AccountSupportPlan) GetAwsBusiness() bool {
	if x != nil {
		return x.AwsBusiness
	}
	return false
}

func (x *AccountSupportPlan) GetNoSupport() bool {
	if x != nil {
		return x.NoSupport
	}
	return false
}

func (x *AccountSupportPlan) GetAwsDeveloper() bool {
	if x != nil {
		return x.AwsDeveloper
	}
	return false
}

type AdditionalItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	UnitCost float64 `protobuf:"fixed64,2,opt,name=unitCost,proto3" json:"unitCost,omitempty"`
	Total    float64 `protobuf:"fixed64,3,opt,name=total,proto3" json:"total,omitempty"`
	Quantity float64 `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *AdditionalItems) Reset() {
	*x = AdditionalItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalItems) ProtoMessage() {}

func (x *AdditionalItems) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalItems.ProtoReflect.Descriptor instead.
func (*AdditionalItems) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{13}
}

func (x *AdditionalItems) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AdditionalItems) GetUnitCost() float64 {
	if x != nil {
		return x.UnitCost
	}
	return 0
}

func (x *AdditionalItems) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AdditionalItems) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type AccountSupportPlanSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool              `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Accounts map[string]string `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AccountSupportPlanSettings) Reset() {
	*x = AccountSupportPlanSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_invoice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountSupportPlanSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSupportPlanSettings) ProtoMessage() {}

func (x *AccountSupportPlanSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSupportPlanSettings.ProtoReflect.Descriptor instead.
func (*AccountSupportPlanSettings) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{14}
}

func (x *AccountSupportPlanSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AccountSupportPlanSettings) GetAccounts() map[string]string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

var File_api_invoice_proto protoreflect.FileDescriptor

var file_api_invoice_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x22, 0x94, 0x01, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x03,
	0x61, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x03, 0x61, 0x77, 0x73, 0x12, 0x2b, 0x0a, 0x03, 0x67, 0x63, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x03, 0x67, 0x63, 0x70, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x05, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x0c, 0x56, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x75, 0x65,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x3d, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2f,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x38, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x0e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62,
	0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6c,
	0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x2f, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x56, 0x0a, 0x0c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x0d, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x54, 0x0a, 0x0a, 0x46, 0x65, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x56, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x5b, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc5, 0x03,
	0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x44, 0x61, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x44, 0x61, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x4e, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xee, 0x0c, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x41, 0x6c, 0x6c, 0x12, 0x4f, 0x0a, 0x12,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x46, 0x0a,
	0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x3b, 0x0a, 0x04, 0x61, 0x73, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x04, 0x61, 0x73, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x61, 0x6c, 0x63, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10,
	0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x44, 0x61, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x44, 0x61, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x65, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x38, 0x0a, 0x17, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x65, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x1a, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75,
	0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x78, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10,
	0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x65, 0x65, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x65, 0x65,
	0x12, 0x32, 0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x65, 0x65, 0x43, 0x61,
	0x6c, 0x63, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x63, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x46,
	0x69, 0x78, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x46, 0x69, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x30, 0x0a,
	0x13, 0x61, 0x77, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x4f, 0x6e,
	0x52, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x77, 0x73, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x4f, 0x6e, 0x52, 0x61, 0x6d, 0x70, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x77, 0x73, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x77, 0x73, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x77, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x77, 0x73, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x22, 0x75, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x75, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xc6, 0x01, 0x0a, 0x1a, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x51, 0x0a, 0x19, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x75, 0x73, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x69,
	0x42, 0x0c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x26,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x75, 0x73, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x73, 0x64, 0x6b, 0x2d,
	0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_invoice_proto_rawDescOnce sync.Once
	file_api_invoice_proto_rawDescData = file_api_invoice_proto_rawDesc
)

func file_api_invoice_proto_rawDescGZIP() []byte {
	file_api_invoice_proto_rawDescOnce.Do(func() {
		file_api_invoice_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_invoice_proto_rawDescData)
	})
	return file_api_invoice_proto_rawDescData
}

var file_api_invoice_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_invoice_proto_goTypes = []interface{}{
	(*Invoice)(nil),                    // 0: blueapi.api.Invoice
	(*VendorDetail)(nil),               // 1: blueapi.api.VendorDetail
	(*AccountDetails)(nil),             // 2: blueapi.api.AccountDetails
	(*UsageDetails)(nil),               // 3: blueapi.api.UsageDetails
	(*CustomDetails)(nil),              // 4: blueapi.api.CustomDetails
	(*FeeDetails)(nil),                 // 5: blueapi.api.FeeDetails
	(*AccountTotal)(nil),               // 6: blueapi.api.AccountTotal
	(*InvoiceTotal)(nil),               // 7: blueapi.api.InvoiceTotal
	(*GroupDetails)(nil),               // 8: blueapi.api.GroupDetails
	(*GroupUsageDetails)(nil),          // 9: blueapi.api.GroupUsageDetails
	(*InvoiceSettings)(nil),            // 10: blueapi.api.InvoiceSettings
	(*InvoiceSettingsAll)(nil),         // 11: blueapi.api.InvoiceSettingsAll
	(*AccountSupportPlan)(nil),         // 12: blueapi.api.AccountSupportPlan
	(*AdditionalItems)(nil),            // 13: blueapi.api.AdditionalItems
	(*AccountSupportPlanSettings)(nil), // 14: blueapi.api.AccountSupportPlanSettings
	nil,                                // 15: blueapi.api.AccountSupportPlanSettings.AccountsEntry
}
var file_api_invoice_proto_depIdxs = []int32{
	1,  // 0: blueapi.api.Invoice.aws:type_name -> blueapi.api.VendorDetail
	1,  // 1: blueapi.api.Invoice.gcp:type_name -> blueapi.api.VendorDetail
	1,  // 2: blueapi.api.Invoice.azure:type_name -> blueapi.api.VendorDetail
	2,  // 3: blueapi.api.VendorDetail.details:type_name -> blueapi.api.AccountDetails
	8,  // 4: blueapi.api.VendorDetail.groupDetails:type_name -> blueapi.api.GroupDetails
	7,  // 5: blueapi.api.VendorDetail.total:type_name -> blueapi.api.InvoiceTotal
	10, // 6: blueapi.api.VendorDetail.settings:type_name -> blueapi.api.InvoiceSettings
	3,  // 7: blueapi.api.AccountDetails.details:type_name -> blueapi.api.UsageDetails
	4,  // 8: blueapi.api.AccountDetails.customDetails:type_name -> blueapi.api.CustomDetails
	5,  // 9: blueapi.api.AccountDetails.feeDetails:type_name -> blueapi.api.FeeDetails
	6,  // 10: blueapi.api.AccountDetails.total:type_name -> blueapi.api.AccountTotal
	12, // 11: blueapi.api.InvoiceSettingsAll.accountSupportPlan:type_name -> blueapi.api.AccountSupportPlan
	13, // 12: blueapi.api.InvoiceSettingsAll.additionalItems:type_name -> blueapi.api.AdditionalItems
	14, // 13: blueapi.api.InvoiceSettingsAll.asps:type_name -> blueapi.api.AccountSupportPlanSettings
	15, // 14: blueapi.api.AccountSupportPlanSettings.accounts:type_name -> blueapi.api.AccountSupportPlanSettings.AccountsEntry
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_invoice_proto_init() }
func file_api_invoice_proto_init() {
	if File_api_invoice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_invoice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsageDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupUsageDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceSettingsAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSupportPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_invoice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountSupportPlanSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_invoice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_invoice_proto_goTypes,
		DependencyIndexes: file_api_invoice_proto_depIdxs,
		MessageInfos:      file_api_invoice_proto_msgTypes,
	}.Build()
	File_api_invoice_proto = out.File
	file_api_invoice_proto_rawDesc = nil
	file_api_invoice_proto_goTypes = nil
	file_api_invoice_proto_depIdxs = nil
}
