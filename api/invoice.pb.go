// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/invoice.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InvoiceMessage resource definition.
type InvoiceMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// invoice generate request id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// invoice generate request status
	//
	// done: Invoicing is complete.
	// running: Invoicing in progress.
	// failed: Invoicing is failure.
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// status timestamp in UTC, RFC3339.
	Timestamp     string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvoiceMessage) Reset() {
	*x = InvoiceMessage{}
	mi := &file_api_invoice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvoiceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceMessage) ProtoMessage() {}

func (x *InvoiceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceMessage.ProtoReflect.Descriptor instead.
func (*InvoiceMessage) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{0}
}

func (x *InvoiceMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InvoiceMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *InvoiceMessage) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// Invoice resource definition.
type Invoice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Invoice vendor detail by 'aws'
	Aws *VendorDetail `protobuf:"bytes,1,opt,name=aws,proto3" json:"aws,omitempty"`
	// Invoice vendor detail by 'gcp'
	Gcp *VendorDetail `protobuf:"bytes,2,opt,name=gcp,proto3" json:"gcp,omitempty"`
	// Invoice vendor detail by 'azure'
	Azure         *VendorDetail `protobuf:"bytes,3,opt,name=azure,proto3" json:"azure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	mi := &file_api_invoice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{1}
}

func (x *Invoice) GetAws() *VendorDetail {
	if x != nil {
		return x.Aws
	}
	return nil
}

func (x *Invoice) GetGcp() *VendorDetail {
	if x != nil {
		return x.Gcp
	}
	return nil
}

func (x *Invoice) GetAzure() *VendorDetail {
	if x != nil {
		return x.Azure
	}
	return nil
}

// VendorDetail resource definition.
type VendorDetail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// details: Includes account-by-account details
	Details []*AccountDetails `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
	// groupDetails: Includes account-by-account details(fee item data).
	GroupDetails []*GroupDetails `protobuf:"bytes,2,rep,name=groupDetails,proto3" json:"groupDetails,omitempty"`
	// groupCustomDetails: Includes account-by-account details(custom service and additional item data).
	GroupCustomDetails []*GroupCustomDetails `protobuf:"bytes,5,rep,name=groupCustomDetails,proto3" json:"groupCustomDetails,omitempty"`
	// total: Includes data on billing totals
	Total []*InvoiceTotal `protobuf:"bytes,3,rep,name=total,proto3" json:"total,omitempty"`
	// settings: Includes settings related to billing
	Settings      *InvoiceSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorDetail) Reset() {
	*x = VendorDetail{}
	mi := &file_api_invoice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorDetail) ProtoMessage() {}

func (x *VendorDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorDetail.ProtoReflect.Descriptor instead.
func (*VendorDetail) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{2}
}

func (x *VendorDetail) GetDetails() []*AccountDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *VendorDetail) GetGroupDetails() []*GroupDetails {
	if x != nil {
		return x.GroupDetails
	}
	return nil
}

func (x *VendorDetail) GetGroupCustomDetails() []*GroupCustomDetails {
	if x != nil {
		return x.GroupCustomDetails
	}
	return nil
}

func (x *VendorDetail) GetTotal() []*InvoiceTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *VendorDetail) GetSettings() *InvoiceSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// AccountDetails resource definition.
type AccountDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resource Id.
	//
	// if account, customer id.
	//
	// if tag, tag resource id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Resource Name.
	//
	// if account, customer name.
	//
	// if tag, tag resources.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// details: Vendor service fees included
	Details []*UsageDetails `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	// customDetails: Includes details of custom service and additional item data
	CustomDetails []*CustomDetails `protobuf:"bytes,4,rep,name=customDetails,proto3" json:"customDetails,omitempty"`
	// feeDetails: Includes details of re-caluclated fee data
	FeeDetails []*FeeDetails `protobuf:"bytes,5,rep,name=feeDetails,proto3" json:"feeDetails,omitempty"`
	// The keys included in the account total column have the following values
	//
	// substitution:
	//
	//	Total amount of agency fee costs
	//
	// supportFee:
	//
	//	Total amount of Support Fee costs
	//
	// usageOnlyTotal:
	//
	//	Total amount of vendor usage fee only costs
	//
	// usageTotal:
	//
	//	Total amount of vendor usage fee costs
	//
	// marketplace:
	//
	//	Total amount of vendor marketplace usage costs
	//
	// marketplaceFees:
	//
	//	Total amount of vendor marketplace fee costs
	Total         []*AccountTotal `protobuf:"bytes,6,rep,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountDetails) Reset() {
	*x = AccountDetails{}
	mi := &file_api_invoice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetails) ProtoMessage() {}

func (x *AccountDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetails.ProtoReflect.Descriptor instead.
func (*AccountDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{3}
}

func (x *AccountDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountDetails) GetDetails() []*UsageDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AccountDetails) GetCustomDetails() []*CustomDetails {
	if x != nil {
		return x.CustomDetails
	}
	return nil
}

func (x *AccountDetails) GetFeeDetails() []*FeeDetails {
	if x != nil {
		return x.FeeDetails
	}
	return nil
}

func (x *AccountDetails) GetTotal() []*AccountTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

// UsageDetails resource definition.
type UsageDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsageDetails) Reset() {
	*x = UsageDetails{}
	mi := &file_api_invoice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsageDetails) ProtoMessage() {}

func (x *UsageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsageDetails.ProtoReflect.Descriptor instead.
func (*UsageDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{4}
}

func (x *UsageDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsageDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UsageDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// CustomDetails resource definition.
type CustomDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomDetails) Reset() {
	*x = CustomDetails{}
	mi := &file_api_invoice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomDetails) ProtoMessage() {}

func (x *CustomDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomDetails.ProtoReflect.Descriptor instead.
func (*CustomDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{5}
}

func (x *CustomDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CustomDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// FeeDetails resource definition.
type FeeDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeeDetails) Reset() {
	*x = FeeDetails{}
	mi := &file_api_invoice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeDetails) ProtoMessage() {}

func (x *FeeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeDetails.ProtoReflect.Descriptor instead.
func (*FeeDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{6}
}

func (x *FeeDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeeDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FeeDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// AccountTotal resource definition.
type AccountTotal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountTotal) Reset() {
	*x = AccountTotal{}
	mi := &file_api_invoice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTotal) ProtoMessage() {}

func (x *AccountTotal) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTotal.ProtoReflect.Descriptor instead.
func (*AccountTotal) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{7}
}

func (x *AccountTotal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccountTotal) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountTotal) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// InvoiceTotal resource definition.
type InvoiceTotal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Key names related to the total. Each key is described in the following detail
	//
	// supportFee:
	//
	//	Total amount of Support Fee costs
	//
	// substitution:
	//
	//	Total amount of agency fee costs
	//
	// chargeOnly:
	//
	//	Total amount of vendor usage fee only costs
	//
	// marketplace:
	//
	//	Total amount of vendor marketplace usage costs
	//
	// marketplaceFees:
	//
	//	Total amount of vendor marketplace fee costs
	//
	// charge:
	//
	//	Total amount of vendor usage fee costs
	//
	// discount:
	//
	//	Total amount after discounts. Inculuded Support fee costs
	//
	// discountWithSubstitution:
	//
	//	Total Discounts plus agency fee costs
	//
	// chargeTaxFree:
	//
	//	Amounts not included in consumption tax
	//
	// additionalItem:
	//
	//	Total amount of additional item costs
	//
	// customService:
	//
	//	Total amount of custom service item costs
	//
	// sumOfBeforeTax:
	//
	//	Total amount before consumption tax
	//
	// tax:
	//
	//	Consumption tax amount on the total amount
	//
	// total:
	//
	//	Total billing amount including tax
	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency      string  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvoiceTotal) Reset() {
	*x = InvoiceTotal{}
	mi := &file_api_invoice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvoiceTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceTotal) ProtoMessage() {}

func (x *InvoiceTotal) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceTotal.ProtoReflect.Descriptor instead.
func (*InvoiceTotal) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{8}
}

func (x *InvoiceTotal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InvoiceTotal) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InvoiceTotal) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// GroupDetails resource definition.
type GroupDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupDetails) Reset() {
	*x = GroupDetails{}
	mi := &file_api_invoice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDetails) ProtoMessage() {}

func (x *GroupDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDetails.ProtoReflect.Descriptor instead.
func (*GroupDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{9}
}

func (x *GroupDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GroupDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// GroupCustomDetails resource definition.
type GroupCustomDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupCustomDetails) Reset() {
	*x = GroupCustomDetails{}
	mi := &file_api_invoice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupCustomDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCustomDetails) ProtoMessage() {}

func (x *GroupCustomDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCustomDetails.ProtoReflect.Descriptor instead.
func (*GroupCustomDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{10}
}

func (x *GroupCustomDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupCustomDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GroupCustomDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// GroupUsageDetails resource definition.
type GroupUsageDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupUsageDetails) Reset() {
	*x = GroupUsageDetails{}
	mi := &file_api_invoice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupUsageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUsageDetails) ProtoMessage() {}

func (x *GroupUsageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUsageDetails.ProtoReflect.Descriptor instead.
func (*GroupUsageDetails) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{11}
}

func (x *GroupUsageDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupUsageDetails) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GroupUsageDetails) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// InvoiceSettings resource definition.
type InvoiceSettings struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Address          string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	GroupId          string                 `protobuf:"bytes,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupName        string                 `protobuf:"bytes,3,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Contact          string                 `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	Currency         string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	DueDate          string                 `protobuf:"bytes,6,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	DueDateCustomDay float64                `protobuf:"fixed64,7,opt,name=dueDateCustomDay,proto3" json:"dueDateCustomDay,omitempty"`
	DueDateDay       string                 `protobuf:"bytes,8,opt,name=dueDateDay,proto3" json:"dueDateDay,omitempty"`
	DueDateMonth     string                 `protobuf:"bytes,9,opt,name=dueDateMonth,proto3" json:"dueDateMonth,omitempty"`
	ExchangeRate     float64                `protobuf:"fixed64,10,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	InvoiceNo        string                 `protobuf:"bytes,11,opt,name=invoiceNo,proto3" json:"invoiceNo,omitempty"`
	Language         string                 `protobuf:"bytes,12,opt,name=language,proto3" json:"language,omitempty"`
	Phone            string                 `protobuf:"bytes,13,opt,name=phone,proto3" json:"phone,omitempty"`
	Postal           string                 `protobuf:"bytes,14,opt,name=postal,proto3" json:"postal,omitempty"`
	Title            string                 `protobuf:"bytes,15,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InvoiceSettings) Reset() {
	*x = InvoiceSettings{}
	mi := &file_api_invoice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvoiceSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceSettings) ProtoMessage() {}

func (x *InvoiceSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceSettings.ProtoReflect.Descriptor instead.
func (*InvoiceSettings) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{12}
}

func (x *InvoiceSettings) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *InvoiceSettings) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InvoiceSettings) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *InvoiceSettings) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *InvoiceSettings) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InvoiceSettings) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

func (x *InvoiceSettings) GetDueDateCustomDay() float64 {
	if x != nil {
		return x.DueDateCustomDay
	}
	return 0
}

func (x *InvoiceSettings) GetDueDateDay() string {
	if x != nil {
		return x.DueDateDay
	}
	return ""
}

func (x *InvoiceSettings) GetDueDateMonth() string {
	if x != nil {
		return x.DueDateMonth
	}
	return ""
}

func (x *InvoiceSettings) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *InvoiceSettings) GetInvoiceNo() string {
	if x != nil {
		return x.InvoiceNo
	}
	return ""
}

func (x *InvoiceSettings) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *InvoiceSettings) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InvoiceSettings) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *InvoiceSettings) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// InvoiceSettingsAll resource definition.
type InvoiceSettingsAll struct {
	state                      protoimpl.MessageState      `protogen:"open.v1"`
	AccountSupportPlan         *AccountSupportPlan         `protobuf:"bytes,1,opt,name=accountSupportPlan,proto3" json:"accountSupportPlan,omitempty"`
	AdditionalItems            []*AdditionalItems          `protobuf:"bytes,2,rep,name=additionalItems,proto3" json:"additionalItems,omitempty"`
	Address                    string                      `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Asps                       *AccountSupportPlanSettings `protobuf:"bytes,4,opt,name=asps,proto3" json:"asps,omitempty"`
	GroupId                    string                      `protobuf:"bytes,5,opt,name=groupId,proto3" json:"groupId,omitempty"`
	GroupName                  string                      `protobuf:"bytes,6,opt,name=groupName,proto3" json:"groupName,omitempty"`
	CalculationType            string                      `protobuf:"bytes,7,opt,name=calculationType,proto3" json:"calculationType,omitempty"`
	Contact                    string                      `protobuf:"bytes,8,opt,name=contact,proto3" json:"contact,omitempty"`
	Currency                   string                      `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	DiscountCalcLogic          string                      `protobuf:"bytes,10,opt,name=discountCalcLogic,proto3" json:"discountCalcLogic,omitempty"`
	DiscountRate               float64                     `protobuf:"fixed64,11,opt,name=discountRate,proto3" json:"discountRate,omitempty"`
	DiscountTargetUsage        string                      `protobuf:"bytes,12,opt,name=discountTargetUsage,proto3" json:"discountTargetUsage,omitempty"`
	DisplayCost                string                      `protobuf:"bytes,13,opt,name=displayCost,proto3" json:"displayCost,omitempty"`
	DueDate                    string                      `protobuf:"bytes,14,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	DueDateCustomDay           float64                     `protobuf:"fixed64,15,opt,name=dueDateCustomDay,proto3" json:"dueDateCustomDay,omitempty"`
	DueDateDay                 string                      `protobuf:"bytes,16,opt,name=dueDateDay,proto3" json:"dueDateDay,omitempty"`
	DueDateMonth               string                      `protobuf:"bytes,17,opt,name=dueDateMonth,proto3" json:"dueDateMonth,omitempty"`
	ExchangeRate               float64                     `protobuf:"fixed64,18,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`
	ExchangeRateType           string                      `protobuf:"bytes,19,opt,name=exchangeRateType,proto3" json:"exchangeRateType,omitempty"`
	ImageUrl                   string                      `protobuf:"bytes,20,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
	InvoiceNo                  string                      `protobuf:"bytes,21,opt,name=invoiceNo,proto3" json:"invoiceNo,omitempty"`
	Language                   string                      `protobuf:"bytes,22,opt,name=language,proto3" json:"language,omitempty"`
	Memo                       string                      `protobuf:"bytes,23,opt,name=memo,proto3" json:"memo,omitempty"`
	Name                       string                      `protobuf:"bytes,24,opt,name=name,proto3" json:"name,omitempty"`
	Phone                      string                      `protobuf:"bytes,25,opt,name=phone,proto3" json:"phone,omitempty"`
	Postal                     string                      `protobuf:"bytes,26,opt,name=postal,proto3" json:"postal,omitempty"`
	ProjectCode                string                      `protobuf:"bytes,27,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	ProjectCurrency            string                      `protobuf:"bytes,28,opt,name=projectCurrency,proto3" json:"projectCurrency,omitempty"`
	ProjectId                  string                      `protobuf:"bytes,29,opt,name=projectId,proto3" json:"projectId,omitempty"`
	ProjectLabel               string                      `protobuf:"bytes,30,opt,name=projectLabel,proto3" json:"projectLabel,omitempty"`
	Remarks                    string                      `protobuf:"bytes,31,opt,name=remarks,proto3" json:"remarks,omitempty"`
	SubstitutionFee            string                      `protobuf:"bytes,32,opt,name=substitutionFee,proto3" json:"substitutionFee,omitempty"`
	SubstitutionFeeCalcTarget  string                      `protobuf:"bytes,33,opt,name=substitutionFeeCalcTarget,proto3" json:"substitutionFeeCalcTarget,omitempty"`
	SubstitutionFeeCalcType    string                      `protobuf:"bytes,34,opt,name=substitutionFeeCalcType,proto3" json:"substitutionFeeCalcType,omitempty"`
	SubstitutionFeeTargetUsage string                      `protobuf:"bytes,35,opt,name=substitutionFeeTargetUsage,proto3" json:"substitutionFeeTargetUsage,omitempty"`
	SubstitutionFix            float64                     `protobuf:"fixed64,36,opt,name=substitutionFix,proto3" json:"substitutionFix,omitempty"`
	SubstitutionRate           float64                     `protobuf:"fixed64,37,opt,name=substitutionRate,proto3" json:"substitutionRate,omitempty"`
	SupportFee                 string                      `protobuf:"bytes,38,opt,name=supportFee,proto3" json:"supportFee,omitempty"`
	SupportFeeCalcTarget       string                      `protobuf:"bytes,39,opt,name=supportFeeCalcTarget,proto3" json:"supportFeeCalcTarget,omitempty"`
	SupportFix                 float64                     `protobuf:"fixed64,40,opt,name=supportFix,proto3" json:"supportFix,omitempty"`
	SupportRate                float64                     `protobuf:"fixed64,41,opt,name=supportRate,proto3" json:"supportRate,omitempty"`
	TaxRate                    float64                     `protobuf:"fixed64,42,opt,name=taxRate,proto3" json:"taxRate,omitempty"`
	Title                      string                      `protobuf:"bytes,43,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *InvoiceSettingsAll) Reset() {
	*x = InvoiceSettingsAll{}
	mi := &file_api_invoice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvoiceSettingsAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceSettingsAll) ProtoMessage() {}

func (x *InvoiceSettingsAll) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceSettingsAll.ProtoReflect.Descriptor instead.
func (*InvoiceSettingsAll) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{13}
}

func (x *InvoiceSettingsAll) GetAccountSupportPlan() *AccountSupportPlan {
	if x != nil {
		return x.AccountSupportPlan
	}
	return nil
}

func (x *InvoiceSettingsAll) GetAdditionalItems() []*AdditionalItems {
	if x != nil {
		return x.AdditionalItems
	}
	return nil
}

func (x *InvoiceSettingsAll) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *InvoiceSettingsAll) GetAsps() *AccountSupportPlanSettings {
	if x != nil {
		return x.Asps
	}
	return nil
}

func (x *InvoiceSettingsAll) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *InvoiceSettingsAll) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *InvoiceSettingsAll) GetCalculationType() string {
	if x != nil {
		return x.CalculationType
	}
	return ""
}

func (x *InvoiceSettingsAll) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *InvoiceSettingsAll) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDiscountCalcLogic() string {
	if x != nil {
		return x.DiscountCalcLogic
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDiscountRate() float64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetDiscountTargetUsage() string {
	if x != nil {
		return x.DiscountTargetUsage
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDisplayCost() string {
	if x != nil {
		return x.DisplayCost
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDueDate() string {
	if x != nil {
		return x.DueDate
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDueDateCustomDay() float64 {
	if x != nil {
		return x.DueDateCustomDay
	}
	return 0
}

func (x *InvoiceSettingsAll) GetDueDateDay() string {
	if x != nil {
		return x.DueDateDay
	}
	return ""
}

func (x *InvoiceSettingsAll) GetDueDateMonth() string {
	if x != nil {
		return x.DueDateMonth
	}
	return ""
}

func (x *InvoiceSettingsAll) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetExchangeRateType() string {
	if x != nil {
		return x.ExchangeRateType
	}
	return ""
}

func (x *InvoiceSettingsAll) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *InvoiceSettingsAll) GetInvoiceNo() string {
	if x != nil {
		return x.InvoiceNo
	}
	return ""
}

func (x *InvoiceSettingsAll) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *InvoiceSettingsAll) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *InvoiceSettingsAll) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InvoiceSettingsAll) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *InvoiceSettingsAll) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *InvoiceSettingsAll) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *InvoiceSettingsAll) GetProjectCurrency() string {
	if x != nil {
		return x.ProjectCurrency
	}
	return ""
}

func (x *InvoiceSettingsAll) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *InvoiceSettingsAll) GetProjectLabel() string {
	if x != nil {
		return x.ProjectLabel
	}
	return ""
}

func (x *InvoiceSettingsAll) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFee() string {
	if x != nil {
		return x.SubstitutionFee
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFeeCalcTarget() string {
	if x != nil {
		return x.SubstitutionFeeCalcTarget
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFeeCalcType() string {
	if x != nil {
		return x.SubstitutionFeeCalcType
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFeeTargetUsage() string {
	if x != nil {
		return x.SubstitutionFeeTargetUsage
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSubstitutionFix() float64 {
	if x != nil {
		return x.SubstitutionFix
	}
	return 0
}

func (x *InvoiceSettingsAll) GetSubstitutionRate() float64 {
	if x != nil {
		return x.SubstitutionRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetSupportFee() string {
	if x != nil {
		return x.SupportFee
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSupportFeeCalcTarget() string {
	if x != nil {
		return x.SupportFeeCalcTarget
	}
	return ""
}

func (x *InvoiceSettingsAll) GetSupportFix() float64 {
	if x != nil {
		return x.SupportFix
	}
	return 0
}

func (x *InvoiceSettingsAll) GetSupportRate() float64 {
	if x != nil {
		return x.SupportRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetTaxRate() float64 {
	if x != nil {
		return x.TaxRate
	}
	return 0
}

func (x *InvoiceSettingsAll) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// AccountSupportPlan resource definition.
type AccountSupportPlan struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AwsEnterpriseOnRamp bool                   `protobuf:"varint,1,opt,name=awsEnterpriseOnRamp,proto3" json:"awsEnterpriseOnRamp,omitempty"`
	AwsBusiness         bool                   `protobuf:"varint,2,opt,name=awsBusiness,proto3" json:"awsBusiness,omitempty"`
	NoSupport           bool                   `protobuf:"varint,3,opt,name=noSupport,proto3" json:"noSupport,omitempty"`
	AwsDeveloper        bool                   `protobuf:"varint,4,opt,name=awsDeveloper,proto3" json:"awsDeveloper,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AccountSupportPlan) Reset() {
	*x = AccountSupportPlan{}
	mi := &file_api_invoice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountSupportPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSupportPlan) ProtoMessage() {}

func (x *AccountSupportPlan) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSupportPlan.ProtoReflect.Descriptor instead.
func (*AccountSupportPlan) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{14}
}

func (x *AccountSupportPlan) GetAwsEnterpriseOnRamp() bool {
	if x != nil {
		return x.AwsEnterpriseOnRamp
	}
	return false
}

func (x *AccountSupportPlan) GetAwsBusiness() bool {
	if x != nil {
		return x.AwsBusiness
	}
	return false
}

func (x *AccountSupportPlan) GetNoSupport() bool {
	if x != nil {
		return x.NoSupport
	}
	return false
}

func (x *AccountSupportPlan) GetAwsDeveloper() bool {
	if x != nil {
		return x.AwsDeveloper
	}
	return false
}

// AdditionalItems resource definition.
type AdditionalItems struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	UnitCost      float64                `protobuf:"fixed64,2,opt,name=unitCost,proto3" json:"unitCost,omitempty"`
	Total         float64                `protobuf:"fixed64,3,opt,name=total,proto3" json:"total,omitempty"`
	Quantity      float64                `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdditionalItems) Reset() {
	*x = AdditionalItems{}
	mi := &file_api_invoice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdditionalItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalItems) ProtoMessage() {}

func (x *AdditionalItems) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalItems.ProtoReflect.Descriptor instead.
func (*AdditionalItems) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{15}
}

func (x *AdditionalItems) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AdditionalItems) GetUnitCost() float64 {
	if x != nil {
		return x.UnitCost
	}
	return 0
}

func (x *AdditionalItems) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AdditionalItems) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// AccountSupportPlanSettings resource definition.
type AccountSupportPlanSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Accounts      map[string]string      `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountSupportPlanSettings) Reset() {
	*x = AccountSupportPlanSettings{}
	mi := &file_api_invoice_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountSupportPlanSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountSupportPlanSettings) ProtoMessage() {}

func (x *AccountSupportPlanSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_invoice_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountSupportPlanSettings.ProtoReflect.Descriptor instead.
func (*AccountSupportPlanSettings) Descriptor() ([]byte, []int) {
	return file_api_invoice_proto_rawDescGZIP(), []int{16}
}

func (x *AccountSupportPlanSettings) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AccountSupportPlanSettings) GetAccounts() map[string]string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

var File_api_invoice_proto protoreflect.FileDescriptor

const file_api_invoice_proto_rawDesc = "" +
	"\n" +
	"\x11api/invoice.proto\x12\vblueapi.api\"V\n" +
	"\x0eInvoiceMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\"\x94\x01\n" +
	"\aInvoice\x12+\n" +
	"\x03aws\x18\x01 \x01(\v2\x19.blueapi.api.VendorDetailR\x03aws\x12+\n" +
	"\x03gcp\x18\x02 \x01(\v2\x19.blueapi.api.VendorDetailR\x03gcp\x12/\n" +
	"\x05azure\x18\x03 \x01(\v2\x19.blueapi.api.VendorDetailR\x05azure\"\xc0\x02\n" +
	"\fVendorDetail\x125\n" +
	"\adetails\x18\x01 \x03(\v2\x1b.blueapi.api.AccountDetailsR\adetails\x12=\n" +
	"\fgroupDetails\x18\x02 \x03(\v2\x19.blueapi.api.GroupDetailsR\fgroupDetails\x12O\n" +
	"\x12groupCustomDetails\x18\x05 \x03(\v2\x1f.blueapi.api.GroupCustomDetailsR\x12groupCustomDetails\x12/\n" +
	"\x05total\x18\x03 \x03(\v2\x19.blueapi.api.InvoiceTotalR\x05total\x128\n" +
	"\bsettings\x18\x04 \x01(\v2\x1c.blueapi.api.InvoiceSettingsR\bsettings\"\x95\x02\n" +
	"\x0eAccountDetails\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x123\n" +
	"\adetails\x18\x03 \x03(\v2\x19.blueapi.api.UsageDetailsR\adetails\x12@\n" +
	"\rcustomDetails\x18\x04 \x03(\v2\x1a.blueapi.api.CustomDetailsR\rcustomDetails\x127\n" +
	"\n" +
	"feeDetails\x18\x05 \x03(\v2\x17.blueapi.api.FeeDetailsR\n" +
	"feeDetails\x12/\n" +
	"\x05total\x18\x06 \x03(\v2\x19.blueapi.api.AccountTotalR\x05total\"V\n" +
	"\fUsageDetails\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"W\n" +
	"\rCustomDetails\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"T\n" +
	"\n" +
	"FeeDetails\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"V\n" +
	"\fAccountTotal\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"V\n" +
	"\fInvoiceTotal\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"V\n" +
	"\fGroupDetails\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"\\\n" +
	"\x12GroupCustomDetails\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"[\n" +
	"\x11GroupUsageDetails\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"\xc5\x03\n" +
	"\x0fInvoiceSettings\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x18\n" +
	"\agroupId\x18\x02 \x01(\tR\agroupId\x12\x1c\n" +
	"\tgroupName\x18\x03 \x01(\tR\tgroupName\x12\x18\n" +
	"\acontact\x18\x04 \x01(\tR\acontact\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x18\n" +
	"\adueDate\x18\x06 \x01(\tR\adueDate\x12*\n" +
	"\x10dueDateCustomDay\x18\a \x01(\x01R\x10dueDateCustomDay\x12\x1e\n" +
	"\n" +
	"dueDateDay\x18\b \x01(\tR\n" +
	"dueDateDay\x12\"\n" +
	"\fdueDateMonth\x18\t \x01(\tR\fdueDateMonth\x12\"\n" +
	"\fexchangeRate\x18\n" +
	" \x01(\x01R\fexchangeRate\x12\x1c\n" +
	"\tinvoiceNo\x18\v \x01(\tR\tinvoiceNo\x12\x1a\n" +
	"\blanguage\x18\f \x01(\tR\blanguage\x12\x14\n" +
	"\x05phone\x18\r \x01(\tR\x05phone\x12\x16\n" +
	"\x06postal\x18\x0e \x01(\tR\x06postal\x12\x14\n" +
	"\x05title\x18\x0f \x01(\tR\x05title\"\xee\f\n" +
	"\x12InvoiceSettingsAll\x12O\n" +
	"\x12accountSupportPlan\x18\x01 \x01(\v2\x1f.blueapi.api.AccountSupportPlanR\x12accountSupportPlan\x12F\n" +
	"\x0fadditionalItems\x18\x02 \x03(\v2\x1c.blueapi.api.AdditionalItemsR\x0fadditionalItems\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12;\n" +
	"\x04asps\x18\x04 \x01(\v2'.blueapi.api.AccountSupportPlanSettingsR\x04asps\x12\x18\n" +
	"\agroupId\x18\x05 \x01(\tR\agroupId\x12\x1c\n" +
	"\tgroupName\x18\x06 \x01(\tR\tgroupName\x12(\n" +
	"\x0fcalculationType\x18\a \x01(\tR\x0fcalculationType\x12\x18\n" +
	"\acontact\x18\b \x01(\tR\acontact\x12\x1a\n" +
	"\bcurrency\x18\t \x01(\tR\bcurrency\x12,\n" +
	"\x11discountCalcLogic\x18\n" +
	" \x01(\tR\x11discountCalcLogic\x12\"\n" +
	"\fdiscountRate\x18\v \x01(\x01R\fdiscountRate\x120\n" +
	"\x13discountTargetUsage\x18\f \x01(\tR\x13discountTargetUsage\x12 \n" +
	"\vdisplayCost\x18\r \x01(\tR\vdisplayCost\x12\x18\n" +
	"\adueDate\x18\x0e \x01(\tR\adueDate\x12*\n" +
	"\x10dueDateCustomDay\x18\x0f \x01(\x01R\x10dueDateCustomDay\x12\x1e\n" +
	"\n" +
	"dueDateDay\x18\x10 \x01(\tR\n" +
	"dueDateDay\x12\"\n" +
	"\fdueDateMonth\x18\x11 \x01(\tR\fdueDateMonth\x12\"\n" +
	"\fexchangeRate\x18\x12 \x01(\x01R\fexchangeRate\x12*\n" +
	"\x10exchangeRateType\x18\x13 \x01(\tR\x10exchangeRateType\x12\x1a\n" +
	"\bimageUrl\x18\x14 \x01(\tR\bimageUrl\x12\x1c\n" +
	"\tinvoiceNo\x18\x15 \x01(\tR\tinvoiceNo\x12\x1a\n" +
	"\blanguage\x18\x16 \x01(\tR\blanguage\x12\x12\n" +
	"\x04memo\x18\x17 \x01(\tR\x04memo\x12\x12\n" +
	"\x04name\x18\x18 \x01(\tR\x04name\x12\x14\n" +
	"\x05phone\x18\x19 \x01(\tR\x05phone\x12\x16\n" +
	"\x06postal\x18\x1a \x01(\tR\x06postal\x12 \n" +
	"\vprojectCode\x18\x1b \x01(\tR\vprojectCode\x12(\n" +
	"\x0fprojectCurrency\x18\x1c \x01(\tR\x0fprojectCurrency\x12\x1c\n" +
	"\tprojectId\x18\x1d \x01(\tR\tprojectId\x12\"\n" +
	"\fprojectLabel\x18\x1e \x01(\tR\fprojectLabel\x12\x18\n" +
	"\aremarks\x18\x1f \x01(\tR\aremarks\x12(\n" +
	"\x0fsubstitutionFee\x18  \x01(\tR\x0fsubstitutionFee\x12<\n" +
	"\x19substitutionFeeCalcTarget\x18! \x01(\tR\x19substitutionFeeCalcTarget\x128\n" +
	"\x17substitutionFeeCalcType\x18\" \x01(\tR\x17substitutionFeeCalcType\x12>\n" +
	"\x1asubstitutionFeeTargetUsage\x18# \x01(\tR\x1asubstitutionFeeTargetUsage\x12(\n" +
	"\x0fsubstitutionFix\x18$ \x01(\x01R\x0fsubstitutionFix\x12*\n" +
	"\x10substitutionRate\x18% \x01(\x01R\x10substitutionRate\x12\x1e\n" +
	"\n" +
	"supportFee\x18& \x01(\tR\n" +
	"supportFee\x122\n" +
	"\x14supportFeeCalcTarget\x18' \x01(\tR\x14supportFeeCalcTarget\x12\x1e\n" +
	"\n" +
	"supportFix\x18( \x01(\x01R\n" +
	"supportFix\x12 \n" +
	"\vsupportRate\x18) \x01(\x01R\vsupportRate\x12\x18\n" +
	"\ataxRate\x18* \x01(\x01R\ataxRate\x12\x14\n" +
	"\x05title\x18+ \x01(\tR\x05title\"\xaa\x01\n" +
	"\x12AccountSupportPlan\x120\n" +
	"\x13awsEnterpriseOnRamp\x18\x01 \x01(\bR\x13awsEnterpriseOnRamp\x12 \n" +
	"\vawsBusiness\x18\x02 \x01(\bR\vawsBusiness\x12\x1c\n" +
	"\tnoSupport\x18\x03 \x01(\bR\tnoSupport\x12\"\n" +
	"\fawsDeveloper\x18\x04 \x01(\bR\fawsDeveloper\"u\n" +
	"\x0fAdditionalItems\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x1a\n" +
	"\bunitCost\x18\x02 \x01(\x01R\bunitCost\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x01R\x05total\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x01R\bquantity\"\xc6\x01\n" +
	"\x1aAccountSupportPlanSettings\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12Q\n" +
	"\baccounts\x18\x02 \x03(\v25.blueapi.api.AccountSupportPlanSettings.AccountsEntryR\baccounts\x1a;\n" +
	"\rAccountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01BQ\n" +
	"\x19cloud.alphaus.blueapi.apiB\fInvoiceProtoZ&github.com/alphauslabs/blue-sdk-go/apib\x06proto3"

var (
	file_api_invoice_proto_rawDescOnce sync.Once
	file_api_invoice_proto_rawDescData []byte
)

func file_api_invoice_proto_rawDescGZIP() []byte {
	file_api_invoice_proto_rawDescOnce.Do(func() {
		file_api_invoice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_invoice_proto_rawDesc), len(file_api_invoice_proto_rawDesc)))
	})
	return file_api_invoice_proto_rawDescData
}

var file_api_invoice_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_invoice_proto_goTypes = []any{
	(*InvoiceMessage)(nil),             // 0: blueapi.api.InvoiceMessage
	(*Invoice)(nil),                    // 1: blueapi.api.Invoice
	(*VendorDetail)(nil),               // 2: blueapi.api.VendorDetail
	(*AccountDetails)(nil),             // 3: blueapi.api.AccountDetails
	(*UsageDetails)(nil),               // 4: blueapi.api.UsageDetails
	(*CustomDetails)(nil),              // 5: blueapi.api.CustomDetails
	(*FeeDetails)(nil),                 // 6: blueapi.api.FeeDetails
	(*AccountTotal)(nil),               // 7: blueapi.api.AccountTotal
	(*InvoiceTotal)(nil),               // 8: blueapi.api.InvoiceTotal
	(*GroupDetails)(nil),               // 9: blueapi.api.GroupDetails
	(*GroupCustomDetails)(nil),         // 10: blueapi.api.GroupCustomDetails
	(*GroupUsageDetails)(nil),          // 11: blueapi.api.GroupUsageDetails
	(*InvoiceSettings)(nil),            // 12: blueapi.api.InvoiceSettings
	(*InvoiceSettingsAll)(nil),         // 13: blueapi.api.InvoiceSettingsAll
	(*AccountSupportPlan)(nil),         // 14: blueapi.api.AccountSupportPlan
	(*AdditionalItems)(nil),            // 15: blueapi.api.AdditionalItems
	(*AccountSupportPlanSettings)(nil), // 16: blueapi.api.AccountSupportPlanSettings
	nil,                                // 17: blueapi.api.AccountSupportPlanSettings.AccountsEntry
}
var file_api_invoice_proto_depIdxs = []int32{
	2,  // 0: blueapi.api.Invoice.aws:type_name -> blueapi.api.VendorDetail
	2,  // 1: blueapi.api.Invoice.gcp:type_name -> blueapi.api.VendorDetail
	2,  // 2: blueapi.api.Invoice.azure:type_name -> blueapi.api.VendorDetail
	3,  // 3: blueapi.api.VendorDetail.details:type_name -> blueapi.api.AccountDetails
	9,  // 4: blueapi.api.VendorDetail.groupDetails:type_name -> blueapi.api.GroupDetails
	10, // 5: blueapi.api.VendorDetail.groupCustomDetails:type_name -> blueapi.api.GroupCustomDetails
	8,  // 6: blueapi.api.VendorDetail.total:type_name -> blueapi.api.InvoiceTotal
	12, // 7: blueapi.api.VendorDetail.settings:type_name -> blueapi.api.InvoiceSettings
	4,  // 8: blueapi.api.AccountDetails.details:type_name -> blueapi.api.UsageDetails
	5,  // 9: blueapi.api.AccountDetails.customDetails:type_name -> blueapi.api.CustomDetails
	6,  // 10: blueapi.api.AccountDetails.feeDetails:type_name -> blueapi.api.FeeDetails
	7,  // 11: blueapi.api.AccountDetails.total:type_name -> blueapi.api.AccountTotal
	14, // 12: blueapi.api.InvoiceSettingsAll.accountSupportPlan:type_name -> blueapi.api.AccountSupportPlan
	15, // 13: blueapi.api.InvoiceSettingsAll.additionalItems:type_name -> blueapi.api.AdditionalItems
	16, // 14: blueapi.api.InvoiceSettingsAll.asps:type_name -> blueapi.api.AccountSupportPlanSettings
	17, // 15: blueapi.api.AccountSupportPlanSettings.accounts:type_name -> blueapi.api.AccountSupportPlanSettings.AccountsEntry
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_api_invoice_proto_init() }
func file_api_invoice_proto_init() {
	if File_api_invoice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_invoice_proto_rawDesc), len(file_api_invoice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_invoice_proto_goTypes,
		DependencyIndexes: file_api_invoice_proto_depIdxs,
		MessageInfos:      file_api_invoice_proto_msgTypes,
	}.Build()
	File_api_invoice_proto = out.File
	file_api_invoice_proto_goTypes = nil
	file_api_invoice_proto_depIdxs = nil
}
