// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        (unknown)
// source: api/aws/breakeven.proto

package aws

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AwsCostBreakeven struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Arn            string                 `protobuf:"bytes,1,opt,name=arn,proto3" json:"arn,omitempty"`
	StartDate      string                 `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate        string                 `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	BreakEvenPoint string                 `protobuf:"bytes,4,opt,name=breakEvenPoint,proto3" json:"breakEvenPoint,omitempty"`
	UpperRatio     float64                `protobuf:"fixed64,5,opt,name=upperRatio,proto3" json:"upperRatio,omitempty"`
	LowerRatio     float64                `protobuf:"fixed64,6,opt,name=lowerRatio,proto3" json:"lowerRatio,omitempty"`
	ChartData      []*ChartData           `protobuf:"bytes,7,rep,name=chartData,proto3" json:"chartData,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AwsCostBreakeven) Reset() {
	*x = AwsCostBreakeven{}
	mi := &file_api_aws_breakeven_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AwsCostBreakeven) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsCostBreakeven) ProtoMessage() {}

func (x *AwsCostBreakeven) ProtoReflect() protoreflect.Message {
	mi := &file_api_aws_breakeven_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsCostBreakeven.ProtoReflect.Descriptor instead.
func (*AwsCostBreakeven) Descriptor() ([]byte, []int) {
	return file_api_aws_breakeven_proto_rawDescGZIP(), []int{0}
}

func (x *AwsCostBreakeven) GetArn() string {
	if x != nil {
		return x.Arn
	}
	return ""
}

func (x *AwsCostBreakeven) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *AwsCostBreakeven) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *AwsCostBreakeven) GetBreakEvenPoint() string {
	if x != nil {
		return x.BreakEvenPoint
	}
	return ""
}

func (x *AwsCostBreakeven) GetUpperRatio() float64 {
	if x != nil {
		return x.UpperRatio
	}
	return 0
}

func (x *AwsCostBreakeven) GetLowerRatio() float64 {
	if x != nil {
		return x.LowerRatio
	}
	return 0
}

func (x *AwsCostBreakeven) GetChartData() []*ChartData {
	if x != nil {
		return x.ChartData
	}
	return nil
}

type ChartData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Date           string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	ActualOndemand float64                `protobuf:"fixed64,2,opt,name=actualOndemand,proto3" json:"actualOndemand,omitempty"`
	ActualCost     float64                `protobuf:"fixed64,3,opt,name=actualCost,proto3" json:"actualCost,omitempty"`
	Utilization    float64                `protobuf:"fixed64,4,opt,name=utilization,proto3" json:"utilization,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChartData) Reset() {
	*x = ChartData{}
	mi := &file_api_aws_breakeven_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartData) ProtoMessage() {}

func (x *ChartData) ProtoReflect() protoreflect.Message {
	mi := &file_api_aws_breakeven_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartData.ProtoReflect.Descriptor instead.
func (*ChartData) Descriptor() ([]byte, []int) {
	return file_api_aws_breakeven_proto_rawDescGZIP(), []int{1}
}

func (x *ChartData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ChartData) GetActualOndemand() float64 {
	if x != nil {
		return x.ActualOndemand
	}
	return 0
}

func (x *ChartData) GetActualCost() float64 {
	if x != nil {
		return x.ActualCost
	}
	return 0
}

func (x *ChartData) GetUtilization() float64 {
	if x != nil {
		return x.Utilization
	}
	return 0
}

var File_api_aws_breakeven_proto protoreflect.FileDescriptor

var file_api_aws_breakeven_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x77, 0x73, 0x2f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x65,
	0x76, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x62, 0x6c, 0x75, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x77, 0x73, 0x22, 0xfe, 0x01, 0x0a, 0x10, 0x41,
	0x77, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x76, 0x65, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x72, 0x65,
	0x61, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x77, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x89, 0x01, 0x0a, 0x09,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4f, 0x6e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x4f, 0x6e, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x43,
	0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x75, 0x74, 0x69, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x0a, 0x1d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x75, 0x73, 0x2e, 0x62, 0x6c, 0x75, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x77, 0x73, 0x42, 0x14, 0x41, 0x70, 0x69, 0x41, 0x77, 0x73,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x65, 0x76, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x2a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x75, 0x73, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x62, 0x6c, 0x75, 0x65, 0x2d, 0x73, 0x64, 0x6b, 0x2d,
	0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x77, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_aws_breakeven_proto_rawDescOnce sync.Once
	file_api_aws_breakeven_proto_rawDescData = file_api_aws_breakeven_proto_rawDesc
)

func file_api_aws_breakeven_proto_rawDescGZIP() []byte {
	file_api_aws_breakeven_proto_rawDescOnce.Do(func() {
		file_api_aws_breakeven_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_aws_breakeven_proto_rawDescData)
	})
	return file_api_aws_breakeven_proto_rawDescData
}

var file_api_aws_breakeven_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_aws_breakeven_proto_goTypes = []any{
	(*AwsCostBreakeven)(nil), // 0: blueapi.api.aws.AwsCostBreakeven
	(*ChartData)(nil),        // 1: blueapi.api.aws.ChartData
}
var file_api_aws_breakeven_proto_depIdxs = []int32{
	1, // 0: blueapi.api.aws.AwsCostBreakeven.chartData:type_name -> blueapi.api.aws.ChartData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_aws_breakeven_proto_init() }
func file_api_aws_breakeven_proto_init() {
	if File_api_aws_breakeven_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_aws_breakeven_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_aws_breakeven_proto_goTypes,
		DependencyIndexes: file_api_aws_breakeven_proto_depIdxs,
		MessageInfos:      file_api_aws_breakeven_proto_msgTypes,
	}.Build()
	File_api_aws_breakeven_proto = out.File
	file_api_aws_breakeven_proto_rawDesc = nil
	file_api_aws_breakeven_proto_goTypes = nil
	file_api_aws_breakeven_proto_depIdxs = nil
}
