// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/user.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User's unique id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The user's parent. If empty or non-existent, it means this user is a root user;
	// otherwise, it's a subuser.
	Parent string `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	// The attributes (key/value pair) of the user. If hierarchy is supported, it will be
	// separated by '/', such as 'key/subkey=value'. See https://alphauslabs.github.io/blueapi/
	// for the list of supported attributes.
	Metadata      map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_api_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *User) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SubUser struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Sub-user's unique id.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The id of the parent user. If this is empty, the sub-user is invalid.
	ParentId string `protobuf:"bytes,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	// Attributes specific to the sub-user.
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Role details for the sub-user, if applicable.
	Roles         []*SubUserRole `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubUser) Reset() {
	*x = SubUser{}
	mi := &file_api_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubUser) ProtoMessage() {}

func (x *SubUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubUser.ProtoReflect.Descriptor instead.
func (*SubUser) Descriptor() ([]byte, []int) {
	return file_api_user_proto_rawDescGZIP(), []int{1}
}

func (x *SubUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubUser) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *SubUser) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SubUser) GetRoles() []*SubUserRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

type SubUserRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Role ID assigned to the sub-user.
	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	// Permissions granted to the sub-user for this role.
	Permissions []string `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Temporary: Tracks the sub-user ID to verify the role is assigned to the correct user.
	// This field will be removed after testing is complete.
	SubUserId     string `protobuf:"bytes,3,opt,name=subUserId,proto3" json:"subUserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubUserRole) Reset() {
	*x = SubUserRole{}
	mi := &file_api_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubUserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubUserRole) ProtoMessage() {}

func (x *SubUserRole) ProtoReflect() protoreflect.Message {
	mi := &file_api_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubUserRole.ProtoReflect.Descriptor instead.
func (*SubUserRole) Descriptor() ([]byte, []int) {
	return file_api_user_proto_rawDescGZIP(), []int{2}
}

func (x *SubUserRole) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *SubUserRole) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *SubUserRole) GetSubUserId() string {
	if x != nil {
		return x.SubUserId
	}
	return ""
}

var File_api_user_proto protoreflect.FileDescriptor

const file_api_user_proto_rawDesc = "" +
	"\n" +
	"\x0eapi/user.proto\x12\vblueapi.api\"\xa8\x01\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06parent\x18\x02 \x01(\tR\x06parent\x12;\n" +
	"\bmetadata\x18\x03 \x03(\v2\x1f.blueapi.api.User.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe2\x01\n" +
	"\aSubUser\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bparentId\x18\x02 \x01(\tR\bparentId\x12>\n" +
	"\bmetadata\x18\x03 \x03(\v2\".blueapi.api.SubUser.MetadataEntryR\bmetadata\x12.\n" +
	"\x05roles\x18\x04 \x03(\v2\x18.blueapi.api.SubUserRoleR\x05roles\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"e\n" +
	"\vSubUserRole\x12\x16\n" +
	"\x06roleId\x18\x01 \x01(\tR\x06roleId\x12 \n" +
	"\vpermissions\x18\x02 \x03(\tR\vpermissions\x12\x1c\n" +
	"\tsubUserId\x18\x03 \x01(\tR\tsubUserIdBQ\n" +
	"\x19cloud.alphaus.blueapi.apiB\fApiUserProtoZ&github.com/alphauslabs/blue-sdk-go/apib\x06proto3"

var (
	file_api_user_proto_rawDescOnce sync.Once
	file_api_user_proto_rawDescData []byte
)

func file_api_user_proto_rawDescGZIP() []byte {
	file_api_user_proto_rawDescOnce.Do(func() {
		file_api_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_user_proto_rawDesc), len(file_api_user_proto_rawDesc)))
	})
	return file_api_user_proto_rawDescData
}

var file_api_user_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_user_proto_goTypes = []any{
	(*User)(nil),        // 0: blueapi.api.User
	(*SubUser)(nil),     // 1: blueapi.api.SubUser
	(*SubUserRole)(nil), // 2: blueapi.api.SubUserRole
	nil,                 // 3: blueapi.api.User.MetadataEntry
	nil,                 // 4: blueapi.api.SubUser.MetadataEntry
}
var file_api_user_proto_depIdxs = []int32{
	3, // 0: blueapi.api.User.metadata:type_name -> blueapi.api.User.MetadataEntry
	4, // 1: blueapi.api.SubUser.metadata:type_name -> blueapi.api.SubUser.MetadataEntry
	2, // 2: blueapi.api.SubUser.roles:type_name -> blueapi.api.SubUserRole
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_user_proto_init() }
func file_api_user_proto_init() {
	if File_api_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_user_proto_rawDesc), len(file_api_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_user_proto_goTypes,
		DependencyIndexes: file_api_user_proto_depIdxs,
		MessageInfos:      file_api_user_proto_msgTypes,
	}.Build()
	File_api_user_proto = out.File
	file_api_user_proto_goTypes = nil
	file_api_user_proto_depIdxs = nil
}
