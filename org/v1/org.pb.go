// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: org/v1/org.proto

package org

import (
	ripple "github.com/alphauslabs/blue-sdk-go/api/ripple"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for the Organization.CreateOrg rpc.
type CreateOrgRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Organization's email
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Required. Organization's description or company name
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. User can decide to let the system generates the password.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// To be used for onboarding profile
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Role          string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	Usage         string `protobuf:"bytes,6,opt,name=usage,proto3" json:"usage,omitempty"`
	Intention     string `protobuf:"bytes,7,opt,name=intention,proto3" json:"intention,omitempty"`
	IsAuth0Signup bool   `protobuf:"varint,8,opt,name=isAuth0Signup,proto3" json:"isAuth0Signup,omitempty"`
	// Optional. Customer Id from AWS marketplace
	CustomerId string `protobuf:"bytes,9,opt,name=customerId,proto3" json:"customerId,omitempty"`
	// Optional. User locale. Default value is en if not supplied.
	Locale string `protobuf:"bytes,10,opt,name=locale,proto3" json:"locale,omitempty"`
	// Optional. Auth0 user id for users registering using social login.
	Auth0UserId   string `protobuf:"bytes,11,opt,name=auth0UserId,proto3" json:"auth0UserId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrgRequest) Reset() {
	*x = CreateOrgRequest{}
	mi := &file_org_v1_org_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgRequest) ProtoMessage() {}

func (x *CreateOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_v1_org_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgRequest.ProtoReflect.Descriptor instead.
func (*CreateOrgRequest) Descriptor() ([]byte, []int) {
	return file_org_v1_org_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOrgRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateOrgRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOrgRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateOrgRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateOrgRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CreateOrgRequest) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *CreateOrgRequest) GetIntention() string {
	if x != nil {
		return x.Intention
	}
	return ""
}

func (x *CreateOrgRequest) GetIsAuth0Signup() bool {
	if x != nil {
		return x.IsAuth0Signup
	}
	return false
}

func (x *CreateOrgRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CreateOrgRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *CreateOrgRequest) GetAuth0UserId() string {
	if x != nil {
		return x.Auth0UserId
	}
	return ""
}

// Response message for the Organization.CreateOrg rpc.
type CreateOrgResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Org           *ripple.Org            `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrgResponse) Reset() {
	*x = CreateOrgResponse{}
	mi := &file_org_v1_org_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgResponse) ProtoMessage() {}

func (x *CreateOrgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_v1_org_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgResponse.ProtoReflect.Descriptor instead.
func (*CreateOrgResponse) Descriptor() ([]byte, []int) {
	return file_org_v1_org_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOrgResponse) GetOrg() *ripple.Org {
	if x != nil {
		return x.Org
	}
	return nil
}

func (x *CreateOrgResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Request message for the Organization.SendVerification rpc.
type SendVerificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendVerificationRequest) Reset() {
	*x = SendVerificationRequest{}
	mi := &file_org_v1_org_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerificationRequest) ProtoMessage() {}

func (x *SendVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_v1_org_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerificationRequest.ProtoReflect.Descriptor instead.
func (*SendVerificationRequest) Descriptor() ([]byte, []int) {
	return file_org_v1_org_proto_rawDescGZIP(), []int{2}
}

// Request message for the Organization.VerifyOrg rpc.
type VerifyOrgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyOrgRequest) Reset() {
	*x = VerifyOrgRequest{}
	mi := &file_org_v1_org_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOrgRequest) ProtoMessage() {}

func (x *VerifyOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_v1_org_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOrgRequest.ProtoReflect.Descriptor instead.
func (*VerifyOrgRequest) Descriptor() ([]byte, []int) {
	return file_org_v1_org_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyOrgRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Request message for the Organization.GetOrg rpc.
type GetOrgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrgRequest) Reset() {
	*x = GetOrgRequest{}
	mi := &file_org_v1_org_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrgRequest) ProtoMessage() {}

func (x *GetOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_v1_org_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrgRequest.ProtoReflect.Descriptor instead.
func (*GetOrgRequest) Descriptor() ([]byte, []int) {
	return file_org_v1_org_proto_rawDescGZIP(), []int{4}
}

// Request message for the Organization.UpdateMetadata rpc.
type UpdateMetadataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMetadataRequest) Reset() {
	*x = UpdateMetadataRequest{}
	mi := &file_org_v1_org_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetadataRequest) ProtoMessage() {}

func (x *UpdateMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_v1_org_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateMetadataRequest) Descriptor() ([]byte, []int) {
	return file_org_v1_org_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpdateMetadataRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Request message for the Organization.UpdatePassword rpc.
type UpdatePasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldPassword   string                 `protobuf:"bytes,1,opt,name=oldPassword,proto3" json:"oldPassword,omitempty"`
	NewPassword   string                 `protobuf:"bytes,2,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePasswordRequest) Reset() {
	*x = UpdatePasswordRequest{}
	mi := &file_org_v1_org_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePasswordRequest) ProtoMessage() {}

func (x *UpdatePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_v1_org_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return file_org_v1_org_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UpdatePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// Request message for the Organization.DeleteOrg rpc.
type DeleteOrgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOrgRequest) Reset() {
	*x = DeleteOrgRequest{}
	mi := &file_org_v1_org_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOrgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgRequest) ProtoMessage() {}

func (x *DeleteOrgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_org_v1_org_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrgRequest) Descriptor() ([]byte, []int) {
	return file_org_v1_org_proto_rawDescGZIP(), []int{7}
}

var File_org_v1_org_proto protoreflect.FileDescriptor

const file_org_v1_org_proto_rawDesc = "" +
	"\n" +
	"\x10org/v1/org.proto\x12\x0eblueapi.org.v1\x1a\x14api/ripple/org.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xc2\x02\n" +
	"\x10CreateOrgRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x12\n" +
	"\x04role\x18\x05 \x01(\tR\x04role\x12\x14\n" +
	"\x05usage\x18\x06 \x01(\tR\x05usage\x12\x1c\n" +
	"\tintention\x18\a \x01(\tR\tintention\x12$\n" +
	"\risAuth0Signup\x18\b \x01(\bR\risAuth0Signup\x12\x1e\n" +
	"\n" +
	"customerId\x18\t \x01(\tR\n" +
	"customerId\x12\x16\n" +
	"\x06locale\x18\n" +
	" \x01(\tR\x06locale\x12 \n" +
	"\vauth0UserId\x18\v \x01(\tR\vauth0UserId\"Z\n" +
	"\x11CreateOrgResponse\x12)\n" +
	"\x03org\x18\x01 \x01(\v2\x17.blueapi.api.ripple.OrgR\x03org\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\x19\n" +
	"\x17SendVerificationRequest\"$\n" +
	"\x10VerifyOrgRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"\x0f\n" +
	"\rGetOrgRequest\"?\n" +
	"\x15UpdateMetadataRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"[\n" +
	"\x15UpdatePasswordRequest\x12 \n" +
	"\voldPassword\x18\x01 \x01(\tR\voldPassword\x12 \n" +
	"\vnewPassword\x18\x02 \x01(\tR\vnewPassword\"\x12\n" +
	"\x10DeleteOrgRequest2\xe8\x06\n" +
	"\fOrganization\x12d\n" +
	"\tCreateOrg\x12 .blueapi.org.v1.CreateOrgRequest\x1a!.blueapi.org.v1.CreateOrgResponse\"\x12\x82\xd3\xe4\x93\x02\f:\x01*\"\a/org/v1\x12u\n" +
	"\x10SendVerification\x12'.blueapi.org.v1.SendVerificationRequest\x1a\x16.google.protobuf.Empty\" \x82\xd3\xe4\x93\x02\x1a\"\x18/org/v1:sendVerification\x12]\n" +
	"\tVerifyOrg\x12 .blueapi.org.v1.VerifyOrgRequest\x1a\x16.google.protobuf.Empty\"\x16\x82\xd3\xe4\x93\x02\x10\"\x0e/org/v1:verify\x12Q\n" +
	"\x06GetOrg\x12\x1d.blueapi.org.v1.GetOrgRequest\x1a\x17.blueapi.api.ripple.Org\"\x0f\x82\xd3\xe4\x93\x02\t\x12\a/org/v1\x12l\n" +
	"\x0eUpdateMetadata\x12%.blueapi.org.v1.UpdateMetadataRequest\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\x1a\x10/org/v1/metadata\x12j\n" +
	"\x0eUpdatePassword\x12%.blueapi.org.v1.UpdatePasswordRequest\x1a\x16.google.protobuf.Empty\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\x1a\x0e/org/v1/passwd\x12V\n" +
	"\tDeleteOrg\x12 .blueapi.org.v1.DeleteOrgRequest\x1a\x16.google.protobuf.Empty\"\x0f\x82\xd3\xe4\x93\x02\t*\a/org/v1\x1a\x96\x01\x92A\x92\x01\x12C(BETA) Organization API. Base URL: https://api.alphaus.cloud/m/blue\x1aK\n" +
	"\x12Service definition\x125https://github.com/alphauslabs/blueapi/tree/main/org/B\xe5\t\x92A\x9c\t\x12\xfa\b\n" +
	"\x12Blue API reference\x12\xdf\bAlphaus provides an API for interacting with its services. Blue API is a RESTful API that can be accessed by an HTTP client such as `curl`, or any HTTP library which is part of most modern programming languages. This API reference is autogenerated from [protocol buffers](https://developers.google.com/protocol-buffers) defined in this [repository](https://github.com/alphauslabs/blueapi), together with our supported [client libraries](https://alphauslabs.github.io/docs/blueapi/client-sdks/). See the official [documentation](https://alphauslabs.github.io/docs/blueapi/overview/) for more information.\n" +
	"\n" +
	"You may encounter the following feature maturity indicators:\n" +
	"- **(WORK-IN-PROGRESS)** - Development is ongoing, don't use yet;\n" +
	"- **(BETA)** - New or experimental features, subject to changes; and\n" +
	"- **(DEPRECATED)** - Outdated or replaced features.\n" +
	"\n" +
	"Some endpoints, especially those that return lists of resources, have streaming responses; newline-separated stream of “chunks”. Each chunk is an envelope that can contain either a response message or an error. Only the last chunk will include an error, if any.2\x02v1\x1a\x11api.alphaus.cloud\"\a/m/blue*\x01\x02\n" +
	"\x15cloud.alphaus.api.orgB\bOrgProtoZ\"github.com/alphauslabs/blueapi/orgb\x06proto3"

var (
	file_org_v1_org_proto_rawDescOnce sync.Once
	file_org_v1_org_proto_rawDescData []byte
)

func file_org_v1_org_proto_rawDescGZIP() []byte {
	file_org_v1_org_proto_rawDescOnce.Do(func() {
		file_org_v1_org_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_org_v1_org_proto_rawDesc), len(file_org_v1_org_proto_rawDesc)))
	})
	return file_org_v1_org_proto_rawDescData
}

var file_org_v1_org_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_org_v1_org_proto_goTypes = []any{
	(*CreateOrgRequest)(nil),        // 0: blueapi.org.v1.CreateOrgRequest
	(*CreateOrgResponse)(nil),       // 1: blueapi.org.v1.CreateOrgResponse
	(*SendVerificationRequest)(nil), // 2: blueapi.org.v1.SendVerificationRequest
	(*VerifyOrgRequest)(nil),        // 3: blueapi.org.v1.VerifyOrgRequest
	(*GetOrgRequest)(nil),           // 4: blueapi.org.v1.GetOrgRequest
	(*UpdateMetadataRequest)(nil),   // 5: blueapi.org.v1.UpdateMetadataRequest
	(*UpdatePasswordRequest)(nil),   // 6: blueapi.org.v1.UpdatePasswordRequest
	(*DeleteOrgRequest)(nil),        // 7: blueapi.org.v1.DeleteOrgRequest
	(*ripple.Org)(nil),              // 8: blueapi.api.ripple.Org
	(*emptypb.Empty)(nil),           // 9: google.protobuf.Empty
}
var file_org_v1_org_proto_depIdxs = []int32{
	8, // 0: blueapi.org.v1.CreateOrgResponse.org:type_name -> blueapi.api.ripple.Org
	0, // 1: blueapi.org.v1.Organization.CreateOrg:input_type -> blueapi.org.v1.CreateOrgRequest
	2, // 2: blueapi.org.v1.Organization.SendVerification:input_type -> blueapi.org.v1.SendVerificationRequest
	3, // 3: blueapi.org.v1.Organization.VerifyOrg:input_type -> blueapi.org.v1.VerifyOrgRequest
	4, // 4: blueapi.org.v1.Organization.GetOrg:input_type -> blueapi.org.v1.GetOrgRequest
	5, // 5: blueapi.org.v1.Organization.UpdateMetadata:input_type -> blueapi.org.v1.UpdateMetadataRequest
	6, // 6: blueapi.org.v1.Organization.UpdatePassword:input_type -> blueapi.org.v1.UpdatePasswordRequest
	7, // 7: blueapi.org.v1.Organization.DeleteOrg:input_type -> blueapi.org.v1.DeleteOrgRequest
	1, // 8: blueapi.org.v1.Organization.CreateOrg:output_type -> blueapi.org.v1.CreateOrgResponse
	9, // 9: blueapi.org.v1.Organization.SendVerification:output_type -> google.protobuf.Empty
	9, // 10: blueapi.org.v1.Organization.VerifyOrg:output_type -> google.protobuf.Empty
	8, // 11: blueapi.org.v1.Organization.GetOrg:output_type -> blueapi.api.ripple.Org
	9, // 12: blueapi.org.v1.Organization.UpdateMetadata:output_type -> google.protobuf.Empty
	9, // 13: blueapi.org.v1.Organization.UpdatePassword:output_type -> google.protobuf.Empty
	9, // 14: blueapi.org.v1.Organization.DeleteOrg:output_type -> google.protobuf.Empty
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_org_v1_org_proto_init() }
func file_org_v1_org_proto_init() {
	if File_org_v1_org_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_org_v1_org_proto_rawDesc), len(file_org_v1_org_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_org_v1_org_proto_goTypes,
		DependencyIndexes: file_org_v1_org_proto_depIdxs,
		MessageInfos:      file_org_v1_org_proto_msgTypes,
	}.Build()
	File_org_v1_org_proto = out.File
	file_org_v1_org_proto_goTypes = nil
	file_org_v1_org_proto_depIdxs = nil
}
