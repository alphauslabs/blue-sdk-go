// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: kvstore/v1/kvstore.proto

package kvstore

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	mi := &file_kvstore_v1_kvstore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kvstore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kvstore_proto_rawDescGZIP(), []int{0}
}

func (x *KeyValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Request message for the KvStore.Scan rpc.
type ScanRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. If non-empty, translates to SQL's `LIKE` operand.
	// Return all keys by default.
	Like          string `protobuf:"bytes,1,opt,name=like,proto3" json:"like,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanRequest) Reset() {
	*x = ScanRequest{}
	mi := &file_kvstore_v1_kvstore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRequest) ProtoMessage() {}

func (x *ScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kvstore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRequest.ProtoReflect.Descriptor instead.
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kvstore_proto_rawDescGZIP(), []int{1}
}

func (x *ScanRequest) GetLike() string {
	if x != nil {
		return x.Like
	}
	return ""
}

// Request message for the KvStore.Read rpc.
type ReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The key to read.
	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	mi := &file_kvstore_v1_kvstore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kvstore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kvstore_proto_rawDescGZIP(), []int{2}
}

func (x *ReadRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Request message for the KvStore.Delete rpc.
type DeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The key to delete. To delete all keys, set this to `-` (hyphen).
	// You can also prefix this with `like:` which translates to SQL's LIKE operator.
	// For example, `like:%pattern%`.
	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_kvstore_v1_kvstore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kvstore_v1_kvstore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_kvstore_v1_kvstore_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_kvstore_v1_kvstore_proto protoreflect.FileDescriptor

const file_kvstore_v1_kvstore_proto_rawDesc = "" +
	"\n" +
	"\x18kvstore/v1/kvstore.proto\x12\x12blueapi.kvstore.v1\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"2\n" +
	"\bKeyValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"!\n" +
	"\vScanRequest\x12\x12\n" +
	"\x04like\x18\x01 \x01(\tR\x04like\"\x1f\n" +
	"\vReadRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"!\n" +
	"\rDeleteRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key2\x8a\x04\n" +
	"\aKvStore\x12Y\n" +
	"\x04Scan\x12\x1f.blueapi.kvstore.v1.ScanRequest\x1a\x1c.blueapi.kvstore.v1.KeyValue\"\x10\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/v1/keys0\x01\x12]\n" +
	"\x04Read\x12\x1f.blueapi.kvstore.v1.ReadRequest\x1a\x1c.blueapi.kvstore.v1.KeyValue\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/keys/{key}\x12M\n" +
	"\x05Write\x12\x1c.blueapi.kvstore.v1.KeyValue\x1a\x16.google.protobuf.Empty\"\x0e\x82\xd3\xe4\x93\x02\b:\x01*\"\x03/v1\x12[\n" +
	"\x06Delete\x12!.blueapi.kvstore.v1.DeleteRequest\x1a\x16.google.protobuf.Empty\"\x16\x82\xd3\xe4\x93\x02\x10*\x0e/v1/keys/{key}\x1a\x98\x01\x92A\x94\x01\x12A(BETA) KvStore API. Base URL: https://api.alphaus.cloud/m/blue/kv\x1aO\n" +
	"\x12Service definition\x129https://github.com/alphauslabs/blueapi/tree/main/kvstore/BQ\n" +
	"\x19cloud.alphaus.api.kvstoreB\fKvStoreProtoZ&github.com/alphauslabs/blueapi/kvstoreb\x06proto3"

var (
	file_kvstore_v1_kvstore_proto_rawDescOnce sync.Once
	file_kvstore_v1_kvstore_proto_rawDescData []byte
)

func file_kvstore_v1_kvstore_proto_rawDescGZIP() []byte {
	file_kvstore_v1_kvstore_proto_rawDescOnce.Do(func() {
		file_kvstore_v1_kvstore_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kvstore_v1_kvstore_proto_rawDesc), len(file_kvstore_v1_kvstore_proto_rawDesc)))
	})
	return file_kvstore_v1_kvstore_proto_rawDescData
}

var file_kvstore_v1_kvstore_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_kvstore_v1_kvstore_proto_goTypes = []any{
	(*KeyValue)(nil),      // 0: blueapi.kvstore.v1.KeyValue
	(*ScanRequest)(nil),   // 1: blueapi.kvstore.v1.ScanRequest
	(*ReadRequest)(nil),   // 2: blueapi.kvstore.v1.ReadRequest
	(*DeleteRequest)(nil), // 3: blueapi.kvstore.v1.DeleteRequest
	(*emptypb.Empty)(nil), // 4: google.protobuf.Empty
}
var file_kvstore_v1_kvstore_proto_depIdxs = []int32{
	1, // 0: blueapi.kvstore.v1.KvStore.Scan:input_type -> blueapi.kvstore.v1.ScanRequest
	2, // 1: blueapi.kvstore.v1.KvStore.Read:input_type -> blueapi.kvstore.v1.ReadRequest
	0, // 2: blueapi.kvstore.v1.KvStore.Write:input_type -> blueapi.kvstore.v1.KeyValue
	3, // 3: blueapi.kvstore.v1.KvStore.Delete:input_type -> blueapi.kvstore.v1.DeleteRequest
	0, // 4: blueapi.kvstore.v1.KvStore.Scan:output_type -> blueapi.kvstore.v1.KeyValue
	0, // 5: blueapi.kvstore.v1.KvStore.Read:output_type -> blueapi.kvstore.v1.KeyValue
	4, // 6: blueapi.kvstore.v1.KvStore.Write:output_type -> google.protobuf.Empty
	4, // 7: blueapi.kvstore.v1.KvStore.Delete:output_type -> google.protobuf.Empty
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kvstore_v1_kvstore_proto_init() }
func file_kvstore_v1_kvstore_proto_init() {
	if File_kvstore_v1_kvstore_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kvstore_v1_kvstore_proto_rawDesc), len(file_kvstore_v1_kvstore_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kvstore_v1_kvstore_proto_goTypes,
		DependencyIndexes: file_kvstore_v1_kvstore_proto_depIdxs,
		MessageInfos:      file_kvstore_v1_kvstore_proto_msgTypes,
	}.Build()
	File_kvstore_v1_kvstore_proto = out.File
	file_kvstore_v1_kvstore_proto_goTypes = nil
	file_kvstore_v1_kvstore_proto_depIdxs = nil
}
